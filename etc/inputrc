# none, visible or audible
set bell-style visible

# Ask before displaying >40 items
# Since $WINDIR $PATH var can be in $PATH, this could list
# all window executables in C:\WINDOWS
set completion-query-items 40

# Ignore case for the command-line-completion functionality
# on:  default on a Windows style console
# off: default on a *nix style console
set completion-ignore-case on

# disable/enable 8bit input
set input-meta on
set output-meta on
set convert-meta off

# visible-stats
# Append a mark according to the file type in a listing
set visible-stats off
set mark-directories on

# Show all instead of beeping first
set show-all-if-ambiguous off

# MSYSTEM is emacs based
$if mode=emacs
	# Common to Console & RXVT
	"\C-?": backward-kill-line     		# Ctrl-BackSpace
	"\e[2~": paste-from-clipboard  		# "Ins. Key"
	"\e[5~": beginning-of-history  		# Page up
	"\e[6~": end-of-history        		# Page down

	$if term=msys # RXVT
		"\e[7~": beginning-of-line      # Home Key
		"\e[8~": end-of-line            # End Key
		"\e[11~": display-shell-version # F1
		"\e[15~": re-read-init-file     # F5
                "\e[12~": "Function Key 2"
                "\e[13~": "Function Key 3"
                "\e[14~": "Function Key 4"
                "\e[17~": "Function Key 6"
                "\e[18~": "Function Key 7"
                "\e[19~": "Function Key 8"
                "\e[20~": "Function Key 9"
                "\e[21~": "Function Key 10"
	$else
	# Eh, normal Console is not really cygwin anymore, is it? Using 'else' instead. -mstormo
	# $if term=cygwin # Console
		"\e[1~": beginning-of-line      # Home Key
		"\e[4~": end-of-line            # End Key
                "\e[17~": "Function Key 6"
                "\e[18~": "Function Key 7"
                "\e[19~": "Function Key 8"
                "\e[20~": "Function Key 9"
                "\e[21~": "Function Key 10"
                "\e[23~": "Function Key 11"
	$endif
$endif
