.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLIVP 1"
.TH PERLIVP 1 "2011-04-26" "perl v5.8.8" "Perl Programmers Reference Guide"
.SH "NAME"
perlivp \- Perl Installation Verification Procedure
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBperlivp\fR [\fB\-a\fR] [\fB\-p\fR] [\fB\-v\fR] [\fB\-h\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBperlivp\fR program is set up at Perl source code build time to test the
Perl version it was built under.  It can be used after running:
.PP
.Vb 1
\&    make install
.Ve
.PP
(or your platform's equivalent procedure) to verify that \fBperl\fR and its
libraries have been installed correctly.  A correct installation is verified
by output that looks like:
.PP
.Vb 2
\&    ok 1
\&    ok 2
.Ve
.PP
etc.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h\fR help" 5
.IX Item "-h help"
Prints out a brief help message.
.IP "\fB\-a\fR run all tests" 5
.IX Item "-a run all tests"
Normally tests for optional features are skipped.  With \-a all tests
are executed.
.IP "\fB\-p\fR print preface" 5
.IX Item "-p print preface"
Gives a description of each test prior to performing it.
.IP "\fB\-v\fR verbose" 5
.IX Item "-v verbose"
Gives more detailed information about each test, after it has been performed.
Note that any failed tests ought to print out some extra information whether
or not \-v is thrown.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.ie n .IP "* print ""# Perl binary `$perlpath' does not appear executable.\en"";" 4
.el .IP "* print ``# Perl binary `$perlpath' does not appear executable.\en'';" 4
.IX Item "print # Perl binary `$perlpath' does not appear executable.n;"
Likely to occur for a perl binary that was not properly installed.
Correct by conducting a proper installation.
.ie n .IP "* print ""# Perl version `$]' installed, expected $ivp_VERSION.\en"";" 4
.el .IP "* print ``# Perl version `$]' installed, expected \f(CW$ivp_VERSION\fR.\en'';" 4
.IX Item "print # Perl version `$]' installed, expected $ivp_VERSION.n;"
Likely to occur for a perl that was not properly installed.
Correct by conducting a proper installation.
.ie n .IP "* print ""# Perl \e@INC directory `$_' does not appear to exist.\en"";" 4
.el .IP "* print ``# Perl \e@INC directory `$_' does not appear to exist.\en'';" 4
.IX Item "print # Perl @INC directory `$_' does not appear to exist.n;"
Likely to occur for a perl library tree that was not properly installed.
Correct by conducting a proper installation.
.ie n .IP "* print ""# Needed module `$_' does not appear to be properly installed.\en"";" 4
.el .IP "* print ``# Needed module `$_' does not appear to be properly installed.\en'';" 4
.IX Item "print # Needed module `$_' does not appear to be properly installed.n;"
One of the two modules that is used by perlivp was not present in the 
installation.  This is a serious error since it adversely affects perlivp's
ability to function.  You may be able to correct this by performing a
proper perl installation.
.ie n .IP "* print ""# Required module `$_' does not appear to be properly installed.\en"";" 4
.el .IP "* print ``# Required module `$_' does not appear to be properly installed.\en'';" 4
.IX Item "print # Required module `$_' does not appear to be properly installed.n;"
An attempt to \f(CW\*(C`eval "require $module"\*(C'\fR failed, even though the list of 
extensions indicated that it should succeed.  Correct by conducting a proper 
installation.
.ie n .IP "* print ""# Unnecessary module `bLuRfle' appears to be installed.\en"";" 4
.el .IP "* print ``# Unnecessary module `bLuRfle' appears to be installed.\en'';" 4
.IX Item "print # Unnecessary module `bLuRfle' appears to be installed.n;"
This test not coming out ok could indicate that you have in fact installed 
a bLuRfle.pm module or that the \f(CW\*(C`eval " require \e"$module_name.pm\e"; "\*(C'\fR
test may give misleading results with your installation of perl.  If yours
is the latter case then please let the author know.
.ie n .IP "* print ""# file"",+($#missing == 0) ? '' : 's',"" missing from installation:\en"";" 4
.el .IP "* print ``# file'',+($#missing == 0) ? '' : 's',`` missing from installation:\en'';" 4
.IX Item "print # file,+($#missing == 0) ? '' : 's', missing from installation:n;"
One or more files turned up missing according to a run of 
\&\f(CW\*(C`ExtUtils::Installed \-> validate()\*(C'\fR over your installation.
Correct by conducting a proper installation.
.ie n .IP "* print ""# Perl header `$_' does not appear to be properly installed.\en"";" 4
.el .IP "* print ``# Perl header `$_' does not appear to be properly installed.\en'';" 4
.IX Item "print # Perl header `$_' does not appear to be properly installed.n;"
Correct by running \fBh2ph\fR over your system's C header files.  If necessary, 
edit the resulting *.ph files to eliminate perl syntax errors.
.PP
For further information on how to conduct a proper installation consult the 
\&\s-1INSTALL\s0 file that comes with the perl source and the \s-1README\s0 file for your 
platform.
.SH "AUTHOR"
.IX Header "AUTHOR"
Peter Prymmer
