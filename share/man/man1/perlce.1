.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLCE 1"
.TH PERLCE 1 "2006-01-07" "perl v5.8.8" "Perl Programmers Reference Guide"
.SH "NAME"
perlce \- Perl for WinCE
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This file gives the instructions for building Perl5.8 and above for
WinCE.  Please read and understand the terms under which this
software is distributed.
.SH "BUILD"
.IX Header "BUILD"
This section describes the steps to be performed to build PerlCE.
You may find additional and newer information about building perl
for WinCE using following \s-1URL:\s0
.PP
.Vb 1
\&  http://perlce.sourceforge.net
.Ve
.PP
There should also be pre-built binaries there.
.PP
Don't be confused by large size of downloaded distribution or constructed
binaries: entire distribution could be large for WinCE ideology, but
you may strip it at your wish and use only required parts.
.Sh "Tools & \s-1SDK\s0"
.IX Subsection "Tools & SDK"
For compiling, you need following:
.IP "* Microsoft Embedded Visual Tools" 4
.IX Item "Microsoft Embedded Visual Tools"
.PD 0
.IP "* Microsoft Visual \*(C+" 4
.IX Item "Microsoft Visual "
.IP "* Rainer Keuchel's celib-sources" 4
.IX Item "Rainer Keuchel's celib-sources"
.IP "* Rainer Keuchel's console-sources" 4
.IX Item "Rainer Keuchel's console-sources"
.PD
.PP
Needed source files can be downloaded via:
www.rainer\-keuchel.de/wince/dirlist.html
.Sh "Make"
.IX Subsection "Make"
Please pay attention that starting from 5.8.0 miniperl *is* built
and it facilitates in further building process. This means that
in addition to compiler installation for mobile device you also need
to have Microsoft Visual \*(C+ installed as well.
.PP
On the bright side, you do not need to edit any files from ./win32
subdirectory. Normally you only need to edit ./wince/compile.bat
to reflect your system and run it.
.PP
File ./wince/compile.bat is actually a wrapper to call
nmake \-f makefile.ce with appropriate parameters and it accepts extra
parameters and forwards them to \*(L"nmake\*(R" command as additional
arguments. You should pass target this way.
.PP
To prepare distribution you need to do following:
.IP "* go to ./wince subdirectory" 4
.IX Item "go to ./wince subdirectory"
.PD 0
.IP "* edit file compile.bat" 4
.IX Item "edit file compile.bat"
.IP "* run compile.bat" 4
.IX Item "run compile.bat"
.IP "* run compile.bat dist" 4
.IX Item "run compile.bat dist"
.PD
.PP
makefile.ce has \s-1CROSS_NAME\s0 macro, and it is used further to refer to
your cross-compilation scheme. You could assign a name to it, but this
is not necessary, because by default it is assigned after your machine
configuration name, such as \*(L"wince\-sh3\-hpc\-wce211\*(R", and this is enough
to distinguish different builds at the same time. This option could be
handy for several different builds on same platform to perform, say,
threaded build. In a following example we assume that all required
environment variables are set properly for C cross-compiler (a special
*.bat file could fit perfectly to this purpose) and your compile.bat
has proper \*(L"\s-1MACHINE\s0\*(R" parameter set, to, say, \*(L"wince\-mips\-pocket\-wce300\*(R".
.PP
.Vb 4
\&  compile.bat
\&  compile.bat dist
\&  compile.bat CROSS_NAME=mips-wce300-thr "USE_ITHREADS=define" "USE_IMP_SYS=define" "USE_MULTI=define"
\&  compile.bat CROSS_NAME=mips-wce300-thr "USE_ITHREADS=define" "USE_IMP_SYS=define" "USE_MULTI=define" dist
.Ve
.PP
If all goes okay and no errors during a build, you'll get two independent
distributions: \*(L"wince\-mips\-pocket\-wce300\*(R" and \*(L"mips\-wce300\-thr\*(R".
.PP
Target 'dist' prepares distribution file set. Target 'zipdist' performs
same as 'dist' but additionally compresses distribution files into zip
archive.
.PP
\&\s-1NOTE:\s0 during a build there could be created a number (or one) of Config.pm
for cross-compilation (\*(L"foreign\*(R" Config.pm) and those are hidden inside
\&../xlib/$(\s-1CROSS_NAME\s0) with other auxilary files, but, and this is important to
note, there should be *no* Config.pm for host miniperl.
If you'll get an error that perl could not find Config.pm somewhere in building
process this means something went wrong. Most probably you forgot to
specify a cross-compilation when invoking miniperl.exe to Makefile.PL
When building an extension for cross-compilation your command line should
look like
.PP
.Vb 1
\&  ..\eminiperl.exe -I..\elib -MCross=mips-wce300-thr Makefile.PL
.Ve
.PP
or just
.PP
.Vb 1
\&  ..\eminiperl.exe -I..\elib -MCross Makefile.PL
.Ve
.PP
to refer a cross-compilation that was created last time.
.PP
If you decided to build with fcrypt.c file, please refer to \s-1README\s0.win32
file, as long as all legal considerations and steps to do are exactly same 
in this case.
.PP
All questions related to building for WinCE devices could be asked in
perlce\-users@lists.sourceforge.net mailing list.
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
The port for Win32 was used as a reference.
.SH "AUTHORS"
.IX Header "AUTHORS"
Rainer Keuchel (keuchel@netwave.de)
Vadim Konovalov (vkonovalov@spb.lucent.com)
