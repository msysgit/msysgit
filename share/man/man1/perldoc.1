.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERLDOC 1"
.TH PERLDOC 1 "2005-08-08" "perl v5.8.8" "Perl Programmers Reference Guide"
.SH "NAME"
perldoc \- Look up Perl documentation in Pod format.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBperldoc\fR [\fB\-h\fR] [\fB\-v\fR] [\fB\-t\fR] [\fB\-u\fR] [\fB\-m\fR] [\fB\-l\fR] [\fB\-F\fR]
[\fB\-i\fR] [\fB\-V\fR] [\fB\-T\fR] [\fB\-r\fR]
[\fB\-d\f(BIdestination_file\fB\fR]
[\fB\-o\f(BIformatname\fB\fR]
[\fB\-M\f(BIFormatterClassName\fB\fR]
[\fB\-w\f(BIformatteroption:value\fB\fR]
[\fB\-n\fR\fInroff-replacement\fR]
[\fB\-X\fR]
PageName|ModuleName|ProgramName
.PP
\&\fBperldoc\fR \fB\-f\fR BuiltinFunction
.PP
\&\fBperldoc\fR \fB\-q\fR \s-1FAQ\s0 Keyword
.PP
See below for more description of the switches.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fIperldoc\fR looks up a piece of documentation in .pod format that is embedded
in the perl installation tree or in a perl script, and displays it via
\&\f(CW\*(C`pod2man | nroff \-man | $PAGER\*(C'\fR. (In addition, if running under \s-1HP\-UX\s0,
\&\f(CW\*(C`col \-x\*(C'\fR will be used.) This is primarily used for the documentation for
the perl library modules.
.PP
Your system may also have man pages installed for those modules, in
which case you can probably just use the \fIman\fR\|(1) command.
.PP
If you are looking for a table of contents to the Perl library modules
documentation, see the perltoc page.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h\fR" 5
.IX Item "-h"
Prints out a brief \fBh\fRelp message.
.IP "\fB\-v\fR" 5
.IX Item "-v"
Describes search for the item in detail (\fBv\fRerbosely).
.IP "\fB\-t\fR" 5
.IX Item "-t"
Display docs using plain \fBt\fRext converter, instead of nroff. This may be faster,
but it probably won't look as nice.
.IP "\fB\-u\fR" 5
.IX Item "-u"
Skip the real Pod formatting, and just show the raw Pod source (\fBU\fRnformatted)
.IP "\fB\-m\fR \fImodule\fR" 5
.IX Item "-m module"
Display the entire module: both code and unformatted pod documentation.
This may be useful if the docs don't explain a function in the detail
you need, and you'd like to inspect the code directly; perldoc will find
the file for you and simply hand it off for display.
.IP "\fB\-l\fR" 5
.IX Item "-l"
Display on\fBl\fRy the file name of the module found.
.IP "\fB\-F\fR" 5
.IX Item "-F"
Consider arguments as file names; no search in directories will be performed.
.IP "\fB\-f\fR \fIperlfunc\fR" 5
.IX Item "-f perlfunc"
The \fB\-f\fR option followed by the name of a perl built in function will
extract the documentation of this function from perlfunc.
.Sp
Example:
.Sp
.Vb 1
\&      perldoc -f sprintf
.Ve
.IP "\fB\-q\fR \fIperlfaq-search-regexp\fR" 5
.IX Item "-q perlfaq-search-regexp"
The \fB\-q\fR option takes a regular expression as an argument.  It will search
the \fBq\fRuestion headings in perlfaq[1\-9] and print the entries matching
the regular expression.  Example: \f(CW\*(C`perldoc \-q shuffle\*(C'\fR
.IP "\fB\-T\fR" 5
.IX Item "-T"
This specifies that the output is not to be sent to a pager, but is to
be sent right to \s-1STDOUT\s0.
.IP "\fB\-d\fR \fIdestination-filename\fR" 5
.IX Item "-d destination-filename"
This specifies that the output is to be sent neither to a pager nor
to \s-1STDOUT\s0, but is to be saved to the specified filename.  Example:
\&\f(CW\*(C`perldoc \-oLaTeX \-dtextwrapdocs.tex Text::Wrap\*(C'\fR
.IP "\fB\-o\fR \fIoutput-formatname\fR" 5
.IX Item "-o output-formatname"
This specifies that you want Perldoc to try using a Pod-formatting
class for the output format that you specify.  For example:
\&\f(CW\*(C`\-oman\*(C'\fR.  This is actually just a wrapper around the \f(CW\*(C`\-M\*(C'\fR switch;
using \f(CW\*(C`\-o\f(CIformatname\f(CW\*(C'\fR just looks for a loadable class by adding
that format name (with different capitalizations) to the end of
different classname prefixes.
.Sp
For example, \f(CW\*(C`\-oLaTeX\*(C'\fR currently tries all of the following classes:
Pod::Perldoc::ToLaTeX Pod::Perldoc::Tolatex Pod::Perldoc::ToLatex
Pod::Perldoc::ToLATEX Pod::Simple::LaTeX Pod::Simple::latex
Pod::Simple::Latex Pod::Simple::LATEX Pod::LaTeX Pod::latex Pod::Latex
Pod::LATEX.
.IP "\fB\-M\fR \fImodule-name\fR" 5
.IX Item "-M module-name"
This specifies the module that you want to try using for formatting the
pod.  The class must at least provide a \f(CW\*(C`parse_from_file\*(C'\fR method.
For example: \f(CW\*(C`perldoc \-MPod::Perldoc::ToChecker\*(C'\fR.
.Sp
You can specify several classes to try by joining them with commas
or semicolons, as in \f(CW\*(C`\-MTk::SuperPod;Tk::Pod\*(C'\fR.
.IP "\fB\-w\fR \fIoption:value\fR or \fB\-w\fR \fIoption\fR" 5
.IX Item "-w option:value or -w option"
This specifies an option to call the formatter \fBw\fRith.  For example,
\&\f(CW\*(C`\-w textsize:15\*(C'\fR will call
\&\f(CW\*(C`$formatter\->textsize(15)\*(C'\fR on the formatter object before it is
used to format the object.  For this to be valid, the formatter class
must provide such a method, and the value you pass should be valid.
(So if \f(CW\*(C`textsize\*(C'\fR expects an integer, and you do \f(CW\*(C`\-w textsize:big\*(C'\fR,
expect trouble.)
.Sp
You can use \f(CW\*(C`\-w optionname\*(C'\fR (without a value) as shorthand for
\&\f(CW\*(C`\-w optionname:\f(CI\s-1TRUE\s0\f(CW\*(C'\fR.  This is presumably useful in cases of on/off
features like: \f(CW\*(C`\-w page_numbering\*(C'\fR.
.Sp
You can use a \*(L"=\*(R" instead of the \*(L":\*(R", as in: \f(CW\*(C`\-w textsize=15\*(C'\fR.  This
might be more (or less) convenient, depending on what shell you use.
.IP "\fB\-X\fR" 5
.IX Item "-X"
Use an index if it is present \*(-- the \fB\-X\fR option looks for an entry
whose basename matches the name given on the command line in the file
\&\f(CW\*(C`$Config{archlib}/pod.idx\*(C'\fR. The \fIpod.idx\fR file should contain fully
qualified filenames, one per line.
.IP "\fBPageName|ModuleName|ProgramName\fR" 5
.IX Item "PageName|ModuleName|ProgramName"
The item you want to look up.  Nested modules (such as \f(CW\*(C`File::Basename\*(C'\fR)
are specified either as \f(CW\*(C`File::Basename\*(C'\fR or \f(CW\*(C`File/Basename\*(C'\fR.  You may also
give a descriptive name of a page, such as \f(CW\*(C`perlfunc\*(C'\fR.
.IP "\fB\-n\fR \fIsome-formatter\fR" 5
.IX Item "-n some-formatter"
Specify replacement for nroff
.IP "\fB\-r\fR" 5
.IX Item "-r"
Recursive search.
.IP "\fB\-i\fR" 5
.IX Item "-i"
Ignore case.
.IP "\fB\-V\fR" 5
.IX Item "-V"
Displays the version of perldoc you're running.
.SH "SECURITY"
.IX Header "SECURITY"
Because \fBperldoc\fR does not run properly tainted, and is known to
have security issues, when run as the superuser it will attempt to
drop privileges by setting the effective and real IDs to nobody's
or nouser's account, or \-2 if unavailable.  If it cannot relinquish
its privileges, it will not run.  
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
Any switches in the \f(CW\*(C`PERLDOC\*(C'\fR environment variable will be used before the
command line arguments.
.PP
Useful values for \f(CW\*(C`PERLDOC\*(C'\fR include \f(CW\*(C`\-oman\*(C'\fR, \f(CW\*(C`\-otext\*(C'\fR, \f(CW\*(C`\-otk\*(C'\fR, \f(CW\*(C`\-ortf\*(C'\fR,
\&\f(CW\*(C`\-oxml\*(C'\fR, and so on, depending on what modules you have on hand; or
exactly specify the formatter class with \f(CW\*(C`\-MPod::Perldoc::ToMan\*(C'\fR
or the like.
.PP
\&\f(CW\*(C`perldoc\*(C'\fR also searches directories
specified by the \f(CW\*(C`PERL5LIB\*(C'\fR (or \f(CW\*(C`PERLLIB\*(C'\fR if \f(CW\*(C`PERL5LIB\*(C'\fR is not
defined) and \f(CW\*(C`PATH\*(C'\fR environment variables.
(The latter is so that embedded pods for executables, such as
\&\f(CW\*(C`perldoc\*(C'\fR itself, are available.)
.PP
\&\f(CW\*(C`perldoc\*(C'\fR will use, in order of preference, the pager defined in
\&\f(CW\*(C`PERLDOC_PAGER\*(C'\fR, \f(CW\*(C`MANPAGER\*(C'\fR, or \f(CW\*(C`PAGER\*(C'\fR before trying to find a pager
on its own. (\f(CW\*(C`MANPAGER\*(C'\fR is not used if \f(CW\*(C`perldoc\*(C'\fR was told to display
plain text or unformatted pod.)
.PP
One useful value for \f(CW\*(C`PERLDOC_PAGER\*(C'\fR is \f(CW\*(C`less \-+C \-E\*(C'\fR.
.PP
Having \s-1PERLDOCDEBUG\s0 set to a positive integer will make perldoc emit
even more descriptive output than the \f(CW\*(C`\-v\*(C'\fR switch does \*(-- the higher the
number, the more it emits.
.SH "AUTHOR"
.IX Header "AUTHOR"
Current maintainer: Sean M. Burke, <sburke@cpan.org>
.PP
Past contributors are:
Kenneth Albanowski <kjahds@kjahds.com>,
Andy Dougherty  <doughera@lafcol.lafayette.edu>,
and many others.
