.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SDBM_File 3pm"
.TH SDBM_File 3pm "2001-09-21" "perl v5.8.8" "Perl Programmers Reference Guide"
.SH "NAME"
SDBM_File \- Tied access to sdbm files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& use Fcntl;   # For O_RDWR, O_CREAT, etc.
\& use SDBM_File;
.Ve
.PP
.Vb 2
\& tie(%h, 'SDBM_File', 'filename', O_RDWR|O_CREAT, 0666)
\&   or die "Couldn't tie SDBM file 'filename': $!; aborting";
.Ve
.PP
.Vb 4
\& # Now read and change the hash
\& $h{newkey} = newvalue;
\& print $h{oldkey}; 
\& ...
.Ve
.PP
.Vb 1
\& untie %h;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`SDBM_File\*(C'\fR establishes a connection between a Perl hash variable and
a file in SDBM_File format;.  You can manipulate the data in the file
just as if it were in a Perl hash, but when your program exits, the
data will remain in the file, to be used the next time your program
runs.
.PP
Use \f(CW\*(C`SDBM_File\*(C'\fR with the Perl built-in \f(CW\*(C`tie\*(C'\fR function to establish
the connection between the variable and the file.  The arguments to
\&\f(CW\*(C`tie\*(C'\fR should be:
.IP "1." 4
The hash variable you want to tie.
.IP "2." 4
The string \f(CW"SDBM_File"\fR.  (Ths tells Perl to use the \f(CW\*(C`SDBM_File\*(C'\fR
package to perform the functions of the hash.)
.IP "3." 4
The name of the file you want to tie to the hash.  
.IP "4." 4
Flags.  Use one of:
.RS 4
.ie n .IP """O_RDONLY""" 2
.el .IP "\f(CWO_RDONLY\fR" 2
.IX Item "O_RDONLY"
Read-only access to the data in the file.
.ie n .IP """O_WRONLY""" 2
.el .IP "\f(CWO_WRONLY\fR" 2
.IX Item "O_WRONLY"
Write-only access to the data in the file.
.ie n .IP """O_RDWR""" 2
.el .IP "\f(CWO_RDWR\fR" 2
.IX Item "O_RDWR"
Both read and write access.
.RE
.RS 4
.Sp
If you want to create the file if it does not exist, add \f(CW\*(C`O_CREAT\*(C'\fR to
any of these, as in the example.  If you omit \f(CW\*(C`O_CREAT\*(C'\fR and the file
does not already exist, the \f(CW\*(C`tie\*(C'\fR call will fail.
.RE
.IP "5." 4
The default permissions to use if a new file is created.  The actual
permissions will be modified by the user's umask, so you should
probably use 0666 here. (See \*(L"umask\*(R" in perlfunc.)
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
On failure, the \f(CW\*(C`tie\*(C'\fR call returns an undefined value and probably
sets \f(CW$!\fR to contain the reason the file could not be tied.
.ie n .Sh """sdbm store returned \-1, errno 22, key ""..."" at ..."""
.el .Sh "\f(CWsdbm store returned \-1, errno 22, key ``...'' at ...\fP"
.IX Subsection "sdbm store returned -1, errno 22, key ""..."" at ..."
This warning is emitted when you try to store a key or a value that
is too long.  It means that the change was not recorded in the
database.  See \s-1BUGS\s0 \s-1AND\s0 \s-1WARNINGS\s0 below.
.SH "BUGS AND WARNINGS"
.IX Header "BUGS AND WARNINGS"
There are a number of limits on the size of the data that you can
store in the \s-1SDBM\s0 file.  The most important is that the length of a
key, plus the length of its associated value, may not exceed 1008
bytes.
.PP
See \*(L"tie\*(R" in perlfunc, perldbmfilter, Fcntl
