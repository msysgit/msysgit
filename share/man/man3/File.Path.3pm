.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "File::Path 3pm"
.TH File::Path 3pm "2001-09-21" "perl v5.8.8" "Perl Programmers Reference Guide"
.SH "NAME"
File::Path \- create or remove directory trees
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use File::Path;
.Ve
.PP
.Vb 2
\&    mkpath(['/foo/bar/baz', 'blurfl/quux'], 1, 0711);
\&    rmtree(['foo/bar/baz', 'blurfl/quux'], 1, 1);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \f(CW\*(C`mkpath\*(C'\fR function provides a convenient way to create directories, even
if your \f(CW\*(C`mkdir\*(C'\fR kernel call won't create more than one level of directory at
a time.  \f(CW\*(C`mkpath\*(C'\fR takes three arguments:
.IP "\(bu" 4
the name of the path to create, or a reference
to a list of paths to create,
.IP "\(bu" 4
a boolean value, which if \s-1TRUE\s0 will cause \f(CW\*(C`mkpath\*(C'\fR
to print the name of each directory as it is created
(defaults to \s-1FALSE\s0), and
.IP "\(bu" 4
the numeric mode to use when creating the directories
(defaults to 0777), to be modified by the current umask.
.PP
It returns a list of all directories (including intermediates, determined
using the Unix '/' separator) created.
.PP
If a system error prevents a directory from being created, then the
\&\f(CW\*(C`mkpath\*(C'\fR function throws a fatal error with \f(CW\*(C`Carp::croak\*(C'\fR. This error
can be trapped with an \f(CW\*(C`eval\*(C'\fR block:
.PP
.Vb 4
\&  eval { mkpath($dir) };
\&  if ($@) {
\&    print "Couldn't create $dir: $@";
\&  }
.Ve
.PP
Similarly, the \f(CW\*(C`rmtree\*(C'\fR function provides a convenient way to delete a
subtree from the directory structure, much like the Unix command \f(CW\*(C`rm \-r\*(C'\fR.
\&\f(CW\*(C`rmtree\*(C'\fR takes three arguments:
.IP "\(bu" 4
the root of the subtree to delete, or a reference to
a list of roots.  All of the files and directories
below each root, as well as the roots themselves,
will be deleted.
.IP "\(bu" 4
a boolean value, which if \s-1TRUE\s0 will cause \f(CW\*(C`rmtree\*(C'\fR to
print a message each time it examines a file, giving the
name of the file, and indicating whether it's using \f(CW\*(C`rmdir\*(C'\fR
or \f(CW\*(C`unlink\*(C'\fR to remove it, or that it's skipping it.
(defaults to \s-1FALSE\s0)
.IP "\(bu" 4
a boolean value, which if \s-1TRUE\s0 will cause \f(CW\*(C`rmtree\*(C'\fR to
skip any files to which you do not have delete access
(if running under \s-1VMS\s0) or write access (if running
under another \s-1OS\s0).  This will change in the future when
a criterion for 'delete permission' under OSs other
than \s-1VMS\s0 is settled.  (defaults to \s-1FALSE\s0)
.PP
It returns the number of files successfully deleted.  Symlinks are
simply deleted and not followed.
.PP
\&\fB\s-1NOTE:\s0\fR There are race conditions internal to the implementation of
\&\f(CW\*(C`rmtree\*(C'\fR making it unsafe to use on directory trees which may be
altered or moved while \f(CW\*(C`rmtree\*(C'\fR is running, and in particular on any
directory trees with any path components or subdirectories potentially
writable by untrusted users.
.PP
Additionally, if the third parameter is not \s-1TRUE\s0 and \f(CW\*(C`rmtree\*(C'\fR is
interrupted, it may leave files and directories with permissions altered
to allow deletion (and older versions of this module would even set
files and directories to world\-read/writable!)
.PP
Note also that the occurrence of errors in \f(CW\*(C`rmtree\*(C'\fR can be determined \fIonly\fR
by trapping diagnostic messages using \f(CW$SIG{_\|_WARN_\|_}\fR; it is not apparent
from the return value.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.IP "\(bu" 4
On Windows, if \f(CW\*(C`mkpath\*(C'\fR gives you the warning: \fBNo such file or
directory\fR, this may mean that you've exceeded your filesystem's
maximum path length.
.SH "AUTHORS"
.IX Header "AUTHORS"
Tim Bunce <\fITim.Bunce@ig.co.uk\fR> and
Charles Bailey <\fIbailey@newman.upenn.edu\fR>
