
# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is autogenerated by buildtoc from all the other pods.
# Edit those files and run buildtoc --build-toc to effect changes.

=head1 NAME

perltoc - perl documentation table of contents

=head1 DESCRIPTION

This page provides a brief table of contents for the rest of the Perl
documentation set.  It is meant to be scanned quickly or grepped
through to locate the proper section you're looking for.

=head1 BASIC DOCUMENTATION

=head2 perl - Practical Extraction and Report Language

=over 4

=item SYNOPSIS

=over 4

=item Overview

=item Tutorials

=item Reference Manual

=item Internals and C Language Interface

=item Miscellaneous

=item Language-Specific

=item Platform-Specific

=back

=item DESCRIPTION

=item AVAILABILITY

=item ENVIRONMENT

=item AUTHOR

=item FILES

=item SEE ALSO

=item DIAGNOSTICS

=item BUGS

=item NOTES

=back

=head2 perlintro -- a brief introduction and overview of Perl

=over 4

=item DESCRIPTION

=over 4

=item What is Perl?

=item Running Perl programs

=item Basic syntax overview

=item Perl variable types

Scalars, Arrays, Hashes

=item Variable scoping

=item Conditional and looping constructs

if, while, for, foreach

=item Builtin operators and functions

Arithmetic, Numeric comparison, String comparison, Boolean logic,
Miscellaneous

=item Files and I/O

=item Regular expressions

Simple matching, Simple substitution, More complex regular expressions,
Parentheses for capturing, Other regexp features

=item Writing subroutines

=item OO Perl

=item Using Perl modules

=back

=item AUTHOR

=back

=head2 perlreftut - Mark's very short tutorial about references

=over 4

=item DESCRIPTION

=item Who Needs Complicated Data Structures?

=item The Solution

=item Syntax

=over 4

=item Making References

=item Using References

=item An Example

=item Arrow Rule

=back

=item Solution

=item The Rest

=item Summary

=item Credits

=over 4

=item Distribution Conditions

=back

=back

=head2 perldsc - Perl Data Structures Cookbook

=over 4

=item DESCRIPTION

arrays of arrays, hashes of arrays, arrays of hashes, hashes of hashes,
more elaborate constructs

=item REFERENCES
X<reference> X<dereference> X<dereferencing> X<pointer>

=item COMMON MISTAKES

=item CAVEAT ON PRECEDENCE
X<dereference, precedence> X<dereferencing, precedence>

=item WHY YOU SHOULD ALWAYS C<use strict>

=item DEBUGGING
X<data structure, debugging> X<complex data structure, debugging>
X<AoA, debugging> X<HoA, debugging> X<AoH, debugging> X<HoH, debugging>
X<array of arrays, debugging> X<hash of arrays, debugging>
X<array of hashes, debugging> X<hash of hashes, debugging>

=item CODE EXAMPLES

=item ARRAYS OF ARRAYS
X<array of arrays> X<AoA>

=over 4

=item Declaration of an ARRAY OF ARRAYS

=item Generation of an ARRAY OF ARRAYS

=item Access and Printing of an ARRAY OF ARRAYS

=back

=item HASHES OF ARRAYS
X<hash of arrays> X<HoA>

=over 4

=item Declaration of a HASH OF ARRAYS

=item Generation of a HASH OF ARRAYS

=item Access and Printing of a HASH OF ARRAYS

=back

=item ARRAYS OF HASHES
X<array of hashes> X<AoH>

=over 4

=item Declaration of an ARRAY OF HASHES

=item Generation of an ARRAY OF HASHES

=item Access and Printing of an ARRAY OF HASHES

=back

=item HASHES OF HASHES
X<hass of hashes> X<HoH>

=over 4

=item Declaration of a HASH OF HASHES

=item Generation of a HASH OF HASHES

=item Access and Printing of a HASH OF HASHES

=back

=item MORE ELABORATE RECORDS
X<record> X<structure> X<struct>

=over 4

=item Declaration of MORE ELABORATE RECORDS

=item Declaration of a HASH OF COMPLEX RECORDS

=item Generation of a HASH OF COMPLEX RECORDS

=back

=item Database Ties

=item SEE ALSO

=item AUTHOR

=back

=head2 perllol - Manipulating Arrays of Arrays in Perl

=over 4

=item DESCRIPTION

=over 4

=item Declaration and Access of Arrays of Arrays

=item Growing Your Own

=item Access and Printing

=item Slices

=back

=item SEE ALSO

=item AUTHOR

=back

=head2 perlrequick - Perl regular expressions quick start

=over 4

=item DESCRIPTION

=item The Guide

=over 4

=item Simple word matching

=item Using character classes

=item Matching this or that

=item Grouping things and hierarchical matching

=item Extracting matches

=item Matching repetitions

=item More matching

=item Search and replace

=item The split operator

=back

=item BUGS

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=over 4

=item Acknowledgments

=back

=back

=head2 perlretut - Perl regular expressions tutorial

=over 4

=item DESCRIPTION

=item Part 1: The basics

=over 4

=item Simple word matching

=item Using character classes

=item Matching this or that

=item Grouping things and hierarchical matching

=item Extracting matches

=item Matching repetitions

=item Building a regexp

=item Using regular expressions in Perl

=back

=item Part 2: Power tools

=over 4

=item More on characters, strings, and character classes

=item Compiling and saving regular expressions

=item Embedding comments and modifiers in a regular expression

=item Non-capturing groupings

=item Looking ahead and looking behind

=item Using independent subexpressions to prevent backtracking

=item Conditional expressions

=item A bit of magic: executing Perl code in a regular expression

=item Pragmas and debugging

=back

=item BUGS

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=over 4

=item Acknowledgments

=back

=back

=head2 perlboot - Beginner's Object-Oriented Tutorial

=over 4

=item DESCRIPTION

=over 4

=item If we could talk to the animals...

=item Introducing the method invocation arrow

=item Invoking a barnyard

=item The extra parameter of method invocation

=item Calling a second method to simplify things

=item Inheriting the windpipes

=item A few notes about @ISA

=item Overriding the methods

=item Starting the search from a different place

=item The SUPER way of doing things

=item Where we're at so far...

=item A horse is a horse, of course of course -- or is it?

=item Invoking an instance method

=item Accessing the instance data

=item How to build a horse

=item Inheriting the constructor

=item Making a method work with either classes or instances

=item Adding parameters to a method

=item More interesting instances

=item A horse of a different color

=item Summary

=back

=item SEE ALSO

=item COPYRIGHT

=back

=head2 perltoot - Tom's object-oriented tutorial for perl

=over 4

=item DESCRIPTION

=item Creating a Class

=over 4

=item Object Representation

=item Class Interface

=item Constructors and Instance Methods

=item Planning for the Future: Better Constructors

=item Destructors

=item Other Object Methods

=back

=item Class Data

=over 4

=item Accessing Class Data

=item Debugging Methods

=item Class Destructors

=item Documenting the Interface

=back

=item Aggregation

=item Inheritance

=over 4

=item Overridden Methods

=item Multiple Inheritance

=item UNIVERSAL: The Root of All Objects

=back

=item Alternate Object Representations

=over 4

=item Arrays as Objects

=item Closures as Objects

=back

=item AUTOLOAD: Proxy Methods

=over 4

=item Autoloaded Data Methods

=item Inherited Autoloaded Data Methods

=back

=item Metaclassical Tools

=over 4

=item Class::Struct

=item Data Members as Variables

=back

=item NOTES

=over 4

=item Object Terminology

=back

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=item COPYRIGHT

=over 4

=item Acknowledgments

=back

=back

=head2 perltooc - Tom's OO Tutorial for Class Data in Perl

=over 4

=item DESCRIPTION

=item Class Data in a Can

=item Class Data as Package Variables

=over 4

=item Putting All Your Eggs in One Basket

=item Inheritance Concerns

=item The Eponymous Meta-Object

=item Indirect References to Class Data

=item Monadic Classes

=item Translucent Attributes

=back

=item Class Data as Lexical Variables

=over 4

=item Privacy and Responsibility 

=item File-Scoped Lexicals

=item More Inheritance Concerns

=item Locking the Door and Throwing Away the Key

=item Translucency Revisited

=back

=item NOTES

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=item ACKNOWLEDGEMENTS

=item HISTORY

=back

=head2 perlbot - Bag'o Object Tricks (the BOT)

=over 4

=item DESCRIPTION

=item OO SCALING TIPS

=item INSTANCE VARIABLES

=item SCALAR INSTANCE VARIABLES

=item INSTANCE VARIABLE INHERITANCE

=item OBJECT RELATIONSHIPS

=item OVERRIDING SUPERCLASS METHODS

=item USING RELATIONSHIP WITH SDBM

=item THINKING OF CODE REUSE

=item CLASS CONTEXT AND THE OBJECT

=item INHERITING A CONSTRUCTOR

=item DELEGATION

=item SEE ALSO

=back

=head2 perlstyle - Perl style guide

=over 4

=item DESCRIPTION

=back

=head2 perlcheat - Perl 5 Cheat Sheet

=over 4

=item DESCRIPTION

=over 4

=item The sheet

=back

=item ACKNOWLEDGEMENTS

=item AUTHOR

=item SEE ALSO

=back

=head2 perltrap - Perl traps for the unwary

=over 4

=item DESCRIPTION

=over 4

=item Awk Traps

=item C/C++ Traps

=item Sed Traps

=item Shell Traps

=item Perl Traps

=item Perl4 to Perl5 Traps

Discontinuance, Deprecation, and BugFix traps, Parsing Traps, Numerical
Traps, General data type traps, Context Traps - scalar, list contexts,
Precedence Traps, General Regular Expression Traps using s///, etc,
Subroutine, Signal, Sorting Traps, OS Traps, DBM Traps, Unclassified Traps

=item Discontinuance, Deprecation, and BugFix traps

Symbols starting with "_" no longer forced into main, Double-colon valid
package separator in variable name, 2nd and 3rd args to C<splice()> are now
in scalar context, Can't do C<goto> into a block that is optimized away,
Can't use whitespace as variable name or quote delimiter, C<while/if BLOCK
BLOCK> gone, C<**> binds tighter than unary minus, C<foreach> changed when
iterating over a list, C<split> with no args behavior changed, B<-e>
behavior fixed, C<push> returns number of elements in resulting list, Some
error messages differ, C<split()> honors subroutine args, Bugs removed

=item Parsing Traps

Space between . and = triggers syntax error, Better parsing in perl 5,
Function parsing, String interpolation of C<$#array> differs, Perl guesses
on C<map>, C<grep> followed by C<{> if it starts BLOCK or hash ref

=item Numerical Traps

Formatted output and significant digits, Auto-increment operator over
signed int limit deleted, Assignment of return values from numeric equality
tests doesn't work, Bitwise string ops

=item General data type traps

Negative array subscripts now count from the end of array, Setting
C<$#array> lower now discards array elements, Hashes get defined before
use, Glob assignment from localized variable to variable, Assigning
C<undef> to glob, Changes in unary negation (of strings), Modifying of
constants prohibited, C<defined $var> behavior changed, Variable Suicide

=item Context Traps - scalar, list contexts

Elements of argument lists for formats evaluated in list context,
C<caller()> returns false value in scalar context if no caller present,
Comma operator in scalar context gives scalar context to args, C<sprintf()>
prototyped as C<($;@)>

=item Precedence Traps

LHS vs. RHS of any assignment operator, Semantic errors introduced due to
precedence, Precedence of assignment operators same as the precedence of
assignment, C<open> requires parentheses around filehandle, C<$:>
precedence over C<$::> gone, Precedence of file test operators documented,
C<keys>, C<each>, C<values> are regular named unary operators

=item General Regular Expression Traps using s///, etc.

C<s'$lhs'$rhs'> interpolates on either side, C<m//g> attaches its state to
the searched string, C<m//o> used within an anonymous sub, C<$+> isn't set
to whole match, Substitution now returns null string if it fails,
C<s`lhs`rhs`> is now a normal substitution, Stricter parsing of variables
in regular expressions, C<m?x?> matches only once, Failed matches don't
reset the match variables

=item Subroutine, Signal, Sorting Traps

Barewords that used to look like strings look like subroutine calls,
Reverse is no longer allowed as the name of a sort subroutine, C<warn()>
won't let you specify a filehandle

=item OS Traps

SysV resets signal handler correctly, SysV C<seek()> appends correctly

=item Interpolation Traps

C<@> always interpolates an array in double-quotish strings, Double-quoted
strings may no longer end with an unescaped $, Arbitrary expressions are
evaluated inside braces within double quotes, C<$$x> now tries to
dereference $x, Creation of hashes on the fly with C<eval "EXPR"> requires
protection, Bugs in earlier perl versions, Array and hash brackets during
interpolation, Interpolation of C<\$$foo{bar}>, C<qq()> string passed to
C<eval> will not find string terminator

=item DBM Traps

Perl5 must have been linked with same dbm/ndbm as the default for
C<dbmopen()>, DBM exceeding limit on the key/value size will cause perl5 to
exit immediately

=item Unclassified Traps

C<require>/C<do> trap using returned value, C<split> on empty string with
LIMIT specified

=back

=back

=head2 perldebtut - Perl debugging tutorial

=over 4

=item DESCRIPTION

=item use strict

=item Looking at data and -w and v

=item help

=item Stepping through code

=item Placeholder for a, w, t, T

=item REGULAR EXPRESSIONS

=item OUTPUT TIPS

=item CGI

=item GUIs

=item SUMMARY

=item SEE ALSO

=item AUTHOR

=item CONTRIBUTORS

=back

=head2 perlfaq - frequently asked questions about Perl ($Date: 2005/12/30
15:04:07 $)

=over 4

=item DESCRIPTION

=over 4

=item Where to get the perlfaq

=item How to contribute to the perlfaq

=item What will happen if you mail your Perl programming problems to the
authors

=back

=item Credits

=item Author and Copyright Information

=over 4

=item Bundled Distributions

=item Disclaimer

=back

=item Table of Contents

perlfaq  - this document, perlfaq1 - General Questions About Perl, perlfaq2
- Obtaining and Learning about Perl, perlfaq3 - Programming Tools, perlfaq4
- Data Manipulation, perlfaq5 - Files and Formats, perlfaq6 - Regular
Expressions, perlfaq7 - General Perl Language Issues, perlfaq8 - System
Interaction, perlfaq9 - Networking

=item The Questions

=over 4

=item L<perlfaq1>: General Questions About Perl

=item L<perlfaq2>: Obtaining and Learning about Perl

=item L<perlfaq3>: Programming Tools

=item L<perlfaq4>: Data Manipulation

=item L<perlfaq5>: Files and Formats

=item L<perlfaq6>: Regular Expressions

=item L<perlfaq7>: General Perl Language Issues

=item L<perlfaq8>: System Interaction

=item L<perlfaq9>: Networking

=back

=back

=head2 perlfaq1 - General Questions About Perl ($Revision: 1.19 $, $Date:
2005/12/31 00:54:37 $)

=over 4

=item DESCRIPTION

=over 4

=item What is Perl?

=item Who supports Perl?  Who develops it?  Why is it free?

=item Which version of Perl should I use?

=item What are perl4, perl5, or perl6?

=item What is Ponie?

=item What is perl6?

=item How stable is Perl?

=item Is Perl difficult to learn?

=item How does Perl compare with other languages like Java, Python, REXX,
Scheme, or Tcl?

=item Can I do [task] in Perl?

=item When shouldn't I program in Perl?

=item What's the difference between "perl" and "Perl"?

=item Is it a Perl program or a Perl script?

=item What is a JAPH?

=item Where can I get a list of Larry Wall witticisms?

=item How can I convince my sysadmin/supervisor/employees to use version
5/5.6.1/Perl instead of some other language?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.38 $,
$Date: 2005/12/31 00:54:37 $)

=over 4

=item DESCRIPTION

=over 4

=item What machines support perl?  Where do I get it?

=item How can I get a binary version of perl?

=item I don't have a C compiler. How can I build my own Perl interpreter?

=item I copied the perl binary from one machine to another, but scripts
don't work.

=item I grabbed the sources and tried to compile but gdbm/dynamic
loading/malloc/linking/... failed.  How do I make it work?

=item What modules and extensions are available for Perl?  What is CPAN? 
What does CPAN/src/... mean?

=item Is there an ISO or ANSI certified version of Perl?

=item Where can I get information on Perl?

=item What are the Perl newsgroups on Usenet?  Where do I post questions?

=item Where should I post source code?

=item Perl Books

References, Tutorials, Task-Oriented, Special Topics

=item Perl in Magazines

=item Perl on the Net: FTP and WWW Access

=item What mailing lists are there for Perl?

=item Archives of comp.lang.perl.misc

=item Where can I buy a commercial version of perl?

=item Where do I send bug reports?

=item What is perl.com? Perl Mongers? pm.org? perl.org? cpan.org?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq3 - Programming Tools ($Revision: 1.56 $, $Date: 2005/12/31
00:54:37 $)

=over 4

=item DESCRIPTION

=over 4

=item How do I do (anything)?

=item How can I use Perl interactively?

=item Is there a Perl shell?

=item How do I find which modules are installed on my system?

=item How do I debug my Perl programs?

=item How do I profile my Perl programs?

=item How do I cross-reference my Perl programs?

=item Is there a pretty-printer (formatter) for Perl?

=item Is there a ctags for Perl?

=item Is there an IDE or Windows Perl Editor?

Eclipse, Enginsite, Komodo, Open Perl IDE, OptiPerl, PerlBuilder,
visiPerl+, Visual Perl, Zeus, GNU Emacs, MicroEMACS, XEmacs, Jed, Elvis,
Vile, Vim, Codewright, MultiEdit, SlickEdit, Bash, Ksh, Tcsh, Zsh, Affrus,
Alpha, BBEdit and BBEdit Lite

=item Where can I get Perl macros for vi?

=item Where can I get perl-mode for emacs?

=item How can I use curses with Perl?

=item How can I use X or Tk with Perl?

=item How can I make my Perl program run faster?

=item How can I make my Perl program take less memory?

Don't slurp!, Use map and grep selectively, Avoid unnecessary quotes and
stringification, Pass by reference, Tie large variables to disk

=item Is it safe to return a reference to local or lexical data?

=item How can I free an array or hash so my program shrinks?

=item How can I make my CGI script more efficient?

=item How can I hide the source for my Perl program?

=item How can I compile my Perl program into byte code or C?

=item How can I compile Perl into Java?

=item How can I get C<#!perl> to work on [MS-DOS,NT,...]?

=item Can I write useful Perl programs on the command line?

=item Why don't Perl one-liners work on my DOS/Mac/VMS system?

=item Where can I learn about CGI or Web programming in Perl?

=item Where can I learn about object-oriented Perl programming?

=item Where can I learn about linking C with Perl?

=item I've read perlembed, perlguts, etc., but I can't embed perl in my C
program; what am I doing wrong?

=item When I tried to run my script, I got this message. What does it mean?

=item What's MakeMaker?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq4 - Data Manipulation ($Revision: 1.73 $, $Date: 2005/12/31
00:54:37 $)

=over 4

=item DESCRIPTION

=item Data: Numbers

=over 4

=item Why am I getting long decimals (eg, 19.9499999999999) instead of the
numbers I should be getting (eg, 19.95)?

=item Why is int() broken?

=item Why isn't my octal data interpreted correctly?

=item Does Perl have a round() function?  What about ceil() and floor()? 
Trig functions?

=item How do I convert between numeric representations/bases/radixes?

How do I convert hexadecimal into decimal, How do I convert from decimal to
hexadecimal, How do I convert from octal to decimal, How do I convert from
decimal to octal, How do I convert from binary to decimal, How do I convert
from decimal to binary

=item Why doesn't & work the way I want it to?

=item How do I multiply matrices?

=item How do I perform an operation on a series of integers?

=item How can I output Roman numerals?

=item Why aren't my random numbers random?

=item How do I get a random number between X and Y?

=back

=item Data: Dates

=over 4

=item How do I find the day or week of the year?

=item How do I find the current century or millennium?

=item How can I compare two dates and find the difference?

=item How can I take a string and turn it into epoch seconds?

=item How can I find the Julian Day?

=item How do I find yesterday's date?

=item Does Perl have a Year 2000 problem?  Is Perl Y2K compliant?

=back

=item Data: Strings

=over 4

=item How do I validate input?

=item How do I unescape a string?

=item How do I remove consecutive pairs of characters?

=item How do I expand function calls in a string?

=item How do I find matching/nesting anything?

=item How do I reverse a string?

=item How do I expand tabs in a string?

=item How do I reformat a paragraph?

=item How can I access or change N characters of a string?

=item How do I change the Nth occurrence of something?

=item How can I count the number of occurrences of a substring within a
string?

=item How do I capitalize all the words on one line?

=item How can I split a [character] delimited string except when inside
[character]?

=item How do I strip blank space from the beginning/end of a string?

=item How do I pad a string with blanks or pad a number with zeroes?

=item How do I extract selected columns from a string?

=item How do I find the soundex value of a string?

=item How can I expand variables in text strings?

=item What's wrong with always quoting "$vars"?

=item Why don't my E<lt>E<lt>HERE documents work?

There must be no space after the E<lt>E<lt> part, There (probably) should
be a semicolon at the end, You can't (easily) have any space in front of
the tag

=back

=item Data: Arrays

=over 4

=item What is the difference between a list and an array?

=item What is the difference between $array[1] and @array[1]?

=item How can I remove duplicate elements from a list or array?

=item How can I tell whether a certain element is contained in a list or
array?

=item How do I compute the difference of two arrays?  How do I compute the
intersection of two arrays?

=item How do I test whether two arrays or hashes are equal?

=item How do I find the first array element for which a condition is true?

=item How do I handle linked lists?

=item How do I handle circular lists?

=item How do I shuffle an array randomly?

=item How do I process/modify each element of an array?

=item How do I select a random element from an array?

=item How do I permute N elements of a list?

=item How do I sort an array by (anything)?

=item How do I manipulate arrays of bits?

=item Why does defined() return true on empty arrays and hashes?

=back

=item Data: Hashes (Associative Arrays)

=over 4

=item How do I process an entire hash?

=item What happens if I add or remove keys from a hash while iterating over
it?

=item How do I look up a hash element by value?

=item How can I know how many entries are in a hash?

=item How do I sort a hash (optionally by value instead of key)?

=item How can I always keep my hash sorted?

=item What's the difference between "delete" and "undef" with hashes?

=item Why don't my tied hashes make the defined/exists distinction?

=item How do I reset an each() operation part-way through?

=item How can I get the unique keys from two hashes?

=item How can I store a multidimensional array in a DBM file?

=item How can I make my hash remember the order I put elements into it?

=item Why does passing a subroutine an undefined element in a hash create
it?

=item How can I make the Perl equivalent of a C structure/C++ class/hash or
array of hashes or arrays?

=item How can I use a reference as a hash key?

=back

=item Data: Misc

=over 4

=item How do I handle binary data correctly?

=item How do I determine whether a scalar is a number/whole/integer/float?

=item How do I keep persistent data across program calls?

=item How do I print out or copy a recursive data structure?

=item How do I define methods for every class/object?

=item How do I verify a credit card checksum?

=item How do I pack arrays of doubles or floats for XS code?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq5 - Files and Formats ($Revision: 1.42 $, $Date: 2005/12/31
00:54:37 $)

=over 4

=item DESCRIPTION

=over 4

=item How do I flush/unbuffer an output filehandle?  Why must I do this?
X<flush> X<buffer> X<unbuffer> X<autoflush>

=item How do I change one line in a file/delete a line in a file/insert a
line in the middle of a file/append to the beginning of a file?
X<file, editing>

=item How do I count the number of lines in a file?
X<file, counting lines> X<lines> X<line>

=item How can I use Perl's C<-i> option from within a program?
X<-i> X<in-place>

=item How can I copy a file?
X<copy> X<file, copy>

=item How do I make a temporary file name?
X<file, temporary>

=item How can I manipulate fixed-record-length files?
X<fixed-length> X<file, fixed-length records>

=item How can I make a filehandle local to a subroutine?  How do I pass
filehandles between subroutines?  How do I make an array of filehandles?
X<filehandle, local> X<filehandle, passing> X<filehandle, reference>

=item How can I use a filehandle indirectly?
X<filehandle, indirect>

=item How can I set up a footer format to be used with write()?
X<footer>

=item How can I write() into a string?
X<write, into a string>

=item How can I output my numbers with commas added?
X<number, commify>

=item How can I translate tildes (~) in a filename?
X<tilde> X<tilde expansion>

=item How come when I open a file read-write it wipes it out?
X<clobber> X<read-write> X<clobbering> X<truncate> X<truncating>

=item Why do I sometimes get an "Argument list too long" when I use
E<lt>*E<gt>?
X<argument list too long>

=item Is there a leak/bug in glob()?
X<glob>

=item How can I open a file with a leading ">" or trailing blanks?
X<filename, special characters>

=item How can I reliably rename a file?
X<rename> X<mv> X<move> X<file, rename> X<ren>

=item How can I lock a file?
X<lock> X<file, lock> X<flock>

=item Why can't I just open(FH, "E<gt>file.lock")?
X<lock, lockfile race condition>

=item I still don't get locking.  I just want to increment the number in
the file.  How can I do this?
X<counter> X<file, counter>

=item All I want to do is append a small amount of text to the end of a
file.  Do I still have to use locking?
X<append> X<file, append>

=item How do I randomly update a binary file?
X<file, binary patch>

=item How do I get a file's timestamp in perl?
X<timestamp> X<file, timestamp>

=item How do I set a file's timestamp in perl?
X<timestamp> X<file, timestamp>

=item How do I print to more than one file at once?
X<print, to multiple files>

=item How can I read in an entire file all at once?
X<slurp> X<file, slurping>

=item How can I read in a file by paragraphs?
X<file, reading by paragraphs>

=item How can I read a single character from a file?  From the keyboard?
X<getc> X<file, reading one character at a time>

=item How can I tell whether there's a character waiting on a filehandle?

=item How do I do a C<tail -f> in perl?
X<tail>

=item How do I dup() a filehandle in Perl?
X<dup>

=item How do I close a file descriptor by number?
X<file, closing file descriptors>

=item Why can't I use "C:\temp\foo" in DOS paths?  Why doesn't
`C:\temp\foo.exe` work?
X<filename, DOS issues>

=item Why doesn't glob("*.*") get all the files?
X<glob>

=item Why does Perl let me delete read-only files?  Why does C<-i> clobber
protected files?  Isn't this a bug in Perl?

=item How do I select a random line from a file?
X<file, selecting a random line>

=item Why do I get weird spaces when I print an array of lines?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq6 - Regular Expressions ($Revision: 1.38 $, $Date: 2005/12/31
00:54:37 $)

=over 4

=item DESCRIPTION

=over 4

=item How can I hope to use regular expressions without creating illegible
and unmaintainable code?
X<regex, legibility> X<regexp, legibility>
X<regular expression, legibility> X</x>

Comments Outside the Regex, Comments Inside the Regex, Different Delimiters

=item I'm having trouble matching over more than one line.  What's wrong?
X<regex, multiline> X<regexp, multiline> X<regular expression, multiline>

=item How can I pull out lines between two patterns that are themselves on
different lines?
X<..>

=item I put a regular expression into $/ but it didn't work. What's wrong?
X<$/, regexes in> X<$INPUT_RECORD_SEPARATOR, regexes in>
X<$RS, regexes in>

=item How do I substitute case insensitively on the LHS while preserving
case on the RHS?
X<replace, case preserving> X<substitute, case preserving>
X<substitution, case preserving> X<s, case preserving>

=item How can I make C<\w> match national character sets?
X<\w>

=item How can I match a locale-smart version of C</[a-zA-Z]/>?
X<alpha>

=item How can I quote a variable to use in a regex?
X<regex, escaping> X<regexp, escaping> X<regular expression, escaping>

=item What is C</o> really for?
X</o>

=item How do I use a regular expression to strip C style comments from a
file?

=item Can I use Perl regular expressions to match balanced text?
X<regex, matching balanced test> X<regexp, matching balanced test>
X<regular expression, matching balanced test>

=item What does it mean that regexes are greedy?  How can I get around it?
X<greedy> X<greediness>

=item How do I process each word on each line?
X<word>

=item How can I print out a word-frequency or line-frequency summary?

=item How can I do approximate matching?
X<match, approximate> X<matching, approximate>

=item How do I efficiently match many regular expressions at once?
X<regex, efficiency> X<regexp, efficiency>
X<regular expression, efficiency>

=item Why don't word-boundary searches with C<\b> work for me?
X<\b>

=item Why does using $&, $`, or $' slow my program down?
X<$MATCH> X<$&> X<$POSTMATCH> X<$'> X<$PREMATCH> X<$`>

=item What good is C<\G> in a regular expression?
X<\G>

=item Are Perl regexes DFAs or NFAs?  Are they POSIX compliant?
X<DFA> X<NFA> X<POSIX>

=item What's wrong with using grep in a void context?
X<grep>

=item How can I match strings with multibyte characters?
X<regex, and multibyte characters> X<regexp, and multibyte characters>
X<regular expression, and multibyte characters>

=item How do I match a pattern that is supplied by the user?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.28 $, $Date:
2005/12/31 00:54:37 $)

=over 4

=item DESCRIPTION

=over 4

=item Can I get a BNF/yacc/RE for the Perl language?

=item What are all these $@%&* punctuation signs, and how do I know when to
use them?

=item Do I always/never have to quote my strings or use semicolons and
commas?

=item How do I skip some return values?

=item How do I temporarily block warnings?

=item What's an extension?

=item Why do Perl operators have different precedence than C operators?

=item How do I declare/create a structure?

=item How do I create a module?

=item How do I create a class?

=item How can I tell if a variable is tainted?

=item What's a closure?

=item What is variable suicide and how can I prevent it?

=item How can I pass/return a {Function, FileHandle, Array, Hash, Method,
Regex}?

Passing Variables and Functions, Passing Filehandles, Passing Regexes,
Passing Methods

=item How do I create a static variable?

=item What's the difference between dynamic and lexical (static) scoping? 
Between local() and my()?

=item How can I access a dynamic variable while a similarly named lexical
is in scope?

=item What's the difference between deep and shallow binding?

=item Why doesn't "my($foo) = E<lt>FILEE<gt>;" work right?

=item How do I redefine a builtin function, operator, or method?

=item What's the difference between calling a function as &foo and foo()?

=item How do I create a switch or case statement?

=item How can I catch accesses to undefined variables, functions, or
methods?

=item Why can't a method included in this same file be found?

=item How can I find out my current package?

=item How can I comment out a large block of perl code?

=item How do I clear a package?

=item How can I use a variable as a variable name?

=item What does "bad interpreter" mean?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq8 - System Interaction ($Revision: 1.27 $, $Date: 2005/12/31
00:54:37 $)

=over 4

=item DESCRIPTION

=over 4

=item How do I find out which operating system I'm running under?

=item How come exec() doesn't return?

=item How do I do fancy stuff with the keyboard/screen/mouse?

Keyboard, Screen, Mouse

=item How do I print something out in color?

=item How do I read just one key without waiting for a return key?

=item How do I check whether input is ready on the keyboard?

=item How do I clear the screen?

=item How do I get the screen size?

=item How do I ask the user for a password?

=item How do I read and write the serial port?

lockfiles, open mode, end of line, flushing output, non-blocking input

=item How do I decode encrypted password files?

=item How do I start a process in the background?

STDIN, STDOUT, and STDERR are shared, Signals, Zombies

=item How do I trap control characters/signals?

=item How do I modify the shadow password file on a Unix system?

=item How do I set the time and date?

=item How can I sleep() or alarm() for under a second?

=item How can I measure time under a second?

=item How can I do an atexit() or setjmp()/longjmp()? (Exception handling)

=item Why doesn't my sockets program work under System V (Solaris)?  What
does the error message "Protocol not supported" mean?

=item How can I call my system's unique C functions from Perl?

=item Where do I get the include files to do ioctl() or syscall()?

=item Why do setuid perl scripts complain about kernel problems?

=item How can I open a pipe both to and from a command?

=item Why can't I get the output of a command with system()?

=item How can I capture STDERR from an external command?

=item Why doesn't open() return an error when a pipe open fails?

=item What's wrong with using backticks in a void context?

=item How can I call backticks without shell processing?

=item Why can't my script read from STDIN after I gave it EOF (^D on Unix,
^Z on MS-DOS)?

=item How can I convert my shell script to perl?

=item Can I use perl to run a telnet or ftp session?

=item How can I write expect in Perl?

=item Is there a way to hide perl's command line from programs such as
"ps"?

=item I {changed directory, modified my environment} in a perl script.	How
come the change disappeared when I exited the script?  How do I get my
changes to be visible?

Unix

=item How do I close a process's filehandle without waiting for it to
complete?

=item How do I fork a daemon process?

=item How do I find out if I'm running interactively or not?

=item How do I timeout a slow event?

=item How do I set CPU limits?

=item How do I avoid zombies on a Unix system?

=item How do I use an SQL database?

=item How do I make a system() exit on control-C?

=item How do I open a file without blocking?

=item How do I tell the difference between errors from the shell and perl?

=item How do I install a module from CPAN?

=item What's the difference between require and use?

=item How do I keep my own module/library directory?

=item How do I add the directory my program lives in to the module/library
search path?

=item How do I add a directory to my include path (@INC) at runtime?

=item What is socket.ph and where do I get it?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq9 - Networking ($Revision: 1.28 $, $Date: 2005/12/31 00:54:37
$)

=over 4

=item DESCRIPTION

=over 4

=item What is the correct form of response from a CGI script?

=item My CGI script runs from the command line but not the browser.  (500
Server Error)

=item How can I get better error messages from a CGI program?

=item How do I remove HTML from a string?

=item How do I extract URLs?

=item How do I download a file from the user's machine?  How do I open a
file on another machine?

=item How do I make a pop-up menu in HTML?

=item How do I fetch an HTML file?

=item How do I automate an HTML form submission?

=item How do I decode or create those %-encodings on the web?

=item How do I redirect to another page?

=item How do I put a password on my web pages?

=item How do I edit my .htpasswd and .htgroup files with Perl?

=item How do I make sure users can't enter values into a form that cause my
CGI script to do bad things?

=item How do I parse a mail header?

=item How do I decode a CGI form?

=item How do I check a valid mail address?

=item How do I decode a MIME/BASE64 string?

=item How do I return the user's mail address?

=item How do I send mail?

=item How do I use MIME to make an attachment to a mail message?

=item How do I read mail?

=item How do I find out my hostname, domainname, or IP address?
X<hostname, domainname, IP address, host, domain, hostfqdn, inet_ntoa,
gethostbyname, Socket, Net::Domain, Sys::Hostname>

=item How do I fetch a news article or the active newsgroups?

=item How do I fetch/put an FTP file?

=item How can I do RPC in Perl?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlsyn - Perl syntax

=over 4

=item DESCRIPTION

=over 4

=item Declarations
X<declaration> X<undef> X<undefined> X<uninitialized>

=item Comments
X<comment> X<#>

=item Simple Statements
X<statement> X<semicolon> X<expression> X<;>

=item Truth and Falsehood
X<truth> X<falsehood> X<true> X<false> X<!> X<not> X<negation> X<0>

=item Statement Modifiers
X<statement modifier> X<modifier> X<if> X<unless> X<while>
X<until> X<foreach> X<for>

=item Compound Statements
X<statement, compound> X<block> X<bracket, curly> X<curly bracket> X<brace>
X<{> X<}> X<if> X<unless> X<while> X<until> X<foreach> X<for> X<continue>

=item Loop Control
X<loop control> X<loop, control> X<next> X<last> X<redo> X<continue>

=item For Loops
X<for> X<foreach>

=item Foreach Loops
X<for> X<foreach>

=item Basic BLOCKs and Switch Statements
X<switch> X<block> X<case>

=item Goto
X<goto>

=item PODs: Embedded Documentation
X<POD> X<documentation>

=item Plain Old Comments (Not!)
X<comment> X<line> X<#> X<preprocessor> X<eval>

=back

=back

=head2 perldata - Perl data types

=over 4

=item DESCRIPTION

=over 4

=item Variable names
X<variable, name> X<variable name> X<data type> X<type>

=item Context
X<context> X<scalar context> X<list context>

=item Scalar values
X<scalar> X<number> X<string> X<reference>

=item Scalar value constructors
X<scalar, literal> X<scalar, constant>

=item List value constructors
X<list>

=item Subscripts

=item Slices
X<slice> X<array, slice> X<hash, slice>

=item Typeglobs and Filehandles
X<typeglob> X<filehandle> X<*>

=back

=item SEE ALSO

=back

=head2 perlop - Perl operators and precedence

=over 4

=item DESCRIPTION

=over 4

=item Operator Precedence and Associativity 
X<operator, precedence> X<precedence> X<associativity>

=item Terms and List Operators (Leftward)
X<list operator> X<operator, list> X<term>

=item The Arrow Operator
X<arrow> X<dereference> X<< -> >>

=item Auto-increment and Auto-decrement
X<increment> X<auto-increment> X<++> X<decrement> X<auto-decrement> X<-->

=item Exponentiation
X<**> X<exponentiation> X<power>

=item Symbolic Unary Operators
X<unary operator> X<operator, unary>

=item Binding Operators
X<binding> X<operator, binding> X<=~> X<!~>

=item Multiplicative Operators
X<operator, multiplicative>

=item Additive Operators
X<operator, additive>

=item Shift Operators
X<shift operator> X<operator, shift> X<<< << >>>
X<<< >> >>> X<right shift> X<left shift> X<bitwise shift>
X<shl> X<shr> X<shift, right> X<shift, left>

=item Named Unary Operators
X<operator, named unary>

=item Relational Operators
X<relational operator> X<operator, relational>

=item Equality Operators
X<equality> X<equal> X<equals> X<operator, equality>

=item Bitwise And
X<operator, bitwise, and> X<bitwise and> X<&>

=item Bitwise Or and Exclusive Or
X<operator, bitwise, or> X<bitwise or> X<|> X<operator, bitwise, xor>
X<bitwise xor> X<^>

=item C-style Logical And
X<&&> X<logical and> X<operator, logical, and>

=item C-style Logical Or
X<||> X<operator, logical, or>

=item Range Operators
X<operator, range> X<range> X<..> X<...>

=item Conditional Operator
X<operator, conditional> X<operator, ternary> X<ternary> X<?:>

=item Assignment Operators
X<assignment> X<operator, assignment> X<=> X<**=> X<+=> X<*=> X<&=>
X<<< <<= >>> X<&&=> X<-=> X</=> X<|=> X<<< >>= >>> X<||=> X<.=>
X<%=> X<^=> X<x=>

=item Comma Operator
X<comma> X<operator, comma> X<,>

=item List Operators (Rightward)
X<operator, list, rightward> X<list operator>

=item Logical Not
X<operator, logical, not> X<not>

=item Logical And
X<operator, logical, and> X<and>

=item Logical or and Exclusive Or
X<operator, logical, or> X<operator, logical, xor> X<operator, logical,
err>
X<operator, logical, defined or> X<operator, logical, exclusive or>
X<or> X<xor> X<err>

=item C Operators Missing From Perl
X<operator, missing from perl> X<&> X<*>
X<typecasting> X<(TYPE)>

unary &, unary *, (TYPE)

=item Quote and Quote-like Operators
X<operator, quote> X<operator, quote-like> X<q> X<qq> X<qx> X<qw> X<m> 
X<qr> X<s> X<tr> X<'> X<''> X<"> X<""> X<//> X<`> X<``> X<<< << >>>
X<escape sequence> X<escape>

=item Regexp Quote-Like Operators
X<operator, regexp>

?PATTERN? X<?>, m/PATTERN/cgimosx X<m> X<operator, match>  X<regexp,
options> X<regexp> X<regex, options> X<regex>  X</c> X</i> X</m> X</o>
X</s> X</x>, /PATTERN/cgimosx, q/STRING/ X<q> X<quote, double> X<'> X<''>,
C<'STRING'>, qq/STRING/ X<qq> X<quote, double> X<"> X<"">, "STRING",
qr/STRING/imosx X<qr> X</i> X</m> X</o> X</s> X</x>, qx/STRING/ X<qx> X<`>
X<``> X<backtick>, `STRING`, qw/STRING/ X<qw> X<quote, list> X<quote,
words>, s/PATTERN/REPLACEMENT/egimosx X<substitute> X<substitution>
X<replace> X<regexp, replace> X<regexp, substitute> X</e> X</g> X</i> X</m>
X</o> X</s> X</x>, tr/SEARCHLIST/REPLACEMENTLIST/cds X<tr> X<y>
X<transliterate> X</c> X</d> X</s>, y/SEARCHLIST/REPLACEMENTLIST/cds, <<EOF
X<here-doc> X<heredoc> X<here-document> X<<< << >>>

=item Gory details of parsing quoted constructs
X<quote, gory details>

Finding the end, Removal of backslashes before delimiters, Interpolation
X<interpolation>, C<<<'EOF'>, C<m''>, C<s'''>, C<tr///>, C<y///>, C<''>,
C<q//>, C<"">, C<``>, C<qq//>, C<qx//>, C<< <file*glob> >>, C<?RE?>,
C</RE/>, C<m/RE/>, C<s/RE/foo/>,, Interpolation of regular expressions
X<regexp, interpolation>, Optimization of regular expressions X<regexp,
optimization>

=item I/O Operators
X<operator, i/o> X<operator, io> X<io> X<while> X<filehandle>
X<< <> >> X<@ARGV>

=item Constant Folding
X<constant folding> X<folding>

=item No-ops
X<no-op> X<nop>

=item Bitwise String Operators
X<operator, bitwise, string>

=item Integer Arithmetic
X<integer>

=item Floating-point Arithmetic
X<floating-point> X<floating point> X<float> X<real>

=item Bigger Numbers
X<number, arbitrary precision>

=back

=back

=head2 perlsub - Perl subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Private Variables via my()
X<my> X<variable, lexical> X<lexical> X<lexical variable> X<scope, lexical>
X<lexical scope> X<attributes, my>

=item Persistent Private Variables
X<static> X<variable, persistent> X<variable, static> X<closure>

=item Temporary Values via local()
X<local> X<scope, dynamic> X<dynamic scope> X<variable, local>
X<variable, temporary>

=item Lvalue subroutines
X<lvalue> X<subroutine, lvalue>

Lvalue subroutines are EXPERIMENTAL

=item Passing Symbol Table Entries (typeglobs)
X<typeglob> X<*>

=item When to Still Use local()
X<local> X<variable, local>

=item Pass by Reference
X<pass by reference> X<pass-by-reference> X<reference>

=item Prototypes
X<prototype> X<subroutine, prototype>

=item Constant Functions
X<constant>

=item Overriding Built-in Functions
X<built-in> X<override> X<CORE> X<CORE::GLOBAL>

=item Autoloading
X<autoloading> X<AUTOLOAD>

=item Subroutine Attributes
X<attribute> X<subroutine, attribute> X<attrs>

=back

=item SEE ALSO

=back

=head2 perlfunc - Perl builtin functions

=over 4

=item DESCRIPTION

=over 4

=item Perl Functions by Category
X<function>

Functions for SCALARs or strings X<scalar> X<string> X<character>, Regular
expressions and pattern matching X<regular expression> X<regex> X<regexp>,
Numeric functions X<numeric> X<number> X<trigonometric> X<trigonometry>,
Functions for real @ARRAYs X<array>, Functions for list data X<list>,
Functions for real %HASHes X<hash>, Input and output functions X<I/O>
X<input> X<output> X<dbm>, Functions for fixed length data or records,
Functions for filehandles, files, or directories X<file> X<filehandle>
X<directory> X<pipe> X<link> X<symlink>, Keywords related to the control
flow of your Perl program X<control flow>, Keywords related to scoping,
Miscellaneous functions, Functions for processes and process groups
X<process> X<pid> X<process id>, Keywords related to perl modules
X<module>, Keywords related to classes and object-orientedness X<object>
X<class> X<package>, Low-level socket functions X<socket> X<sock>, System V
interprocess communication functions X<IPC> X<System V> X<semaphore>
X<shared memory> X<memory> X<message>, Fetching user and group info X<user>
X<group> X<password> X<uid> X<gid>  X<passwd> X</etc/passwd>, Fetching
network info X<network> X<protocol> X<host> X<hostname> X<IP> X<address>
X<service>, Time-related functions X<time> X<date>, Functions new in perl5
X<perl5>, Functions obsoleted in perl5

=item Portability
X<portability> X<Unix> X<portable>

=item Alphabetical Listing of Perl Functions

-I<X> FILEHANDLE
X<-r>X<-w>X<-x>X<-o>X<-R>X<-W>X<-X>X<-O>X<-e>X<-z>X<-s>X<-f>X<-d>X<-l>X<-p>
X<-S>X<-b>X<-c>X<-t>X<-u>X<-g>X<-k>X<-T>X<-B>X<-M>X<-A>X<-C>, -I<X> EXPR,
-I<X>, abs VALUE X<abs> X<absolute>, abs, accept NEWSOCKET,GENERICSOCKET
X<accept>, alarm SECONDS X<alarm> X<SIGALRM> X<timer>, alarm, atan2 Y,X
X<atan2> X<arctangent> X<tan> X<tangent>, bind SOCKET,NAME X<bind>, binmode
FILEHANDLE, LAYER X<binmode> X<binary> X<text> X<DOS> X<Windows>, binmode
FILEHANDLE, bless REF,CLASSNAME X<bless>, bless REF, caller EXPR X<caller>
X<call stack> X<stack> X<stack trace>, caller, chdir EXPR X<chdir> X<cd>,
chdir FILEHANDLE, chdir DIRHANDLE, chdir, chmod LIST X<chmod> X<permission>
X<mode>, chomp VARIABLE X<chomp> X<INPUT_RECORD_SEPARATOR> X<$/> X<newline>
X<eol>, chomp( LIST ), chomp, chop VARIABLE X<chop>, chop( LIST ), chop,
chown LIST X<chown> X<owner> X<user> X<group>, chr NUMBER X<chr>
X<character> X<ASCII> X<Unicode>, chr, chroot FILENAME X<chroot> X<root>,
chroot, close FILEHANDLE X<close>, close, closedir DIRHANDLE X<closedir>,
connect SOCKET,NAME X<connect>, continue BLOCK X<continue>, cos EXPR X<cos>
X<cosine> X<acos> X<arccosine>, cos, crypt PLAINTEXT,SALT X<crypt>
X<digest> X<hash> X<salt> X<plaintext> X<password> X<decrypt>
X<cryptography> X<passwd>, dbmclose HASH X<dbmclose>, dbmopen
HASH,DBNAME,MASK X<dbmopen> X<dbm> X<ndbm> X<sdbm> X<gdbm>, defined EXPR
X<defined> X<undef> X<undefined>, defined, delete EXPR X<delete>, die LIST
X<die> X<throw> X<exception> X<raise> X<$@> X<abort>, do BLOCK X<do>
X<block>, do SUBROUTINE(LIST) X<do>, do EXPR X<do>, dump LABEL X<dump>
X<core> X<undump>, dump, each HASH X<each> X<hash, iterator>, eof
FILEHANDLE X<eof> X<end of file> X<end-of-file>, eof (), eof, eval EXPR
X<eval> X<try> X<catch> X<evaluate> X<parse> X<execute>, eval BLOCK, eval,
exec LIST X<exec> X<execute>, exec PROGRAM LIST, exists EXPR X<exists>
X<autovivification>, exit EXPR X<exit> X<terminate> X<abort>, exit, exp
EXPR X<exp> X<exponential> X<antilog> X<antilogarithm> X<e>, exp, fcntl
FILEHANDLE,FUNCTION,SCALAR X<fcntl>, fileno FILEHANDLE X<fileno>, flock
FILEHANDLE,OPERATION X<flock> X<lock> X<locking>, fork X<fork> X<child>
X<parent>, format X<format>, formline PICTURE,LIST X<formline>, getc
FILEHANDLE X<getc> X<getchar>, getc, getlogin X<getlogin> X<login>,
getpeername SOCKET X<getpeername> X<peer>, getpgrp PID X<getpgrp> X<group>,
getppid X<getppid> X<parent> X<pid>, getpriority WHICH,WHO X<getpriority>
X<priority> X<nice>, getpwnam NAME X<getpwnam> X<getgrnam> X<gethostbyname>
X<getnetbyname> X<getprotobyname> X<getpwuid> X<getgrgid> X<getservbyname>
X<gethostbyaddr> X<getnetbyaddr> X<getprotobynumber> X<getservbyport>
X<getpwent> X<getgrent> X<gethostent> X<getnetent> X<getprotoent>
X<getservent> X<setpwent> X<setgrent> X<sethostent> X<setnetent>
X<setprotoent> X<setservent> X<endpwent> X<endgrent> X<endhostent>
X<endnetent> X<endprotoent> X<endservent>, getgrnam NAME, gethostbyname
NAME, getnetbyname NAME, getprotobyname NAME, getpwuid UID, getgrgid GID,
getservbyname NAME,PROTO, gethostbyaddr ADDR,ADDRTYPE, getnetbyaddr
ADDR,ADDRTYPE, getprotobynumber NUMBER, getservbyport PORT,PROTO, getpwent,
getgrent, gethostent, getnetent, getprotoent, getservent, setpwent,
setgrent, sethostent STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN,
setservent STAYOPEN, endpwent, endgrent, endhostent, endnetent,
endprotoent, endservent, getsockname SOCKET X<getsockname>, getsockopt
SOCKET,LEVEL,OPTNAME X<getsockopt>, glob EXPR X<glob> X<wildcard>
X<filename, expansion> X<expand>, glob, gmtime EXPR X<gmtime> X<UTC>
X<Greenwich>, gmtime, goto LABEL X<goto> X<jump> X<jmp>, goto EXPR, goto
&NAME, grep BLOCK LIST X<grep>, grep EXPR,LIST, hex EXPR X<hex>
X<hexadecimal>, hex, import LIST X<import>, index STR,SUBSTR,POSITION
X<index> X<indexOf> X<InStr>, index STR,SUBSTR, int EXPR X<int> X<integer>
X<truncate> X<trunc>, int, ioctl FILEHANDLE,FUNCTION,SCALAR X<ioctl>, join
EXPR,LIST X<join>, keys HASH X<keys> X<key>, kill SIGNAL, LIST X<kill>
X<signal>, last LABEL X<last> X<break>, last, lc EXPR X<lc> X<lowercase>,
lc, lcfirst EXPR X<lcfirst> X<lowercase>, lcfirst, length EXPR X<length>
X<size>, length, link OLDFILE,NEWFILE X<link>, listen SOCKET,QUEUESIZE
X<listen>, local EXPR X<local>, localtime EXPR X<localtime>, localtime,
lock THING X<lock>, log EXPR X<log> X<logarithm> X<e> X<ln> X<base>, log,
lstat EXPR X<lstat>, lstat, m//, map BLOCK LIST X<map>, map EXPR,LIST,
mkdir FILENAME,MASK X<mkdir> X<md> X<directory, create>, mkdir FILENAME,
msgctl ID,CMD,ARG X<msgctl>, msgget KEY,FLAGS X<msgget>, msgrcv
ID,VAR,SIZE,TYPE,FLAGS X<msgrcv>, msgsnd ID,MSG,FLAGS X<msgsnd>, my EXPR
X<my>, my TYPE EXPR, my EXPR : ATTRS, my TYPE EXPR : ATTRS, next LABEL
X<next> X<continue>, next, no Module VERSION LIST X<no>, no Module VERSION,
no Module LIST, no Module, oct EXPR X<oct> X<octal> X<hex> X<hexadecimal>
X<binary> X<bin>, oct, open FILEHANDLE,EXPR X<open> X<pipe> X<file, open>
X<fopen>, open FILEHANDLE,MODE,EXPR, open FILEHANDLE,MODE,EXPR,LIST, open
FILEHANDLE,MODE,REFERENCE, open FILEHANDLE, opendir DIRHANDLE,EXPR
X<opendir>, ord EXPR X<ord> X<encoding>, ord, our EXPR X<our> X<global>,
our EXPR TYPE, our EXPR : ATTRS, our TYPE EXPR : ATTRS, pack TEMPLATE,LIST
X<pack>, package NAMESPACE X<package> X<module> X<namespace>, package, pipe
READHANDLE,WRITEHANDLE X<pipe>, pop ARRAY X<pop> X<stack>, pop, pos SCALAR
X<pos> X<match, position>, pos, print FILEHANDLE LIST X<print>, print LIST,
print, printf FILEHANDLE FORMAT, LIST X<printf>, printf FORMAT, LIST,
prototype FUNCTION X<prototype>, push ARRAY,LIST X<push>, X<stack>,
q/STRING/, qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/, quotemeta EXPR
X<quotemeta> X<metacharacter>, quotemeta, rand EXPR X<rand> X<random>,
rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET X<read>, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE X<readdir>, readline EXPR
X<readline> X<gets> X<fgets>, readlink EXPR X<readlink>, readlink, readpipe
EXPR X<readpipe>, recv SOCKET,SCALAR,LENGTH,FLAGS X<recv>, redo LABEL
X<redo>, redo, ref EXPR X<ref> X<reference>, ref, rename OLDNAME,NEWNAME
X<rename> X<move> X<mv> X<ren>, require VERSION X<require>, require EXPR,
require, reset EXPR X<reset>, reset, return EXPR X<return>, return, reverse
LIST X<reverse> X<rev> X<invert>, rewinddir DIRHANDLE X<rewinddir>, rindex
STR,SUBSTR,POSITION X<rindex>, rindex STR,SUBSTR, rmdir FILENAME X<rmdir>
X<rd> X<directory, remove>, rmdir, s///, scalar EXPR X<scalar> X<context>,
seek FILEHANDLE,POSITION,WHENCE X<seek> X<fseek> X<filehandle, position>,
seekdir DIRHANDLE,POS X<seekdir>, select FILEHANDLE X<select> X<filehandle,
default>, select, select RBITS,WBITS,EBITS,TIMEOUT X<select>, semctl
ID,SEMNUM,CMD,ARG X<semctl>, semget KEY,NSEMS,FLAGS X<semget>, semop
KEY,OPSTRING X<semop>, send SOCKET,MSG,FLAGS,TO X<send>, send
SOCKET,MSG,FLAGS, setpgrp PID,PGRP X<setpgrp> X<group>, setpriority
WHICH,WHO,PRIORITY X<setpriority> X<priority> X<nice> X<renice>, setsockopt
SOCKET,LEVEL,OPTNAME,OPTVAL X<setsockopt>, shift ARRAY X<shift>, shift,
shmctl ID,CMD,ARG X<shmctl>, shmget KEY,SIZE,FLAGS X<shmget>, shmread
ID,VAR,POS,SIZE X<shmread> X<shmwrite>, shmwrite ID,STRING,POS,SIZE,
shutdown SOCKET,HOW X<shutdown>, sin EXPR X<sin> X<sine> X<asin>
X<arcsine>, sin, sleep EXPR X<sleep> X<pause>, sleep, socket
SOCKET,DOMAIN,TYPE,PROTOCOL X<socket>, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL X<socketpair>, sort SUBNAME LIST
X<sort> X<qsort> X<quicksort> X<mergesort>, sort BLOCK LIST, sort LIST,
splice ARRAY,OFFSET,LENGTH,LIST X<splice>, splice ARRAY,OFFSET,LENGTH,
splice ARRAY,OFFSET, splice ARRAY, split /PATTERN/,EXPR,LIMIT X<split>,
split /PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST
X<sprintf>, format parameter index, flags, vector flag, (minimum) width,
precision, or maximum width X<precision>, size, order of arguments, sqrt
EXPR X<sqrt> X<root> X<square root>, sqrt, srand EXPR X<srand> X<seed>
X<randseed>, srand, stat FILEHANDLE X<stat> X<file, status>, stat EXPR,
stat, study SCALAR X<study>, study, sub NAME BLOCK X<sub>, sub NAME (PROTO)
BLOCK, sub NAME : ATTRS BLOCK, sub NAME (PROTO) : ATTRS BLOCK, substr
EXPR,OFFSET,LENGTH,REPLACEMENT X<substr> X<substring> X<mid> X<left>
X<right>, substr EXPR,OFFSET,LENGTH, substr EXPR,OFFSET, symlink
OLDFILE,NEWFILE X<symlink> X<link> X<symbolic link> X<link, symbolic>,
syscall NUMBER, LIST X<syscall> X<system call>, sysopen
FILEHANDLE,FILENAME,MODE X<sysopen>, sysopen
FILEHANDLE,FILENAME,MODE,PERMS, sysread FILEHANDLE,SCALAR,LENGTH,OFFSET
X<sysread>, sysread FILEHANDLE,SCALAR,LENGTH, sysseek
FILEHANDLE,POSITION,WHENCE X<sysseek> X<lseek>, system LIST X<system>
X<shell>, system PROGRAM LIST, syswrite FILEHANDLE,SCALAR,LENGTH,OFFSET
X<syswrite>, syswrite FILEHANDLE,SCALAR,LENGTH, syswrite FILEHANDLE,SCALAR,
tell FILEHANDLE X<tell>, tell, telldir DIRHANDLE X<telldir>, tie
VARIABLE,CLASSNAME,LIST X<tie>, tied VARIABLE X<tied>, time X<time>
X<epoch>, times X<times>, tr///, truncate FILEHANDLE,LENGTH X<truncate>,
truncate EXPR,LENGTH, uc EXPR X<uc> X<uppercase> X<toupper>, uc, ucfirst
EXPR X<ucfirst> X<uppercase>, ucfirst, umask EXPR X<umask>, umask, undef
EXPR X<undef> X<undefine>, undef, unlink LIST X<unlink> X<delete> X<remove>
X<rm>, unlink, unpack TEMPLATE,EXPR X<unpack>, untie VARIABLE X<untie>,
unshift ARRAY,LIST X<unshift>, use Module VERSION LIST X<use> X<module>
X<import>, use Module VERSION, use Module LIST, use Module, use VERSION,
utime LIST X<utime>, values HASH X<values>, vec EXPR,OFFSET,BITS X<vec>
X<bit> X<bit vector>, wait X<wait>, waitpid PID,FLAGS X<waitpid>, wantarray
X<wantarray> X<context>, warn LIST X<warn> X<warning> X<STDERR>, write
FILEHANDLE X<write>, write EXPR, write, y///

=back

=back

=head2 perlopentut - tutorial on opening things in Perl

=over 4

=item DESCRIPTION

=item Open E<agrave> la shell

=over 4

=item Simple Opens

=item Indirect Filehandles

=item Pipe Opens

=item The Minus File

=item Mixing Reads and Writes

=item Filters 

=back

=item Open E<agrave> la C

=over 4

=item Permissions E<agrave> la mode

=back

=item Obscure Open Tricks

=over 4

=item Re-Opening Files (dups)

=item Dispelling the Dweomer

=item Paths as Opens

=item Single Argument Open

=item Playing with STDIN and STDOUT

=back

=item Other I/O Issues

=over 4

=item Opening Non-File Files

=item Opening Named Pipes

=item Opening Sockets

=item Binary Files

=item File Locking

=item IO Layers

=back

=item SEE ALSO 

=item AUTHOR and COPYRIGHT

=item HISTORY

=back

=head2 perlpacktut - tutorial on C<pack> and C<unpack>

=over 4

=item DESCRIPTION

=item The Basic Principle

=item Packing Text

=item Packing Numbers

=over 4

=item Integers

=item Unpacking a Stack Frame

=item How to Eat an Egg on a Net

=item Floating point Numbers

=back

=item Exotic Templates

=over 4

=item Bit Strings

=item Uuencoding

=item Doing Sums

=item  Unicode

=item Another Portable Binary Encoding

=back

=item Template Grouping

=item Lengths and Widths

=over 4

=item String Lengths

=item Dynamic Templates

=item Counting Repetitions

=back

=item Packing and Unpacking C Structures

=over 4

=item The Alignment Pit

=item Alignment, Take 2

=item Alignment, Take 3

=item Pointers for How to Use Them

=back

=item Pack Recipes

=item Funnies Section

=item Authors

=back

=head2 perlpod - the Plain Old Documentation format

=over 4

=item DESCRIPTION

=over 4

=item Ordinary Paragraph
X<POD, ordinary paragraph>

=item Verbatim Paragraph
X<POD, verbatim paragraph> X<verbatim>

=item Command Paragraph
X<POD, command>

C<=head1 I<Heading Text>> X<=head1> X<=head2> X<=head3> X<=head4> X<head1>
X<head2> X<head3> X<head4>, C<=head2 I<Heading Text>>, C<=head3 I<Heading
Text>>, C<=head4 I<Heading Text>>, C<=over I<indentlevel>> X<=over>
X<=item> X<=back> X<over> X<item> X<back>, C<=item I<stuff...>>, C<=back>,
C<=cut> X<=cut> X<cut>, C<=pod> X<=pod> X<pod>, C<=begin I<formatname>>
X<=begin> X<=end> X<=for> X<begin> X<end> X<for>, C<=end I<formatname>>,
C<=for I<formatname> I<text...>>, C<=encoding I<encodingname>> X<=encoding>
X<encoding>

=item Formatting Codes
X<POD, formatting code> X<formatting code>
X<POD, interior sequence> X<interior sequence>

C<IE<lt>textE<gt>> -- italic text X<I> X<< IZ<><> >> X<POD, formatting
code, italic> X<italic>, C<BE<lt>textE<gt>> -- bold text X<B> X<< BZ<><> >>
X<POD, formatting code, bold> X<bold>, C<CE<lt>codeE<gt>> -- code text X<C>
X<< CZ<><> >> X<POD, formatting code, code> X<code>, C<LE<lt>nameE<gt>> --
a hyperlink X<L> X<< LZ<><> >> X<POD, formatting code, hyperlink>
X<hyperlink>, C<EE<lt>escapeE<gt>> -- a character escape X<E> X<< EZ<><> >>
X<POD, formatting code, escape> X<escape>, C<FE<lt>filenameE<gt>> -- used
for filenames X<F> X<< FZ<><> >> X<POD, formatting code, filename>
X<filename>, C<SE<lt>textE<gt>> -- text contains non-breaking spaces X<S>
X<< SZ<><> >> X<POD, formatting code, non-breaking space>  X<non-breaking
space>, C<XE<lt>topic nameE<gt>> -- an index entry X<X> X<< XZ<><> >>
X<POD, formatting code, index entry> X<index entry>, C<ZE<lt>E<gt>> -- a
null (zero-effect) formatting code X<Z> X<< ZZ<><> >> X<POD, formatting
code, null> X<null>

=item The Intent
X<POD, intent of>

=item Embedding Pods in Perl Modules
X<POD, embedding>

=item Hints for Writing Pod

X<podchecker> X<POD, validating>

=back

=item SEE ALSO

=item AUTHOR

=back

=head2 perlpodspec - Plain Old Documentation: format specification and
notes

=over 4

=item DESCRIPTION

=item Pod Definitions

=item Pod Commands

"=head1", "=head2", "=head3", "=head4", "=pod", "=cut", "=over", "=item",
"=back", "=begin formatname", "=end formatname", "=for formatname text...",
"=encoding encodingname"

=item Pod Formatting Codes

C<IE<lt>textE<gt>> -- italic text, C<BE<lt>textE<gt>> -- bold text,
C<CE<lt>codeE<gt>> -- code text, C<FE<lt>filenameE<gt>> -- style for
filenames, C<XE<lt>topic nameE<gt>> -- an index entry, C<ZE<lt>E<gt>> -- a
null (zero-effect) formatting code, C<LE<lt>nameE<gt>> -- a hyperlink,
C<EE<lt>escapeE<gt>> -- a character escape, C<SE<lt>textE<gt>> -- text
contains non-breaking spaces

=item Notes on Implementing Pod Processors

=item About LE<lt>...E<gt> Codes

First:, Second:, Third:, Fourth:, Fifth:, Sixth:

=item About =over...=back Regions

=item About Data Paragraphs and "=begin/=end" Regions

=item SEE ALSO

=item AUTHOR

=back

=head2 perlrun - how to execute the Perl interpreter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item #! and quoting on non-Unix systems
X<hashbang> X<#!>

OS/2, MS-DOS, Win95/NT, Macintosh, VMS

=item Location of Perl
X<perl, location of interpreter>

=item Command Switches
X<perl, command switches> X<command switches>

B<-0>[I<octal/hexadecimal>] X<-0> X<$/>, B<-a> X<-a> X<autosplit>, B<-C
[I<number/list>]> X<-C>, B<-c> X<-c>, B<-d> X<-d> X<-dt>, B<-dt>,
B<-d:>I<foo[=bar,baz]> X<-d> X<-dt>, B<-dt:>I<foo[=bar,baz]>,
B<-D>I<letters> X<-D> X<DEBUGGING> X<-DDEBUGGING>, B<-D>I<number>, B<-e>
I<commandline> X<-e>, B<-f> X<-f>, B<-F>I<pattern> X<-F>, B<-h> X<-h>,
B<-i>[I<extension>] X<-i> X<in-place>, B<-I>I<directory> X<-I> X<@INC>,
B<-l>[I<octnum>] X<-l> X<$/> X<$\>, B<-m>[B<->]I<module> X<-m> X<-M>,
B<-M>[B<->]I<module>, B<-M>[B<->]I<'module ...'>,
B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n> X<-n>, B<-p> X<-p>, B<-P>
X<-P>, B<-s> X<-s>, B<-S> X<-S>, B<-t> X<-t>, B<-T> X<-T>, B<-u> X<-u>,
B<-U> X<-U>, B<-v> X<-v>, B<-V> X<-V>, B<-V:>I<configvar>, B<-w> X<-w>,
B<-W> X<-W>, B<-X> X<-X>, B<-x> X<-x>, B<-x> I<directory>

=back

=item ENVIRONMENT
X<perl, environment variables>

HOME X<HOME>, LOGDIR X<LOGDIR>, PATH X<PATH>, PERL5LIB X<PERL5LIB>,
PERL5OPT X<PERL5OPT>, PERLIO X<PERLIO>, :bytes X<:bytes>, :crlf X<:crlf>,
:mmap X<:mmap>, :perlio X<:perlio>, :pop X<:pop>, :raw X<:raw>, :stdio
X<:stdio>, :unix X<:unix>, :utf8 X<:utf8>, :win32 X<:win32>, PERLIO_DEBUG
X<PERLIO_DEBUG>, PERLLIB X<PERLLIB>, PERL5DB X<PERL5DB>, PERL5DB_THREADED
X<PERL5DB_THREADED>, PERL5SHELL (specific to the Win32 port) X<PERL5SHELL>,
PERL_ALLOW_NON_IFS_LSP (specific to the Win32 port)
X<PERL_ALLOW_NON_IFS_LSP>, PERL_DEBUG_MSTATS X<PERL_DEBUG_MSTATS>,
PERL_DESTRUCT_LEVEL X<PERL_DESTRUCT_LEVEL>, PERL_DL_NONLAZY
X<PERL_DL_NONLAZY>, PERL_ENCODING X<PERL_ENCODING>, PERL_HASH_SEED
X<PERL_HASH_SEED>, PERL_HASH_SEED_DEBUG X<PERL_HASH_SEED_DEBUG>, PERL_ROOT
(specific to the VMS port) X<PERL_ROOT>, PERL_SIGNALS X<PERL_SIGNALS>,
PERL_UNICODE X<PERL_UNICODE>, SYS$LOGIN (specific to the VMS port)
X<SYS$LOGIN>

=back

=head2 perldiag - various Perl diagnostics

=over 4

=item DESCRIPTION

=back

=head2 perllexwarn - Perl Lexical Warnings

=over 4

=item DESCRIPTION

=over 4

=item Default Warnings and Optional Warnings

=item What's wrong with B<-w> and C<$^W>

=item Controlling Warnings from the Command Line

B<-w> X<-w>, B<-W> X<-W>, B<-X> X<-X>

=item Backward Compatibility

=item Category Hierarchy
X<warning, categories>

=item Fatal Warnings
X<warning, fatal>

=item Reporting Warnings from a Module
X<warning, reporting> X<warning, registering>

=back

=item TODO

=item SEE ALSO

=item AUTHOR

=back

=head2 perldebug - Perl debugging

=over 4

=item DESCRIPTION

=item The Perl Debugger

=over 4

=item Debugger Commands

h X<debugger command, h>, h [command], h h, p expr X<debugger command, p>,
x [maxdepth] expr X<debugger command, x>, V [pkg [vars]] X<debugger
command, V>, X [vars] X<debugger command, X>, y [level [vars]] X<debugger
command, y>, T X<debugger command, T> X<backtrace> X<stack, backtrace>, s
[expr] X<debugger command, s> X<step>, n [expr] X<debugger command, n>, r
X<debugger command, r>, <CR>, c [line|sub] X<debugger command, c>, l
X<debugger command, l>, l min+incr, l min-max, l line, l subname, -
X<debugger command, ->, v [line] X<debugger command, v>, . X<debugger
command, .>, f filename X<debugger command, f>, /pattern/, ?pattern?, L
[abw] X<debugger command, L>, S [[!]regex] X<debugger command, S>, t
X<debugger command, t>, t expr X<debugger command, t>, b X<breakpoint>
X<debugger command, b>, b [line] [condition] X<breakpoint> X<debugger
command, b>, b subname [condition] X<breakpoint> X<debugger command, b>, b
postpone subname [condition] X<breakpoint> X<debugger command, b>, b load
filename X<breakpoint> X<debugger command, b>, b compile subname
X<breakpoint> X<debugger command, b>, B line X<breakpoint> X<debugger
command, B>, B * X<breakpoint> X<debugger command, B>, a [line] command
X<debugger command, a>, A line X<debugger command, A>, A * X<debugger
command, A>, w expr X<debugger command, w>, W expr X<debugger command, W>,
W * X<debugger command, W>, o X<debugger command, o>, o booloption ...
X<debugger command, o>, o anyoption? ... X<debugger command, o>, o
option=value ... X<debugger command, o>, < ? X<< debugger command, < >>, <
[ command ] X<< debugger command, < >>, < * X<< debugger command, < >>, <<
command X<< debugger command, << >>, > ? X<< debugger command, > >>, >
command X<< debugger command, > >>, > * X<< debugger command, > >>, >>
command X<<< debugger command, >> >>>, { ? X<debugger command, {>, { [
command ], { * X<debugger command, {>, {{ command X<debugger command, {{>,
! number X<debugger command, !>, ! -number X<debugger command, !>, !
pattern X<debugger command, !>, !! cmd X<debugger command, !!>, source file
X<debugger command, source>, H -number X<debugger command, H>, q or ^D
X<debugger command, q> X<debugger command, ^D>, R X<debugger command, R>,
|dbcmd X<debugger command, |>, ||dbcmd X<debugger command, ||>, command, m
expr X<debugger command, m>, M X<debugger command, M>, man [manpage]
X<debugger command, man>

=item Configurable Options

C<recallCommand>, C<ShellBang> X<debugger option, recallCommand> X<debugger
option, ShellBang>, C<pager> X<debugger option, pager>, C<tkRunning>
X<debugger option, tkRunning>, C<signalLevel>, C<warnLevel>, C<dieLevel>
X<debugger option, signalLevel> X<debugger option, warnLevel> X<debugger
option, dieLevel>, C<AutoTrace> X<debugger option, AutoTrace>, C<LineInfo>
X<debugger option, LineInfo>, C<inhibit_exit> X<debugger option,
inhibit_exit>, C<PrintRet> X<debugger option, PrintRet>, C<ornaments>
X<debugger option, ornaments>, C<frame> X<debugger option, frame>,
C<maxTraceLen> X<debugger option, maxTraceLen>, C<windowSize> X<debugger
option, windowSize>, C<arrayDepth>, C<hashDepth> X<debugger option,
arrayDepth> X<debugger option, hashDepth>, C<dumpDepth> X<debugger option,
dumpDepth>, C<compactDump>, C<veryCompact> X<debugger option, compactDump>
X<debugger option, veryCompact>, C<globPrint> X<debugger option,
globPrint>, C<DumpDBFiles> X<debugger option, DumpDBFiles>, C<DumpPackages>
X<debugger option, DumpPackages>, C<DumpReused> X<debugger option,
DumpReused>, C<quote>, C<HighBit>, C<undefPrint> X<debugger option, quote>
X<debugger option, HighBit> X<debugger option, undefPrint>, C<UsageOnly>
X<debugger option, UsageOnly>, C<TTY> X<debugger option, TTY>, C<noTTY>
X<debugger option, noTTY>, C<ReadLine> X<debugger option, ReadLine>,
C<NonStop> X<debugger option, NonStop>

=item Debugger input/output

Prompt, Multiline commands, Stack backtrace X<backtrace> X<stack,
backtrace>, Line Listing Format, Frame listing

=item Debugging compile-time statements

=item Debugger Customization

=item Readline Support

=item Editor Support for Debugging

=item The Perl Profiler
X<profile> X<profiling> X<profiler>

=back

=item Debugging regular expressions
X<regular expression, debugging>
X<regex, debugging> X<regexp, debugging>

=item Debugging memory usage
X<memory usage>

=item SEE ALSO

=item BUGS

=back

=head2 perlvar - Perl predefined variables

=over 4

=item DESCRIPTION

=over 4

=item Predefined Names

$ARG, $_, $a, $b, $<I<digits>>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, $^N, @LAST_MATCH_END, @+, $*,
HANDLE->input_line_number(EXPR), $INPUT_LINE_NUMBER, $NR, $,
IO::Handle->input_record_separator(EXPR), $INPUT_RECORD_SEPARATOR, $RS, $/,
HANDLE->autoflush(EXPR), $OUTPUT_AUTOFLUSH, $|,
IO::Handle->output_field_separator EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,,
IO::Handle->output_record_separator EXPR, $OUTPUT_RECORD_SEPARATOR, $ORS,
$\, $LIST_SEPARATOR, $", $SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $#,
HANDLE->format_page_number(EXPR), $FORMAT_PAGE_NUMBER, $%,
HANDLE->format_lines_per_page(EXPR), $FORMAT_LINES_PER_PAGE, $=,
HANDLE->format_lines_left(EXPR), $FORMAT_LINES_LEFT, $-, @LAST_MATCH_START,
@-, C<$`> is the same as C<substr($var, 0, $-[0])>, C<$&> is the same as
C<substr($var, $-[0], $+[0] - $-[0])>, C<$'> is the same as C<substr($var,
$+[0])>, C<$1> is the same as C<substr($var, $-[1], $+[1] - $-[1])>, C<$2>
is the same as C<substr($var, $-[2], $+[2] - $-[2])>, C<$3> is the same as
C<substr($var, $-[3], $+[3] - $-[3])>, HANDLE->format_name(EXPR),
$FORMAT_NAME, $~, HANDLE->format_top_name(EXPR), $FORMAT_TOP_NAME, $^,
IO::Handle->format_line_break_characters EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $:, IO::Handle->format_formfeed EXPR,
$FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A, $CHILD_ERROR, $?, ${^ENCODING},
$OS_ERROR, $ERRNO, $!, %!, $EXTENDED_OS_ERROR, $^E, $EVAL_ERROR, $@,
$PROCESS_ID, $PID, $$, $REAL_USER_ID, $UID, $<, $EFFECTIVE_USER_ID, $EUID,
$>, $REAL_GROUP_ID, $GID, $(, $EFFECTIVE_GROUP_ID, $EGID, $),
$PROGRAM_NAME, $0, $[, $], $COMPILING, $^C, $DEBUGGING, $^D,
$SYSTEM_FD_MAX, $^F, $^H, %^H, $INPLACE_EDIT, $^I, $^M, $OSNAME, $^O,
${^OPEN}, $PERLDB, $^P, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
0x100, 0x200, 0x400, $LAST_REGEXP_CODE_RESULT, $^R,
$EXCEPTIONS_BEING_CAUGHT, $^S, $BASETIME, $^T, ${^TAINT}, ${^UNICODE},
${^UTF8LOCALE}, $PERL_VERSION, $^V, $WARNING, $^W, ${^WARNING_BITS},
$EXECUTABLE_NAME, $^X, ARGV, $ARGV, @ARGV, ARGVOUT, @F, @INC, @_, %INC,
%ENV, $ENV{expr}, %SIG, $SIG{expr}

=item Error Indicators

=item Technical Note on the Syntax of Variable Names

=back

=item BUGS

=back

=head2 perlre - Perl regular expressions

=over 4

=item DESCRIPTION

i X</i> X<regex, case-insensitive> X<regexp, case-insensitive> X<regular
expression, case-insensitive>, m X</m> X<regex, multiline> X<regexp,
multiline> X<regular expression, multiline>, s X</s> X<regex, single-line>
X<regexp, single-line> X<regular expression, single-line>, x X</x>

=over 4

=item Regular Expressions

[1], [2], [3], cntrl X<cntrl>, graph X<graph>, print X<print>, punct
X<punct>, xdigit X<xdigit>

=item Extended Patterns

C<(?#text)> X<(?#)>, C<(?imsx-imsx)> X<(?)>, C<(?:pattern)> X<(?:)>,
C<(?imsx-imsx:pattern)>, C<(?=pattern)> X<(?=)> X<look-ahead, positive>
X<lookahead, positive>, C<(?!pattern)> X<(?!)> X<look-ahead, negative>
X<lookahead, negative>, C<(?<=pattern)> X<(?<=)> X<look-behind, positive>
X<lookbehind, positive>, C<(?<!pattern)> X<(?<!)> X<look-behind, negative>
X<lookbehind, negative>, C<(?{ code })> X<(?{})> X<regex, code in>
X<regexp, code in> X<regular expression, code in>, C<(??{ code })>
X<(??{})> X<regex, postponed> X<regexp, postponed> X<regular expression,
postponed> X<regex, recursive> X<regexp, recursive> X<regular expression,
recursive>, C<< (?>pattern) >> X<backtrack> X<backtracking>,
C<(?(condition)yes-pattern|no-pattern)> X<(?()>,
C<(?(condition)yes-pattern)>

=item Backtracking
X<backtrack> X<backtracking>

=item Version 8 Regular Expressions
X<regular expression, version 8> X<regex, version 8> X<regexp, version 8>

=item Warning on \1 vs $1

=item Repeated patterns matching zero-length substring

=item Combining pieces together

C<ST>, C<S|T>, C<S{REPEAT_COUNT}>, C<S{min,max}>, C<S{min,max}?>, C<S?>,
C<S*>, C<S+>, C<S??>, C<S*?>, C<S+?>, C<< (?>S) >>, C<(?=S)>, C<(?<=S)>,
C<(?!S)>, C<(?<!S)>, C<(??{ EXPR })>,
C<(?(condition)yes-pattern|no-pattern)>

=item Creating custom RE engines

=back

=item BUGS

=item SEE ALSO

=back

=head2 perlreref - Perl Regular Expressions Reference

=over 4

=item DESCRIPTION

=over 4

=item OPERATORS

=item SYNTAX

=item ESCAPE SEQUENCES

=item CHARACTER CLASSES

=item ANCHORS

=item QUANTIFIERS

=item EXTENDED CONSTRUCTS

=item VARIABLES

=item FUNCTIONS

=item TERMINOLOGY

=back

=item AUTHOR

=item SEE ALSO

=item THANKS

=back

=head2 perlref - Perl references and nested data structures

=over 4

=item NOTE

=item DESCRIPTION

=over 4

=item Making References
X<reference, creation> X<referencing>

1. X<\> X<backslash>, 2. X<array, anonymous> X<[> X<[]> X<square bracket>
X<bracket, square> X<arrayref> X<array reference> X<reference, array>, 3.
X<hash, anonymous> X<{> X<{}> X<curly bracket> X<bracket, curly> X<brace>
X<hashref> X<hash reference> X<reference, hash>, 4. X<subroutine,
anonymous> X<subroutine, reference> X<reference, subroutine> X<scope,
lexical> X<closure> X<lexical> X<lexical scope>, 5. X<constructor> X<new>,
6. X<autovivification>, 7. X<*foo{THING}> X<*>

=item Using References
X<reference, use> X<dereferencing> X<dereference>

2. X<${}> X<@{}> X<%{}>, 3. X<autovivification> X<< -> >> X<arrow>, 4.
X<encapsulation>

=item Symbolic references
X<reference, symbolic> X<reference, soft>
X<symbolic reference> X<soft reference>

=item Not-so-symbolic references

=item Pseudo-hashes: Using an array as a hash
X<pseudo-hash> X<pseudo hash> X<pseudohash>

=item Function Templates
X<scope, lexical> X<closure> X<lexical> X<lexical scope>
X<subroutine, nested> X<sub, nested> X<subroutine, local> X<sub, local>

=back

=item WARNING
X<reference, string context> X<reference, use as hash key>

=item SEE ALSO

=back

=head2 perlform - Perl formats

=over 4

=item DESCRIPTION

=over 4

=item Text Fields
X<format, text field>

=item Numeric Fields
X<#> X<format, numeric field>

=item The Field @* for Variable Width Multi-Line Text
X<@*>

=item The Field ^* for Variable Width One-line-at-a-time Text
X<^*>

=item Specifying Values
X<format, specifying values>

=item Using Fill Mode
X<format, fill mode>

=item Suppressing Lines Where All Fields Are Void
X<format, suppressing lines>

=item Repeating Format Lines
X<format, repeating lines>

=item Top of Form Processing
X<format, top of form> X<top> X<header>

=item Format Variables
X<format variables>
X<format, variables>

=back

=item NOTES

=over 4

=item Footers
X<format, footer> X<footer>

=item Accessing Formatting Internals
X<format, internals>

=back

=item WARNINGS

=back

=head2 perlobj - Perl objects

=over 4

=item DESCRIPTION

=over 4

=item An Object is Simply a Reference
X<object> X<bless> X<constructor> X<new>

=item A Class is Simply a Package
X<class> X<package> X<@ISA> X<inheritance>

=item A Method is Simply a Subroutine
X<method>

=item Method Invocation
X<invocation> X<method> X<arrow> X<< -> >>

=item Indirect Object Syntax
X<indirect object syntax> X<invocation, indirect> X<indirect>

=item Default UNIVERSAL methods
X<UNIVERSAL>

isa(CLASS) X<isa>, can(METHOD) X<can>, VERSION( [NEED] ) X<VERSION>

=item Destructors
X<destructor> X<DESTROY>

=item Summary

=item Two-Phased Garbage Collection
X<garbage collection> X<GC> X<circular reference>
X<reference, circular> X<DESTROY> X<destructor>

=back

=item SEE ALSO

=back

=head2 perltie - how to hide an object class in a simple variable

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tying Scalars
X<scalar, tying>

TIESCALAR classname, LIST X<TIESCALAR>, FETCH this X<FETCH>, STORE this,
value X<STORE>, UNTIE this X<UNTIE>, DESTROY this X<DESTROY>

=item Tying Arrays
X<array, tying>

TIEARRAY classname, LIST X<TIEARRAY>, FETCH this, index X<FETCH>, STORE
this, index, value X<STORE>, FETCHSIZE this X<FETCHSIZE>, STORESIZE this,
count X<STORESIZE>, EXTEND this, count X<EXTEND>, EXISTS this, key
X<EXISTS>, DELETE this, key X<DELETE>, CLEAR this X<CLEAR>, PUSH this, LIST
 X<PUSH>, POP this X<POP>, SHIFT this X<SHIFT>, UNSHIFT this, LIST 
X<UNSHIFT>, SPLICE this, offset, length, LIST X<SPLICE>, UNTIE this
X<UNTIE>, DESTROY this X<DESTROY>

=item Tying Hashes
X<hash, tying>

USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST X<TIEHASH>, FETCH this,
key X<FETCH>, STORE this, key, value X<STORE>, DELETE this, key X<DELETE>,
CLEAR this X<CLEAR>, EXISTS this, key X<EXISTS>, FIRSTKEY this X<FIRSTKEY>,
NEXTKEY this, lastkey X<NEXTKEY>, SCALAR this X<SCALAR>, UNTIE this
X<UNTIE>, DESTROY this X<DESTROY>

=item Tying FileHandles
X<filehandle, tying>

TIEHANDLE classname, LIST X<TIEHANDLE>, WRITE this, LIST X<WRITE>, PRINT
this, LIST X<PRINT>, PRINTF this, LIST X<PRINTF>, READ this, LIST X<READ>,
READLINE this X<READLINE>, GETC this X<GETC>, CLOSE this X<CLOSE>, UNTIE
this X<UNTIE>, DESTROY this X<DESTROY>

=item UNTIE this
X<UNTIE>

=item The C<untie> Gotcha
X<untie>

=back

=item SEE ALSO

=item BUGS

=item AUTHOR

=back

=head2 perldbmfilter - Perl DBM Filters

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>

=over 4

=item The Filter

=item An Example -- the NULL termination problem.

=item Another Example -- Key is a C int.

=back

=item SEE ALSO

=item AUTHOR

=back

=head2 perlipc - Perl interprocess communication (signals, fifos, pipes,
safe subprocesses, sockets, and semaphores)

=over 4

=item DESCRIPTION

=item Signals

=over 4

=item Handling the SIGHUP Signal in Daemons

=back

=item Named Pipes

=over 4

=item Deferred Signals (Safe Signals)

Long running opcodes, Interrupting IO, Restartable system calls, Signals as
"faults", Signals triggered by operating system state

=back

=item Using open() for IPC

=over 4

=item Filehandles

=item Background Processes

=item Complete Dissociation of Child from Parent

=item Safe Pipe Opens

=item Bidirectional Communication with Another Process

=item Bidirectional Communication with Yourself

=back

=item Sockets: Client/Server Communication

=over 4

=item Internet Line Terminators

=item Internet TCP Clients and Servers

=item Unix-Domain TCP Clients and Servers

=back

=item TCP Clients with IO::Socket

=over 4

=item A Simple Client

C<Proto>, C<PeerAddr>, C<PeerPort>

=item A Webget Client

=item Interactive Client with IO::Socket

=back

=item TCP Servers with IO::Socket

Proto, LocalPort, Listen, Reuse

=item UDP: Message Passing

=item SysV IPC

=item NOTES

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 perlfork - Perl's fork() emulation

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Behavior of other Perl features in forked pseudo-processes

$$ or $PROCESS_ID, %ENV, chdir() and all other builtins that accept
filenames, wait() and waitpid(), kill(), exec(), exit(), Open handles to
files, directories and network sockets

=item Resource limits

=item Killing the parent process

=item Lifetime of the parent process and pseudo-processes

=item CAVEATS AND LIMITATIONS

BEGIN blocks, Open filehandles, Forking pipe open() not yet implemented,
Global state maintained by XSUBs, Interpreter embedded in larger
application, Thread-safety of extensions

=back

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 perlnumber - semantics of numbers and numeric operations in Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Storing numbers

=item Numeric operators and numeric conversions

=item Flavors of Perl numeric operations

Arithmetic operators, ++, Arithmetic operators during C<use integer>, Other
mathematical operators, Bitwise operators, Bitwise operators during C<use
integer>, Operators which expect an integer, Operators which expect a
string

=item AUTHOR

=item SEE ALSO

=back

=head2 perlthrtut - tutorial on threads in Perl

=over 4

=item DESCRIPTION

=item Status

=item What Is A Thread Anyway?

=item Threaded Program Models

=over 4

=item Boss/Worker

=item Work Crew

=item Pipeline

=back

=item What kind of threads are Perl threads?

=item Thread-Safe Modules

=item Thread Basics

=over 4

=item Basic Thread Support

=item A Note about the Examples

=item Creating Threads

=item Waiting For A Thread To Exit

=item Ignoring A Thread

=back

=item Threads And Data

=over 4

=item Shared And Unshared Data

=item Thread Pitfalls: Races

=back

=item Synchronization and control

=over 4

=item Controlling access: lock()

=item A Thread Pitfall: Deadlocks

=item Queues: Passing Data Around

=item Semaphores: Synchronizing Data Access

=item Basic semaphores

=item Advanced Semaphores

=item cond_wait() and cond_signal()

=item Giving up control

=back

=item General Thread Utility Routines

=over 4

=item What Thread Am I In?

=item Thread IDs

=item Are These Threads The Same?

=item What Threads Are Running?

=back

=item A Complete Example

=item Different implementations of threads

=item Performance considerations

=item Process-scope Changes

=item Thread-Safety of System Libraries

=item Conclusion

=item Bibliography

=over 4

=item Introductory Texts

=item OS-Related References

=item Other References

=back

=item Acknowledgements

=item AUTHOR

=item Copyrights

=back

=head2 perlothrtut - old tutorial on threads in Perl

=over 4

=item DESCRIPTION

=item What Is A Thread Anyway?

=item Threaded Program Models

=over 4

=item Boss/Worker

=item Work Crew

=item Pipeline

=back

=item Native threads

=item What kind of threads are perl threads?

=item Threadsafe Modules

=item Thread Basics

=over 4

=item Basic Thread Support

=item Creating Threads

=item Giving up control

=item Waiting For A Thread To Exit

=item Errors In Threads

=item Ignoring A Thread

=back

=item Threads And Data

=over 4

=item Shared And Unshared Data

=item Thread Pitfall: Races

=item Controlling access: lock()

=item Thread Pitfall: Deadlocks

=item Queues: Passing Data Around

=back

=item Threads And Code

=over 4

=item Semaphores: Synchronizing Data Access

Basic semaphores, Advanced Semaphores

=item Attributes: Restricting Access To Subroutines

=item Subroutine Locks

=item Methods

=item Locking A Subroutine

=back

=item General Thread Utility Routines

=over 4

=item What Thread Am I In?

=item Thread IDs

=item Are These Threads The Same?

=item What Threads Are Running?

=back

=item A Complete Example

=item Conclusion

=item Bibliography

=over 4

=item Introductory Texts

=item OS-Related References

=item Other References

=back

=item Acknowledgements

=item AUTHOR

=item Copyrights

=back

=head2 perlport - Writing portable Perl

=over 4

=item DESCRIPTION

Not all Perl programs have to be portable, Nearly all of Perl already I<is>
portable

=item ISSUES

=over 4

=item Newlines

=item Numbers endianness and Width

=item Files and Filesystems

=item System Interaction

=item Command names versus file pathnames

=item Networking

=item Interprocess Communication (IPC)

=item External Subroutines (XS)

=item Standard Modules

=item Time and Date

=item Character sets and character encoding

=item Internationalisation

=item System Resources

=item Security

=item Style

=back

=item CPAN Testers

=item PLATFORMS

=over 4

=item Unix

=item DOS and Derivatives

=item S<Mac OS>

=item VMS

=item VOS

=item EBCDIC Platforms

=item Acorn RISC OS

=item Other perls

=back

=item FUNCTION IMPLEMENTATIONS

=over 4

=item Alphabetical Listing of Perl Functions

-I<X>, atan2 Y,X, atan2, binmode, chmod, chown, chroot, crypt, dbmclose,
dbmopen, dump, exec, exit, fcntl, flock, fork, getlogin, getpgrp, getppid,
getpriority, getpwnam, getgrnam, getnetbyname, getpwuid, getgrgid,
getnetbyaddr, getprotobynumber, getservbyport, getpwent, getgrent,
gethostbyname, gethostent, getnetent, getprotoent, getservent, sethostent,
setnetent, setprotoent, setservent, endpwent, endgrent, endhostent,
endnetent, endprotoent, endservent, getsockopt SOCKET,LEVEL,OPTNAME, glob,
gmtime, ioctl FILEHANDLE,FUNCTION,SCALAR, kill, link, localtime, lstat,
msgctl, msgget, msgsnd, msgrcv, open, pipe, readlink, rename, select,
semctl, semget, semop, setgrent, setpgrp, setpriority, setpwent,
setsockopt, shmctl, shmget, shmread, shmwrite, sockatmark, socketpair,
stat, symlink, syscall, sysopen, system, times, truncate, umask, utime,
wait, waitpid

=back

=item Supported Platforms

=item SEE ALSO

=item AUTHORS / CONTRIBUTORS

=back

=head2 perllocale - Perl locale handling (internationalization and
localization)

=over 4

=item DESCRIPTION

=item PREPARING TO USE LOCALES

=item USING LOCALES

=over 4

=item The use locale pragma

=item The setlocale function

=item Finding locales

=item LOCALE PROBLEMS

=item Temporarily fixing locale problems

=item Permanently fixing locale problems

=item Permanently fixing your system's locale configuration

=item Fixing system locale configuration

=item The localeconv function

=item I18N::Langinfo

=back

=item LOCALE CATEGORIES

=over 4

=item Category LC_COLLATE: Collation

=item Category LC_CTYPE: Character Types

=item Category LC_NUMERIC: Numeric Formatting

=item Category LC_MONETARY: Formatting of monetary amounts

=item LC_TIME

=item Other categories

=back

=item SECURITY

=item ENVIRONMENT

PERL_BADLANG, LC_ALL, LANGUAGE, LC_CTYPE, LC_COLLATE, LC_MONETARY,
LC_NUMERIC, LC_TIME, LANG

=item NOTES

=over 4

=item Backward compatibility

=item I18N:Collate obsolete

=item Sort speed and memory use impacts

=item write() and LC_NUMERIC

=item Freely available locale definitions

=item I18n and l10n

=item An imperfect standard

=back

=item Unicode and UTF-8

=item BUGS

=over 4

=item Broken systems

=back

=item SEE ALSO

=item HISTORY

=back

=head2 perluniintro - Perl Unicode introduction

=over 4

=item DESCRIPTION

=over 4

=item Unicode

=item Perl's Unicode Support

=item Perl's Unicode Model

=item Unicode and EBCDIC

=item Creating Unicode

=item Handling Unicode

=item Legacy Encodings

=item Unicode I/O

=item Displaying Unicode As Text

=item Special Cases

=item Advanced Topics

=item Miscellaneous

=item Questions With Answers

=item Hexadecimal Notation

=item Further Resources

=back

=item UNICODE IN OLDER PERLS

=item SEE ALSO

=item ACKNOWLEDGMENTS

=item AUTHOR, COPYRIGHT, AND LICENSE

=back

=head2 perlunicode - Unicode support in Perl

=over 4

=item DESCRIPTION

=over 4

=item Important Caveats

Input and Output Layers, Regular Expressions, C<use utf8> still needed to
enable UTF-8/UTF-EBCDIC in scripts, BOM-marked scripts and UTF-16 scripts
autodetected, C<use encoding> needed to upgrade non-Latin-1 byte strings

=item Byte and Character Semantics

=item Effects of Character Semantics

=item Scripts

=item Blocks

=item User-Defined Character Properties

=item Character Encodings for Input and Output

=item Unicode Regular Expression Support Level

=item Unicode Encodings

=item Security Implications of Unicode

=item Unicode in Perl on EBCDIC

=item Locales

=item When Unicode Does Not Happen

=item Forcing Unicode in Perl (Or Unforcing Unicode in Perl)

=item Using Unicode in XS

=back

=item BUGS

=over 4

=item Interaction with Locales

=item Interaction with Extensions

=item Speed

=item Porting code from perl-5.6.X

=back

=item SEE ALSO

=back

=head2 perlebcdic - Considerations for running Perl on EBCDIC platforms

=over 4

=item DESCRIPTION

=item COMMON CHARACTER CODE SETS

=over 4

=item ASCII

=item ISO 8859

=item Latin 1 (ISO 8859-1)

=item EBCDIC

=item 13 variant characters

=item 0037

=item 1047

=item POSIX-BC

=item Unicode code points versus EBCDIC code points

=item Remaining Perl Unicode problems in EBCDIC

=item Unicode and UTF

=item Using Encode

=back

=item SINGLE OCTET TABLES

recipe 0, recipe 1, recipe 2, recipe 3, recipe 4, recipe 5, recipe 6

=item IDENTIFYING CHARACTER CODE SETS

=item CONVERSIONS

=over 4

=item tr///

=item iconv

=item C RTL

=back

=item OPERATOR DIFFERENCES

=item FUNCTION DIFFERENCES

chr(), ord(), pack(), print(), printf(), sort(), sprintf(), unpack()

=item REGULAR EXPRESSION DIFFERENCES

=item SOCKETS

=item SORTING

=over 4

=item Ignore ASCII vs. EBCDIC sort differences.

=item MONO CASE then sort data.

=item Convert, sort data, then re convert.

=item Perform sorting on one type of machine only.

=back

=item TRANSFORMATION FORMATS

=over 4

=item URL decoding and encoding

=item uu encoding and decoding

=item Quoted-Printable encoding and decoding

=item Caesarian ciphers

=back

=item Hashing order and checksums

=item I18N AND L10N

=item MULTI OCTET CHARACTER SETS

=item OS ISSUES

=over 4

=item OS/400

PASE, IFS access

=item OS/390, z/OS

chcp, dataset access, OS/390, z/OS iconv, locales

=item VM/ESA?

=item POSIX-BC?

=back

=item BUGS

=item SEE ALSO

=item REFERENCES

=item HISTORY

=item AUTHOR

=back

=head2 perlsec - Perl security

=over 4

=item DESCRIPTION

=over 4

=item Laundering and Detecting Tainted Data

=item Switches On the "#!" Line

=item Taint mode and @INC

=item Cleaning Up Your Path

=item Security Bugs

=item Protecting Your Programs

=item Unicode

=item Algorithmic Complexity Attacks

=back

=item SEE ALSO

=back

=head2 perlmod - Perl modules (packages and symbol tables)

=over 4

=item DESCRIPTION

=over 4

=item Packages
X<package> X<namespace> X<variable, global> X<global variable> X<global>

=item Symbol Tables
X<symbol table> X<stash> X<%::> X<%main::> X<typeglob> X<glob> X<alias>

=item BEGIN, CHECK, INIT and END
X<BEGIN> X<CHECK> X<INIT> X<END>

=item Perl Classes
X<class> X<@ISA>

=item Perl Modules
X<module>

=item Making your module threadsafe
X<threadsafe> X<thread safe>
X<module, threadsafe> X<module, thread safe>
X<CLONE> X<CLONE_SKIP> X<thread> X<threads> X<ithread>

=back

=item SEE ALSO

=back

=head2 perlmodlib - constructing new Perl modules and finding existing ones

=over 4

=item THE PERL MODULE LIBRARY

=over 4

=item Pragmatic Modules

assertions::compat, attributes, attrs, autouse, base, bigint, bignum,
bigrat, blib, bytes, charnames, constant, diagnostics, encoding, fields,
filetest, if, integer, less, lib, locale, open, ops, overload, re, sigtrap,
sort, strict, subs, threads, threads::shared, utf8, vars, vmsish, warnings,
warnings::register

=item Standard Modules

AnyDBM_File, Archive::Tar, Archive::Tar::File, Attribute::Handlers,
AutoLoader, AutoSplit, B, B::Asmdata, B::Assembler, B::Bblock, B::Bytecode,
B::C, B::CC, B::Concise, B::Debug, B::Deparse, B::Disassembler, B::Lint,
B::Showlex, B::Stackobj, B::Stash, B::Terse, B::Xref, Benchmark,
ByteLoader, CGI, CGI::Apache, CGI::Carp, CGI::Cookie, CGI::Fast,
CGI::Pretty, CGI::Push, CGI::Switch, CGI::Util, CPAN, CPAN::FirstTime,
CPAN::Nox, Carp, Carp::Heavy, Class::ISA, Class::Struct, Compress::Zlib,
Config, Cwd, DB, DB_File, Data::Dumper, Devel::DProf, Devel::PPPort,
Devel::Peek, Devel::SelfStubber, Digest, Digest::MD5, Digest::base,
DirHandle, Dumpvalue, DynaLoader, Encode, Encode::Alias, Encode::Byte,
Encode::CJKConstants, Encode::CN, Encode::CN::HZ, Encode::Config,
Encode::EBCDIC, Encode::Encoder, Encode::Encoding, Encode::Guess,
Encode::JP, Encode::JP::H2Z, Encode::JP::JIS7, Encode::KR,
Encode::KR::2022_KR, Encode::MIME::Header, Encode::PerlIO,
Encode::Supported, Encode::Symbol, Encode::TW, Encode::Unicode,
Encode::Unicode::UTF7, English, Env, Errno, Exporter, Exporter::Heavy,
ExtUtils::CBuilder, ExtUtils::CBuilder::Platform::Windows,
ExtUtils::Command, ExtUtils::Command::MM, ExtUtils::Constant,
ExtUtils::Embed, ExtUtils::Install, ExtUtils::Installed, ExtUtils::Liblist,
ExtUtils::MM, ExtUtils::MM_AIX, ExtUtils::MM_Any, ExtUtils::MM_BeOS,
ExtUtils::MM_Cygwin, ExtUtils::MM_DOS, ExtUtils::MM_MacOS,
ExtUtils::MM_NW5, ExtUtils::MM_OS2, ExtUtils::MM_QNX, ExtUtils::MM_UWIN,
ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_VOS, ExtUtils::MM_Win32,
ExtUtils::MM_Win95, ExtUtils::MY, ExtUtils::MakeMaker,
ExtUtils::MakeMaker::Config, ExtUtils::MakeMaker::FAQ,
ExtUtils::MakeMaker::Tutorial, ExtUtils::MakeMaker::bytes,
ExtUtils::MakeMaker::vmsish, ExtUtils::Manifest, ExtUtils::Mkbootstrap,
ExtUtils::Mksymlists, ExtUtils::Packlist, ExtUtils::ParseXS,
ExtUtils::testlib, Fatal, Fcntl, File::Basename, File::CheckTree,
File::Compare, File::Copy, File::DosGlob, File::Find, File::Glob,
File::Path, File::Spec, File::Spec::Cygwin, File::Spec::Epoc,
File::Spec::Functions, File::Spec::Mac, File::Spec::OS2, File::Spec::Unix,
File::Spec::VMS, File::Spec::Win32, File::Temp, File::stat, FileCache,
FileHandle, Filter::Simple, Filter::Util::Call, FindBin, GDBM_File,
Getopt::Long, Getopt::Std, Hash::Util, I18N::Collate, I18N::LangTags,
I18N::LangTags::List, I18N::Langinfo, IO, IO::Dir, IO::File, IO::Handle,
IO::Pipe, IO::Poll, IO::Seekable, IO::Select, IO::Socket, IO::Socket::INET,
IO::Socket::UNIX, IO::Zlib, IPC::Open2, IPC::Open3, IPC::SysV,
IPC::SysV::Msg, IPC::SysV::Semaphore, List::Util, Locale::Constants,
Locale::Country, Locale::Currency, Locale::Language, Locale::Maketext,
Locale::Maketext::TPJ13, Locale::Script, MIME::Base64,
MIME::Base64::QuotedPrint, Math::BigFloat, Math::BigInt,
Math::BigInt::Calc, Math::BigInt::FastCalc, Math::BigRat, Math::Complex,
Math::Trig, Memoize, Memoize::AnyDBM_File, Memoize::Expire,
Memoize::ExpireFile, Memoize::ExpireTest, Memoize::NDBM_File,
Memoize::SDBM_File, Memoize::Storable, NDBM_File, NEXT, Net::Cmd,
Net::Config, Net::Domain, Net::FTP, Net::NNTP, Net::Netrc, Net::POP3,
Net::Ping, Net::SMTP, Net::Time, Net::hostent, Net::libnetFAQ, Net::netent,
Net::protoent, Net::servent, O, ODBM_File, Opcode, POSIX, PerlIO,
PerlIO::encoding, PerlIO::scalar, PerlIO::via, PerlIO::via::QuotedPrint,
Pod::Checker, Pod::Find, Pod::Functions, Pod::Html, Pod::InputObjects,
Pod::LaTeX, Pod::Man, Pod::ParseLink, Pod::ParseUtils, Pod::Parser,
Pod::Perldoc::ToChecker, Pod::Perldoc::ToMan, Pod::Perldoc::ToNroff,
Pod::Perldoc::ToPod, Pod::Perldoc::ToRtf, Pod::Perldoc::ToText,
Pod::Perldoc::ToTk, Pod::Perldoc::ToXml, Pod::PlainText, Pod::Plainer,
Pod::Select, Pod::Text, Pod::Text::Color, Pod::Text::Overstrike,
Pod::Text::Termcap, Pod::Usage, SDBM_File, Safe, Scalar::Util,
Search::Dict, SelectSaver, SelfLoader, Shell, Socket, Storable, Switch,
Symbol, Sys::Hostname, Sys::Syslog, Term::ANSIColor, Term::Cap,
Term::Complete, Term::ReadLine, Test, Test::Builder, Test::Harness,
Test::Harness::Assert, Test::Harness::Iterator, Test::Harness::Point,
Test::Harness::Straps, Test::More, Test::Simple, Test::Tutorial,
Text::Abbrev, Text::Balanced, Text::ParseWords, Text::Soundex, Text::Tabs,
Text::Wrap, Thread, Thread::Queue, Thread::Semaphore, Thread::Signal,
Thread::Specific, Tie::Array, Tie::File, Tie::Handle, Tie::Hash,
Tie::Memoize, Tie::RefHash, Tie::Scalar, Tie::SubstrHash, Time::HiRes,
Time::Local, Time::gmtime, Time::localtime, Time::tm, UNIVERSAL,
Unicode::Collate, Unicode::Normalize, Unicode::UCD, User::grent,
User::pwent, Win32, XS::APItest, XS::Typemap, XSLoader

=item Extension Modules

=back

=item CPAN

=over 4

=item Africa

South Africa

=item Asia

China, Indonesia, Israel, Japan, Malaysia, Russian Federation, Saudi
Arabia, Singapore, South Korea, Taiwan, Thailand

=item Central America

Costa Rica

=item Europe

Austria, Belgium, Bosnia and Herzegovina, Bulgaria, Croatia, Czech
Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary,
Iceland, Ireland, Italy, Latvia, Lithuania, Netherlands, Norway, Poland,
Portugal, Romania, Russia, Slovakia, Slovenia, Spain, Sweden, Switzerland,
Turkey, Ukraine, United Kingdom

=item North America

Canada, Alberta, Manitoba, Nova Scotia, Ontario, Mexico, United States,
Alabama, California, Colorado, Delaware, District of Columbia, Florida,
Indiana, Kentucky, Massachusetts, Michigan, Nevada, New Jersey, New York,
North Carolina, Oklahoma, Oregon, Pennsylvania, Tennessee, Texas, Utah,
Virginia, Washington, Wisconsin

=item Oceania

Australia, New Zealand, United States

=item South America

Argentina, Brazil, Chile

=item RSYNC Mirrors

=back

=item Modules: Creation, Use, and Abuse

=over 4

=item Guidelines for Module Creation

=item Guidelines for Converting Perl 4 Library Scripts into Modules

=item Guidelines for Reusing Application Code

=back

=item NOTE

=back

=head2 perlmodstyle - Perl module style guide

=over 4

=item INTRODUCTION

=item QUICK CHECKLIST

=over 4

=item Before you start

=item The API

=item Stability

=item Documentation

=item Release considerations

=back

=item BEFORE YOU START WRITING A MODULE

=over 4

=item Has it been done before?

=item Do one thing and do it well

=item What's in a name?

=back

=item DESIGNING AND WRITING YOUR MODULE

=over 4

=item To OO or not to OO?

=item Designing your API

Write simple routines to do simple things, Separate functionality from
output, Provide sensible shortcuts and defaults, Naming conventions,
Parameter passing

=item Strictness and warnings

=item Backwards compatibility

=item Error handling and messages

=back

=item DOCUMENTING YOUR MODULE

=over 4

=item POD

=item README, INSTALL, release notes, changelogs

perl Makefile.PL, make, make test, make install, perl Build.PL, perl Build,
perl Build test, perl Build install

=back

=item RELEASE CONSIDERATIONS

=over 4

=item Version numbering

=item Pre-requisites

=item Testing

=item Packaging

=item Licensing

=back

=item COMMON PITFALLS

=over 4

=item Reinventing the wheel

=item Trying to do too much

=item Inappropriate documentation

=back

=item SEE ALSO

L<perlstyle>, L<perlnewmod>, L<perlpod>, L<podchecker>, Packaging Tools,
Testing tools, http://pause.perl.org/, Any good book on software
engineering

=item AUTHOR

=back

=head2 perlmodinstall - Installing CPAN Modules

=over 4

=item DESCRIPTION

=over 4

=item PREAMBLE

B<DECOMPRESS> the file, B<UNPACK> the file into a directory, B<BUILD> the
module (sometimes unnecessary), B<INSTALL> the module

=back

=item PORTABILITY

=item HEY

=item AUTHOR

=item COPYRIGHT

=back

=head2 perlnewmod - preparing a new module for distribution

=over 4

=item DESCRIPTION

=over 4

=item Warning

=item What should I make into a module?

=item Step-by-step: Preparing the ground

Look around, Check it's new, Discuss the need, Choose a name, Check again

=item Step-by-step: Making the module

Start with F<module-starter> or F<h2xs>, Use L<strict|strict> and
L<warnings|warnings>, Use L<Carp|Carp>, Use L<Exporter|Exporter> - wisely!,
Use L<plain old documentation|perlpod>, Write tests, Write the README

=item Step-by-step: Distributing your module

Get a CPAN user ID, C<perl Makefile.PL; make test; make dist>, Upload the
tarball, Announce to the modules list, Announce to clpa, Fix bugs!

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perlutil - utilities packaged with the Perl distribution

=over 4

=item DESCRIPTION

=over 4

=item DOCUMENTATION

L<perldoc|perldoc>, L<pod2man|pod2man> and L<pod2text|pod2text>,
L<pod2html|pod2html> and L<pod2latex|pod2latex>, L<pod2usage|pod2usage>,
L<podselect|podselect>, L<podchecker|podchecker>, L<splain|splain>,
L<roffitall|roffitall>

=item CONVERTORS

L<a2p|a2p>, L<s2p|s2p>, L<find2perl|find2perl>

=item Administration

L<libnetcfg|libnetcfg>

=item Development

L<perlbug|perlbug>, L<h2ph|h2ph>, L<c2ph|c2ph> and L<pstruct|pstruct>,
L<h2xs|h2xs>, L<dprofpp|dprofpp>, L<perlcc|perlcc>

=item SEE ALSO

=back

=back

=head2 perlcompile - Introduction to the Perl Compiler-Translator 

=over 4

=item DESCRIPTION

=over 4

=item Layout

B::Bytecode, B::C, B::CC, B::Lint, B::Deparse, B::Xref

=back

=item Using The Back Ends

=over 4

=item The Cross Referencing Back End

i, &, s, r

=item The Decompiling Back End

=item The Lint Back End

=item The Simple C Back End

=item The Bytecode Back End

=item The Optimized C Back End

=back

=item Module List for the Compiler Suite

B, O, B::Asmdata, B::Assembler, B::Bblock, B::Bytecode, B::C, B::CC,
B::Concise, B::Debug, B::Deparse, B::Disassembler, B::Lint, B::Showlex,
B::Stackobj, B::Stash, B::Terse, B::Xref

=item KNOWN PROBLEMS

=item AUTHOR

=back

=head2 perlfilter - Source Filters

=over 4

=item DESCRIPTION

=item CONCEPTS

=item USING FILTERS

=item WRITING A SOURCE FILTER

=item WRITING A SOURCE FILTER IN C

B<Decryption Filters>

=item CREATING A SOURCE FILTER AS A SEPARATE EXECUTABLE

=item WRITING A SOURCE FILTER IN PERL

=item USING CONTEXT: THE DEBUG FILTER

=item CONCLUSION

=item THINGS TO LOOK OUT FOR

Some Filters Clobber the C<DATA> Handle

=item REQUIREMENTS

=item AUTHOR

=item Copyrights

=back

=head2 perlglossary - Perl Glossary

=over 4

=item DESCRIPTION

=over 4

=item A

accessor methods, actual arguments, address operator, algorithm, alias,
alternatives, anonymous, architecture, argument, ARGV, arithmetical
operator, array, array context, ASCII, assertion, assignment, assignment
operator, associative array, associativity, asynchronous, atom, atomic
operation, attribute, autogeneration, autoincrement, autoload, autosplit,
autovivification, AV, awk

=item B

backreference, backtracking, backward compatibility, bareword, base class,
big-endian, binary, binary operator, bind, bit, bit shift, bit string,
bless, block, BLOCK, block buffering, Boolean, Boolean context, breakpoint,
broadcast, BSD, bucket, buffer, built-in, bundle, byte, bytecode

=item C

C, C preprocessor, call by reference, call by value, callback, canonical,
capturing, character, character class, character property, circumfix
operator, class, class method, client, cloister, closure, cluster, CODE,
code generator, code subpattern, collating sequence, command, command
buffering, command name, command-line arguments, comment, compilation unit,
compile phase, compile time, compiler, composer, concatenation,
conditional, connection, construct, constructor, context, continuation,
core dump, CPAN, cracker, current package, current working directory,
currently selected output channel, CV

=item D

dangling statement, data structure, data type, datagram, DBM, declaration,
decrement, default, defined, delimiter, dereference, derived class,
descriptor, destroy, destructor, device, directive, directory, directory
handle, dispatch, distribution, dweomer, dwimmer, dynamic scoping

=item E

eclectic, element, embedding, empty subclass test, en passant,
encapsulation, endian, environment, environment variable, EOF, errno,
error, escape sequence, exception, exception handling, exec, executable
file, execute, execute bit, exit status, export, expression, extension

=item F

false, FAQ, fatal error, field, FIFO, file, file descriptor, file test
operator, fileglob, filehandle, filename, filesystem, filter, flag,
floating point, flush, FMTEYEWTK, fork, formal arguments, format, freely
available, freely redistributable, freeware, function, funny character,
garbage collection

=item G

GID, glob, global, global destruction, glue language, granularity, greedy,
grep, group, GV

=item H

hacker, handler, hard reference, hash, hash table, header file, here
document, hexadecimal, home directory, host, hubris, HV

=item I

identifier, impatience, implementation, import, increment, indexing,
indirect filehandle, indirect object, indirect object slot, indirection,
infix, inheritance, instance, instance variable, integer, interface,
interpolation, interpreter, invocant, invocation, I/O, IO, IP, IPC, is-a,
iteration, iterator, IV

=item J

JAPH

=item K

key, keyword

=item L

label, laziness, left shift, leftmost longest, lexeme, lexer, lexical
analysis, lexical scoping, lexical variable, library, LIFO, line, line
buffering, line number, link, LIST, list, list context, list operator, list
value, literal, little-endian, local, logical operator, lookahead,
lookbehind, loop, loop control statement, loop label, lvaluable, lvalue,
lvalue modifier

=item M

magic, magical increment, magical variables, Makefile, man, manpage,
matching, member data, memory, metacharacter, metasymbol, method,
minimalism, mode, modifier, module, modulus, monger, mortal,
multidimensional array, multiple inheritance

=item N

named pipe, namespace, network address, newline, NFS, null character, null
list, null string, numeric context, NV, nybble

=item O

object, octal, offset, one-liner, open source software, operand, operating
system, operator, operator overloading, options, overloading, overriding,
owner

=item P

package, pad, parameter, parent class, parse tree, parsing, patch, PATH,
pathname, pattern, pattern matching, permission bits, Pern, pipe, pipeline,
platform, pod, pointer, polymorphism, port, portable, porter, POSIX,
postfix, pp, pragma, precedence, prefix, preprocessing, procedure, process,
program generator, progressive matching, property, protocol, prototype,
pseudofunction, pseudohash, pseudoliteral, public domain, pumpkin,
pumpking, PV

=item Q

qualified, quantifier

=item R

readable, reaping, record, recursion, reference, referent, regex, regular
expression, regular expression modifier, regular file, relational operator,
reserved words, return value, RFC, right shift, root, RTFM, run phase, run
time, run-time pattern, RV, rvalue

=item S

scalar, scalar context, scalar literal, scalar value, scalar variable,
scope, scratchpad, script, script kiddie, sed, semaphore, separator,
serialization, server, service, setgid, setuid, shared memory, shebang,
shell, side effects, signal, signal handler, single inheritance, slice,
slurp, socket, soft reference, source filter, stack, standard, standard
error, standard I/O, standard input, standard output, stat structure,
statement, statement modifier, static, static method, static scoping,
static variable, status, STDERR, STDIN, STDIO, STDOUT, stream, string,
string context, stringification, struct, structure, subclass, subpattern,
subroutine, subscript, substitution, substring, superclass, superuser, SV,
switch, switch cluster, switch statement, symbol, symbol table, symbolic
debugger, symbolic link, symbolic reference, synchronous, syntactic sugar,
syntax, syntax tree, syscall

=item T

tainted, TCP, term, terminator, ternary, text, thread, tie, TMTOWTDI,
token, tokener, tokenizing, toolbox approach, transliterate, trigger,
trinary, troff, true, truncating, type, type casting, typed lexical,
typedef, typeglob, typemap

=item U

UDP, UID, umask, unary operator, Unicode, Unix

=item V

value, variable, variable interpolation, variadic, vector, virtual, void
context, v-string

=item W

warning, watch expression, whitespace, word, working directory, wrapper,
WYSIWYG

=item X

XS, XSUB

=item Y

yacc

=item Z

zero width, zombie

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlembed - how to embed perl in your C program

=over 4

=item DESCRIPTION

=over 4

=item PREAMBLE

B<Use C from Perl?>, B<Use a Unix program from Perl?>, B<Use Perl from
Perl?>, B<Use C from C?>, B<Use Perl from C?>

=item ROADMAP

=item Compiling your C program

=item Adding a Perl interpreter to your C program

=item Calling a Perl subroutine from your C program

=item Evaluating a Perl statement from your C program

=item Performing Perl pattern matches and substitutions from your C program

=item Fiddling with the Perl stack from your C program

=item Maintaining a persistent interpreter

=item Execution of END blocks

=item Maintaining multiple interpreter instances

=item Using Perl modules, which themselves use C libraries, from your C
program

=back

=item Embedding Perl under Win32

=item Hiding Perl_

=item MORAL

=item AUTHOR

=item COPYRIGHT

=back

=head2 perldebguts - Guts of Perl debugging 

=over 4

=item DESCRIPTION

=item Debugger Internals

=over 4

=item Writing Your Own Debugger

=back

=item Frame Listing Output Examples

=item Debugging regular expressions

=over 4

=item Compile-time output

C<anchored> I<STRING> C<at> I<POS>, C<floating> I<STRING> C<at>
I<POS1..POS2>, C<matching floating/anchored>, C<minlen>, C<stclass>
I<TYPE>, C<noscan>, C<isall>, C<GPOS>, C<plus>, C<implicit>, C<with eval>,
C<anchored(TYPE)>

=item Types of nodes

=item Run-time output

=back

=item Debugging Perl memory usage

=over 4

=item Using C<$ENV{PERL_DEBUG_MSTATS}>

C<buckets SMALLEST(APPROX)..GREATEST(APPROX)>, Free/Used, C<Total sbrk():
SBRKed/SBRKs:CONTINUOUS>, C<pad: 0>, C<heads: 2192>, C<chain: 0>, C<tail:
6144>

=back

=item SEE ALSO

=back

=head2 perlxstut, perlXStut - Tutorial for writing XSUBs

=over 4

=item DESCRIPTION

=item SPECIAL NOTES

=over 4

=item make

=item Version caveat

=item Dynamic Loading versus Static Loading

=back

=item TUTORIAL

=over 4

=item EXAMPLE 1

=item EXAMPLE 2

=item What has gone on?

=item Writing good test scripts

=item EXAMPLE 3

=item What's new here?

=item Input and Output Parameters

=item The XSUBPP Program

=item The TYPEMAP file

=item Warning about Output Arguments

=item EXAMPLE 4

=item What has happened here?

=item Anatomy of .xs file

=item Getting the fat out of XSUBs

=item More about XSUB arguments

=item The Argument Stack

=item Extending your Extension

=item Documenting your Extension

=item Installing your Extension

=item EXAMPLE 5

=item New Things in this Example

=item EXAMPLE 6

=item New Things in this Example

=item EXAMPLE 7 (Coming Soon)

=item EXAMPLE 8 (Coming Soon)

=item EXAMPLE 9 Passing open files to XSes

=item Troubleshooting these Examples

=back

=item See also

=item Author

=over 4

=item Last Changed

=back

=back

=head2 perlxs - XS language reference manual

=over 4

=item DESCRIPTION

=over 4

=item Introduction

=item On The Road

=item The Anatomy of an XSUB

=item The Argument Stack

=item The RETVAL Variable

=item Returning SVs, AVs and HVs through RETVAL

=item The MODULE Keyword

=item The PACKAGE Keyword

=item The PREFIX Keyword

=item The OUTPUT: Keyword

=item The NO_OUTPUT Keyword

=item The CODE: Keyword

=item The INIT: Keyword

=item The NO_INIT Keyword

=item Initializing Function Parameters

=item Default Parameter Values

=item The PREINIT: Keyword

=item The SCOPE: Keyword

=item The INPUT: Keyword

=item The IN/OUTLIST/IN_OUTLIST/OUT/IN_OUT Keywords

=item The C<length(NAME)> Keyword

=item Variable-length Parameter Lists

=item The C_ARGS: Keyword

=item The PPCODE: Keyword

=item Returning Undef And Empty Lists

=item The REQUIRE: Keyword

=item The CLEANUP: Keyword

=item The POSTCALL: Keyword

=item The BOOT: Keyword

=item The VERSIONCHECK: Keyword

=item The PROTOTYPES: Keyword

=item The PROTOTYPE: Keyword

=item The ALIAS: Keyword

=item The OVERLOAD: Keyword

=item The FALLBACK: Keyword

=item The INTERFACE: Keyword

=item The INTERFACE_MACRO: Keyword

=item The INCLUDE: Keyword

=item The CASE: Keyword

=item The & Unary Operator

=item Inserting POD, Comments and C Preprocessor Directives

=item Using XS With C++

=item Interface Strategy

=item Perl Objects And C Structures

=item The Typemap

=item Safely Storing Static Data in XS

MY_CXT_KEY, typedef my_cxt_t, START_MY_CXT, MY_CXT_INIT, dMY_CXT, MY_CXT

=back

=item EXAMPLES

=item XS VERSION

=item AUTHOR

=back

=head2 perlclib - Internal replacements for standard C library functions

=over 4

=item DESCRIPTION

=over 4

=item Conventions

C<t>, C<p>, C<n>, C<s>

=item File Operations

=item File Input and Output

=item File Positioning

=item Memory Management and String Handling

=item Character Class Tests

=item F<stdlib.h> functions

=item Miscellaneous functions

=back

=item SEE ALSO

=back

=head2 perlguts - Introduction to the Perl API

=over 4

=item DESCRIPTION

=item Variables

=over 4

=item Datatypes

=item What is an "IV"?

=item Working with SVs

=item Offsets

=item What's Really Stored in an SV?

=item Working with AVs

=item Working with HVs

=item Hash API Extensions

=item AVs, HVs and undefined values

=item References

=item Blessed References and Class Objects

=item Creating New Variables

GV_ADDMULTI, GV_ADDWARN

=item Reference Counts and Mortality

=item Stashes and Globs

=item Double-Typed SVs

=item Magic Variables

=item Assigning Magic

=item Magic Virtual Tables

=item Finding Magic

=item Understanding the Magic of Tied Hashes and Arrays

=item Localizing changes

C<SAVEINT(int i)>, C<SAVEIV(IV i)>, C<SAVEI32(I32 i)>, C<SAVELONG(long i)>,
C<SAVESPTR(s)>, C<SAVEPPTR(p)>, C<SAVEFREESV(SV *sv)>, C<SAVEMORTALIZESV(SV
*sv)>, C<SAVEFREEOP(OP *op)>, C<SAVEFREEPV(p)>, C<SAVECLEARSV(SV *sv)>,
C<SAVEDELETE(HV *hv, char *key, I32 length)>,
C<SAVEDESTRUCTOR(DESTRUCTORFUNC_NOCONTEXT_t f, void *p)>,
C<SAVEDESTRUCTOR_X(DESTRUCTORFUNC_t f, void *p)>, C<SAVESTACK_POS()>, C<SV*
save_scalar(GV *gv)>, C<AV* save_ary(GV *gv)>, C<HV* save_hash(GV *gv)>,
C<void save_item(SV *item)>, C<void save_list(SV **sarg, I32 maxsarg)>,
C<SV* save_svref(SV **sptr)>, C<void save_aptr(AV **aptr)>, C<void
save_hptr(HV **hptr)>

=back

=item Subroutines

=over 4

=item XSUBs and the Argument Stack

=item Calling Perl Routines from within C Programs

=item Memory Allocation

=item PerlIO

=item Putting a C value on Perl stack

=item Scratchpads

=item Scratchpads and recursion

=back

=item Compiled code

=over 4

=item Code tree

=item Examining the tree

=item Compile pass 1: check routines

=item Compile pass 1a: constant folding

=item Compile pass 2: context propagation

=item Compile pass 3: peephole optimization

=item Pluggable runops

=back

=item Examining internal data structures with the C<dump> functions

=item How multiple interpreters and concurrency are supported

=over 4

=item Background and PERL_IMPLICIT_CONTEXT

=item So what happened to dTHR?

=item How do I use all this in extensions?

=item Should I do anything special if I call perl from multiple threads?

=item Future Plans and PERL_IMPLICIT_SYS

=back

=item Internal Functions

A, p, d, s, n, r, f, M, o, x, m, X, E, b

=over 4

=item Formatted Printing of IVs, UVs, and NVs

=item Pointer-To-Integer and Integer-To-Pointer

=item Source Documentation

=item Backwards compatibility

=back

=item Unicode Support

=over 4

=item What B<is> Unicode, anyway?

=item How can I recognise a UTF-8 string?

=item How does UTF-8 represent Unicode characters?

=item How does Perl store UTF-8 strings?

=item How do I convert a string to UTF-8?

=item Is there anything else I need to know?

=back

=item Custom Operators

=item AUTHORS

=item SEE ALSO

=back

=head2 perlcall - Perl calling conventions from C

=over 4

=item DESCRIPTION

An Error Handler, An Event Driven Program

=item THE CALL_ FUNCTIONS

call_sv, call_pv, call_method, call_argv

=item FLAG VALUES

=over 4

=item  G_VOID

=item  G_SCALAR

=item G_ARRAY

=item G_DISCARD

=item G_NOARGS

=item G_EVAL

=item G_KEEPERR

=item Determining the Context

=back

=item EXAMPLES

=over 4

=item No Parameters, Nothing returned

=item Passing Parameters

=item Returning a Scalar

=item Returning a list of values

=item Returning a list in a scalar context

=item Returning Data from Perl via the parameter list

=item Using G_EVAL

=item Using G_KEEPERR

=item Using call_sv

=item Using call_argv

=item Using call_method

=item Using GIMME_V

=item Using Perl to dispose of temporaries

=item Strategies for storing Callback Context Information

1. Ignore the problem - Allow only 1 callback, 2. Create a sequence of
callbacks - hard wired limit, 3. Use a parameter to map to the Perl
callback

=item Alternate Stack Manipulation

=item Creating and calling an anonymous subroutine in C

=back

=item SEE ALSO

=item AUTHOR

=item DATE

=back

=head2 perlapi - autogenerated documentation for the perl public API

=over 4

=item DESCRIPTION
X<Perl API> X<API> X<api>

=item "Gimme" Values

GIMME X<GIMME>, GIMME_V X<GIMME_V>, G_ARRAY X<G_ARRAY>, G_DISCARD
X<G_DISCARD>, G_EVAL X<G_EVAL>, G_NOARGS X<G_NOARGS>, G_SCALAR X<G_SCALAR>,
G_VOID X<G_VOID>

=item Array Manipulation Functions

AvFILL X<AvFILL>, av_clear X<av_clear>, av_delete X<av_delete>, av_exists
X<av_exists>, av_extend X<av_extend>, av_fetch X<av_fetch>, av_fill
X<av_fill>, av_len X<av_len>, av_make X<av_make>, av_pop X<av_pop>, av_push
X<av_push>, av_shift X<av_shift>, av_store X<av_store>, av_undef
X<av_undef>, av_unshift X<av_unshift>, get_av X<get_av>, newAV X<newAV>,
sortsv X<sortsv>

=item Callback Functions

call_argv X<call_argv>, call_method X<call_method>, call_pv X<call_pv>,
call_sv X<call_sv>, ENTER X<ENTER>, eval_pv X<eval_pv>, eval_sv X<eval_sv>,
FREETMPS X<FREETMPS>, LEAVE X<LEAVE>, SAVETMPS X<SAVETMPS>

=item Character classes

isALNUM X<isALNUM>, isALPHA X<isALPHA>, isDIGIT X<isDIGIT>, isLOWER
X<isLOWER>, isSPACE X<isSPACE>, isUPPER X<isUPPER>, toLOWER X<toLOWER>,
toUPPER X<toUPPER>

=item Cloning an interpreter

perl_clone X<perl_clone>

=item CV Manipulation Functions

CvSTASH X<CvSTASH>, get_cv X<get_cv>

=item Embedding Functions

cv_undef X<cv_undef>, load_module X<load_module>, nothreadhook
X<nothreadhook>, perl_alloc X<perl_alloc>, perl_construct
X<perl_construct>, perl_destruct X<perl_destruct>, perl_free X<perl_free>,
perl_parse X<perl_parse>, perl_run X<perl_run>, require_pv X<require_pv>

=item Functions in file pp_pack.c

packlist X<packlist>, pack_cat X<pack_cat>, unpackstring X<unpackstring>,
unpack_str X<unpack_str>

=item Global Variables

PL_modglobal X<PL_modglobal>, PL_na X<PL_na>, PL_sv_no X<PL_sv_no>,
PL_sv_undef X<PL_sv_undef>, PL_sv_yes X<PL_sv_yes>

=item GV Functions

GvSV X<GvSV>, gv_fetchmeth X<gv_fetchmeth>, gv_fetchmethod
X<gv_fetchmethod>, gv_fetchmethod_autoload X<gv_fetchmethod_autoload>,
gv_fetchmeth_autoload X<gv_fetchmeth_autoload>, gv_stashpv X<gv_stashpv>,
gv_stashpvn X<gv_stashpvn>, gv_stashsv X<gv_stashsv>

=item Handy Values

Nullav X<Nullav>, Nullch X<Nullch>, Nullcv X<Nullcv>, Nullhv X<Nullhv>,
Nullsv X<Nullsv>

=item Hash Manipulation Functions

get_hv X<get_hv>, HEf_SVKEY X<HEf_SVKEY>, HeHASH X<HeHASH>, HeKEY X<HeKEY>,
HeKLEN X<HeKLEN>, HePV X<HePV>, HeSVKEY X<HeSVKEY>, HeSVKEY_force
X<HeSVKEY_force>, HeSVKEY_set X<HeSVKEY_set>, HeVAL X<HeVAL>, HvNAME
X<HvNAME>, hv_clear X<hv_clear>, hv_clear_placeholders
X<hv_clear_placeholders>, hv_delete X<hv_delete>, hv_delete_ent
X<hv_delete_ent>, hv_exists X<hv_exists>, hv_exists_ent X<hv_exists_ent>,
hv_fetch X<hv_fetch>, hv_fetch_ent X<hv_fetch_ent>, hv_iterinit
X<hv_iterinit>, hv_iterkey X<hv_iterkey>, hv_iterkeysv X<hv_iterkeysv>,
hv_iternext X<hv_iternext>, hv_iternextsv X<hv_iternextsv>,
hv_iternext_flags X<hv_iternext_flags>, hv_iterval X<hv_iterval>, hv_magic
X<hv_magic>, hv_scalar X<hv_scalar>, hv_store X<hv_store>, hv_store_ent
X<hv_store_ent>, hv_undef X<hv_undef>, newHV X<newHV>

=item Magical Functions

mg_clear X<mg_clear>, mg_copy X<mg_copy>, mg_find X<mg_find>, mg_free
X<mg_free>, mg_get X<mg_get>, mg_length X<mg_length>, mg_magical
X<mg_magical>, mg_set X<mg_set>, SvGETMAGIC X<SvGETMAGIC>, SvLOCK
X<SvLOCK>, SvSETMAGIC X<SvSETMAGIC>, SvSetMagicSV X<SvSetMagicSV>,
SvSetMagicSV_nosteal X<SvSetMagicSV_nosteal>, SvSetSV X<SvSetSV>,
SvSetSV_nosteal X<SvSetSV_nosteal>, SvSHARE X<SvSHARE>, SvUNLOCK
X<SvUNLOCK>

=item Memory Management

Copy X<Copy>, CopyD X<CopyD>, Move X<Move>, MoveD X<MoveD>, Newx X<Newx>,
Newxc X<Newxc>, Newxz X<Newxz>, Poison X<Poison>, Renew X<Renew>, Renewc
X<Renewc>, Safefree X<Safefree>, savepv X<savepv>, savepvn X<savepvn>,
savesharedpv X<savesharedpv>, savesvpv X<savesvpv>, StructCopy
X<StructCopy>, Zero X<Zero>, ZeroD X<ZeroD>

=item Miscellaneous Functions

fbm_compile X<fbm_compile>, fbm_instr X<fbm_instr>, form X<form>, getcwd_sv
X<getcwd_sv>, strEQ X<strEQ>, strGE X<strGE>, strGT X<strGT>, strLE
X<strLE>, strLT X<strLT>, strNE X<strNE>, strnEQ X<strnEQ>, strnNE
X<strnNE>, sv_nolocking X<sv_nolocking>, sv_nosharing X<sv_nosharing>,
sv_nounlocking X<sv_nounlocking>

=item Numeric functions

grok_bin X<grok_bin>, grok_hex X<grok_hex>, grok_number X<grok_number>,
grok_numeric_radix X<grok_numeric_radix>, grok_oct X<grok_oct>, scan_bin
X<scan_bin>, scan_hex X<scan_hex>, scan_oct X<scan_oct>

=item Optree Manipulation Functions

cv_const_sv X<cv_const_sv>, newCONSTSUB X<newCONSTSUB>, newXS X<newXS>

=item Pad Data Structures

pad_sv X<pad_sv>

=item Stack Manipulation Macros

dMARK X<dMARK>, dORIGMARK X<dORIGMARK>, dSP X<dSP>, EXTEND X<EXTEND>, MARK
X<MARK>, mPUSHi X<mPUSHi>, mPUSHn X<mPUSHn>, mPUSHp X<mPUSHp>, mPUSHu
X<mPUSHu>, mXPUSHi X<mXPUSHi>, mXPUSHn X<mXPUSHn>, mXPUSHp X<mXPUSHp>,
mXPUSHu X<mXPUSHu>, ORIGMARK X<ORIGMARK>, POPi X<POPi>, POPl X<POPl>, POPn
X<POPn>, POPp X<POPp>, POPpbytex X<POPpbytex>, POPpx X<POPpx>, POPs
X<POPs>, PUSHi X<PUSHi>, PUSHMARK X<PUSHMARK>, PUSHmortal X<PUSHmortal>,
PUSHn X<PUSHn>, PUSHp X<PUSHp>, PUSHs X<PUSHs>, PUSHu X<PUSHu>, PUTBACK
X<PUTBACK>, SP X<SP>, SPAGAIN X<SPAGAIN>, XPUSHi X<XPUSHi>, XPUSHmortal
X<XPUSHmortal>, XPUSHn X<XPUSHn>, XPUSHp X<XPUSHp>, XPUSHs X<XPUSHs>,
XPUSHu X<XPUSHu>, XSRETURN X<XSRETURN>, XSRETURN_EMPTY X<XSRETURN_EMPTY>,
XSRETURN_IV X<XSRETURN_IV>, XSRETURN_NO X<XSRETURN_NO>, XSRETURN_NV
X<XSRETURN_NV>, XSRETURN_PV X<XSRETURN_PV>, XSRETURN_UNDEF
X<XSRETURN_UNDEF>, XSRETURN_UV X<XSRETURN_UV>, XSRETURN_YES
X<XSRETURN_YES>, XST_mIV X<XST_mIV>, XST_mNO X<XST_mNO>, XST_mNV
X<XST_mNV>, XST_mPV X<XST_mPV>, XST_mUNDEF X<XST_mUNDEF>, XST_mYES
X<XST_mYES>

=item SV Flags

svtype X<svtype>, SVt_IV X<SVt_IV>, SVt_NV X<SVt_NV>, SVt_PV X<SVt_PV>,
SVt_PVAV X<SVt_PVAV>, SVt_PVCV X<SVt_PVCV>, SVt_PVHV X<SVt_PVHV>, SVt_PVMG
X<SVt_PVMG>

=item SV Manipulation Functions

get_sv X<get_sv>, looks_like_number X<looks_like_number>, newRV_inc
X<newRV_inc>, newRV_noinc X<newRV_noinc>, NEWSV X<NEWSV>, newSV X<newSV>,
newSVhek X<newSVhek>, newSViv X<newSViv>, newSVnv X<newSVnv>, newSVpv
X<newSVpv>, newSVpvf X<newSVpvf>, newSVpvn X<newSVpvn>, newSVpvn_share
X<newSVpvn_share>, newSVrv X<newSVrv>, newSVsv X<newSVsv>, newSVuv
X<newSVuv>, SvCUR X<SvCUR>, SvCUR_set X<SvCUR_set>, SvEND X<SvEND>, SvGROW
X<SvGROW>, SvIOK X<SvIOK>, SvIOKp X<SvIOKp>, SvIOK_notUV X<SvIOK_notUV>,
SvIOK_off X<SvIOK_off>, SvIOK_on X<SvIOK_on>, SvIOK_only X<SvIOK_only>,
SvIOK_only_UV X<SvIOK_only_UV>, SvIOK_UV X<SvIOK_UV>, SvIsCOW X<SvIsCOW>,
SvIsCOW_shared_hash X<SvIsCOW_shared_hash>, SvIV X<SvIV>, SvIVX X<SvIVX>,
SvIVx X<SvIVx>, SvIV_set X<SvIV_set>, SvLEN X<SvLEN>, SvLEN_set
X<SvLEN_set>, SvMAGIC_set X<SvMAGIC_set>, SvNIOK X<SvNIOK>, SvNIOKp
X<SvNIOKp>, SvNIOK_off X<SvNIOK_off>, SvNOK X<SvNOK>, SvNOKp X<SvNOKp>,
SvNOK_off X<SvNOK_off>, SvNOK_on X<SvNOK_on>, SvNOK_only X<SvNOK_only>,
SvNV X<SvNV>, SvNVX X<SvNVX>, SvNVx X<SvNVx>, SvNV_set X<SvNV_set>, SvOK
X<SvOK>, SvOOK X<SvOOK>, SvPOK X<SvPOK>, SvPOKp X<SvPOKp>, SvPOK_off
X<SvPOK_off>, SvPOK_on X<SvPOK_on>, SvPOK_only X<SvPOK_only>,
SvPOK_only_UTF8 X<SvPOK_only_UTF8>, SvPV X<SvPV>, SvPVbyte X<SvPVbyte>,
SvPVbytex X<SvPVbytex>, SvPVbytex_force X<SvPVbytex_force>, SvPVbyte_force
X<SvPVbyte_force>, SvPVbyte_nolen X<SvPVbyte_nolen>, SvPVutf8 X<SvPVutf8>,
SvPVutf8x X<SvPVutf8x>, SvPVutf8x_force X<SvPVutf8x_force>, SvPVutf8_force
X<SvPVutf8_force>, SvPVutf8_nolen X<SvPVutf8_nolen>, SvPVX X<SvPVX>, SvPVx
X<SvPVx>, SvPV_force X<SvPV_force>, SvPV_force_nomg X<SvPV_force_nomg>,
SvPV_nolen X<SvPV_nolen>, SvPV_set X<SvPV_set>, SvREFCNT X<SvREFCNT>,
SvREFCNT_dec X<SvREFCNT_dec>, SvREFCNT_inc X<SvREFCNT_inc>, SvROK X<SvROK>,
SvROK_off X<SvROK_off>, SvROK_on X<SvROK_on>, SvRV X<SvRV>, SvRV_set
X<SvRV_set>, SvSTASH X<SvSTASH>, SvSTASH_set X<SvSTASH_set>, SvTAINT
X<SvTAINT>, SvTAINTED X<SvTAINTED>, SvTAINTED_off X<SvTAINTED_off>,
SvTAINTED_on X<SvTAINTED_on>, SvTRUE X<SvTRUE>, SvTYPE X<SvTYPE>, SvUOK
X<SvUOK>, SvUPGRADE X<SvUPGRADE>, SvUTF8 X<SvUTF8>, SvUTF8_off
X<SvUTF8_off>, SvUTF8_on X<SvUTF8_on>, SvUV X<SvUV>, SvUVX X<SvUVX>, SvUVx
X<SvUVx>, SvUV_set X<SvUV_set>, sv_2bool X<sv_2bool>, sv_2cv X<sv_2cv>,
sv_2io X<sv_2io>, sv_2iv X<sv_2iv>, sv_2mortal X<sv_2mortal>, sv_2nv
X<sv_2nv>, sv_2pvbyte X<sv_2pvbyte>, sv_2pvbyte_nolen X<sv_2pvbyte_nolen>,
sv_2pvutf8 X<sv_2pvutf8>, sv_2pvutf8_nolen X<sv_2pvutf8_nolen>,
sv_2pv_flags X<sv_2pv_flags>, sv_2pv_nolen X<sv_2pv_nolen>, sv_2uv
X<sv_2uv>, sv_backoff X<sv_backoff>, sv_bless X<sv_bless>, sv_catpv
X<sv_catpv>, sv_catpvf X<sv_catpvf>, sv_catpvf_mg X<sv_catpvf_mg>,
sv_catpvn X<sv_catpvn>, sv_catpvn_flags X<sv_catpvn_flags>, sv_catpvn_mg
X<sv_catpvn_mg>, sv_catpvn_nomg X<sv_catpvn_nomg>, sv_catpv_mg
X<sv_catpv_mg>, sv_catsv X<sv_catsv>, sv_catsv_flags X<sv_catsv_flags>,
sv_catsv_mg X<sv_catsv_mg>, sv_catsv_nomg X<sv_catsv_nomg>, sv_chop
X<sv_chop>, sv_clear X<sv_clear>, sv_cmp X<sv_cmp>, sv_cmp_locale
X<sv_cmp_locale>, sv_collxfrm X<sv_collxfrm>, sv_copypv X<sv_copypv>,
sv_dec X<sv_dec>, sv_derived_from X<sv_derived_from>, sv_eq X<sv_eq>,
sv_force_normal X<sv_force_normal>, sv_force_normal_flags
X<sv_force_normal_flags>, sv_free X<sv_free>, sv_gets X<sv_gets>, sv_grow
X<sv_grow>, sv_inc X<sv_inc>, sv_insert X<sv_insert>, sv_isa X<sv_isa>,
sv_isobject X<sv_isobject>, sv_iv X<sv_iv>, sv_len X<sv_len>, sv_len_utf8
X<sv_len_utf8>, sv_magic X<sv_magic>, sv_magicext X<sv_magicext>,
sv_mortalcopy X<sv_mortalcopy>, sv_newmortal X<sv_newmortal>, sv_newref
X<sv_newref>, sv_nv X<sv_nv>, sv_pos_b2u X<sv_pos_b2u>, sv_pos_u2b
X<sv_pos_u2b>, sv_pv X<sv_pv>, sv_pvbyte X<sv_pvbyte>, sv_pvbyten
X<sv_pvbyten>, sv_pvbyten_force X<sv_pvbyten_force>, sv_pvn X<sv_pvn>,
sv_pvn_force X<sv_pvn_force>, sv_pvn_force_flags X<sv_pvn_force_flags>,
sv_pvutf8 X<sv_pvutf8>, sv_pvutf8n X<sv_pvutf8n>, sv_pvutf8n_force
X<sv_pvutf8n_force>, sv_reftype X<sv_reftype>, sv_replace X<sv_replace>,
sv_report_used X<sv_report_used>, sv_reset X<sv_reset>, sv_rvweaken
X<sv_rvweaken>, sv_setiv X<sv_setiv>, sv_setiv_mg X<sv_setiv_mg>, sv_setnv
X<sv_setnv>, sv_setnv_mg X<sv_setnv_mg>, sv_setpv X<sv_setpv>, sv_setpvf
X<sv_setpvf>, sv_setpvf_mg X<sv_setpvf_mg>, sv_setpviv X<sv_setpviv>,
sv_setpviv_mg X<sv_setpviv_mg>, sv_setpvn X<sv_setpvn>, sv_setpvn_mg
X<sv_setpvn_mg>, sv_setpv_mg X<sv_setpv_mg>, sv_setref_iv X<sv_setref_iv>,
sv_setref_nv X<sv_setref_nv>, sv_setref_pv X<sv_setref_pv>, sv_setref_pvn
X<sv_setref_pvn>, sv_setref_uv X<sv_setref_uv>, sv_setsv X<sv_setsv>,
sv_setsv_flags X<sv_setsv_flags>, sv_setsv_mg X<sv_setsv_mg>, sv_setsv_nomg
X<sv_setsv_nomg>, sv_setuv X<sv_setuv>, sv_setuv_mg X<sv_setuv_mg>,
sv_taint X<sv_taint>, sv_tainted X<sv_tainted>, sv_true X<sv_true>,
sv_unmagic X<sv_unmagic>, sv_unref X<sv_unref>, sv_unref_flags
X<sv_unref_flags>, sv_untaint X<sv_untaint>, sv_upgrade X<sv_upgrade>,
sv_usepvn X<sv_usepvn>, sv_usepvn_mg X<sv_usepvn_mg>, sv_utf8_decode
X<sv_utf8_decode>, sv_utf8_downgrade X<sv_utf8_downgrade>, sv_utf8_encode
X<sv_utf8_encode>, sv_utf8_upgrade X<sv_utf8_upgrade>,
sv_utf8_upgrade_flags X<sv_utf8_upgrade_flags>, sv_uv X<sv_uv>, sv_vcatpvf
X<sv_vcatpvf>, sv_vcatpvfn X<sv_vcatpvfn>, sv_vcatpvf_mg X<sv_vcatpvf_mg>,
sv_vsetpvf X<sv_vsetpvf>, sv_vsetpvfn X<sv_vsetpvfn>, sv_vsetpvf_mg
X<sv_vsetpvf_mg>

=item Unicode Support

bytes_from_utf8 X<bytes_from_utf8>, bytes_to_utf8 X<bytes_to_utf8>,
ibcmp_utf8 X<ibcmp_utf8>, is_utf8_char X<is_utf8_char>, is_utf8_string
X<is_utf8_string>, is_utf8_string_loc X<is_utf8_string_loc>,
is_utf8_string_loclen X<is_utf8_string_loclen>, pv_uni_display
X<pv_uni_display>, sv_cat_decode X<sv_cat_decode>, sv_recode_to_utf8
X<sv_recode_to_utf8>, sv_uni_display X<sv_uni_display>, to_utf8_case
X<to_utf8_case>, to_utf8_fold X<to_utf8_fold>, to_utf8_lower
X<to_utf8_lower>, to_utf8_title X<to_utf8_title>, to_utf8_upper
X<to_utf8_upper>, utf8n_to_uvchr X<utf8n_to_uvchr>, utf8n_to_uvuni
X<utf8n_to_uvuni>, utf8_distance X<utf8_distance>, utf8_hop X<utf8_hop>,
utf8_length X<utf8_length>, utf8_to_bytes X<utf8_to_bytes>, utf8_to_uvchr
X<utf8_to_uvchr>, utf8_to_uvuni X<utf8_to_uvuni>, uvchr_to_utf8
X<uvchr_to_utf8>, uvuni_to_utf8_flags X<uvuni_to_utf8_flags>

=item Variables created by C<xsubpp> and C<xsubpp> internal functions

ax X<ax>, CLASS X<CLASS>, dAX X<dAX>, dAXMARK X<dAXMARK>, dITEMS X<dITEMS>,
dXSARGS X<dXSARGS>, dXSI32 X<dXSI32>, items X<items>, ix X<ix>, newXSproto
X<newXSproto>, RETVAL X<RETVAL>, ST X<ST>, THIS X<THIS>, XS X<XS>,
XS_VERSION X<XS_VERSION>, XS_VERSION_BOOTCHECK X<XS_VERSION_BOOTCHECK>

=item Warning and Dieing

croak X<croak>, warn X<warn>

=item AUTHORS

=item SEE ALSO

=back

=head2 perlintern - autogenerated documentation of purely B<internal>
		 Perl functions

=over 4

=item DESCRIPTION
X<internal Perl functions> X<interpreter functions>

=item CV reference counts and CvOUTSIDE

CvWEAKOUTSIDE X<CvWEAKOUTSIDE>

=item Functions in file pad.h

CX_CURPAD_SAVE X<CX_CURPAD_SAVE>, CX_CURPAD_SV X<CX_CURPAD_SV>, PAD_BASE_SV
X<PAD_BASE_SV>, PAD_CLONE_VARS X<PAD_CLONE_VARS>, PAD_COMPNAME_FLAGS
X<PAD_COMPNAME_FLAGS>, PAD_COMPNAME_GEN X<PAD_COMPNAME_GEN>,
PAD_COMPNAME_GEN_set X<PAD_COMPNAME_GEN_set>, PAD_COMPNAME_OURSTASH
X<PAD_COMPNAME_OURSTASH>, PAD_COMPNAME_PV X<PAD_COMPNAME_PV>,
PAD_COMPNAME_TYPE X<PAD_COMPNAME_TYPE>, PAD_DUP X<PAD_DUP>,
PAD_RESTORE_LOCAL X<PAD_RESTORE_LOCAL>, PAD_SAVE_LOCAL X<PAD_SAVE_LOCAL>,
PAD_SAVE_SETNULLPAD X<PAD_SAVE_SETNULLPAD>, PAD_SETSV X<PAD_SETSV>,
PAD_SET_CUR X<PAD_SET_CUR>, PAD_SET_CUR_NOSAVE X<PAD_SET_CUR_NOSAVE>,
PAD_SV X<PAD_SV>, PAD_SVl X<PAD_SVl>, SAVECLEARSV X<SAVECLEARSV>,
SAVECOMPPAD X<SAVECOMPPAD>, SAVEPADSV X<SAVEPADSV>

=item Functions in file pp_ctl.c

find_runcv X<find_runcv>

=item Global Variables

PL_DBsingle X<PL_DBsingle>, PL_DBsub X<PL_DBsub>, PL_DBtrace X<PL_DBtrace>,
PL_dowarn X<PL_dowarn>, PL_last_in_gv X<PL_last_in_gv>, PL_ofs_sv
X<PL_ofs_sv>, PL_rs X<PL_rs>

=item GV Functions

is_gv_magical X<is_gv_magical>

=item IO Functions

start_glob X<start_glob>

=item Pad Data Structures

CvPADLIST X<CvPADLIST>, cv_clone X<cv_clone>, cv_dump X<cv_dump>,
do_dump_pad X<do_dump_pad>, intro_my X<intro_my>, pad_add_anon
X<pad_add_anon>, pad_add_name X<pad_add_name>, pad_alloc X<pad_alloc>,
pad_block_start X<pad_block_start>, pad_check_dup X<pad_check_dup>,
pad_findlex X<pad_findlex>, pad_findmy X<pad_findmy>, pad_fixup_inner_anons
X<pad_fixup_inner_anons>, pad_free X<pad_free>, pad_leavemy X<pad_leavemy>,
pad_new X<pad_new>, pad_push X<pad_push>, pad_reset X<pad_reset>, pad_setsv
X<pad_setsv>, pad_swipe X<pad_swipe>, pad_tidy X<pad_tidy>, pad_undef
X<pad_undef>

=item Stack Manipulation Macros

djSP X<djSP>, LVRET X<LVRET>

=item SV Manipulation Functions

report_uninit X<report_uninit>, sv_add_arena X<sv_add_arena>, sv_clean_all
X<sv_clean_all>, sv_clean_objs X<sv_clean_objs>, sv_free_arenas
X<sv_free_arenas>

=item AUTHORS

=item SEE ALSO

=back

=head2 perliol - C API for Perl's implementation of IO in Layers.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item History and Background

=item Basic Structure

=item Layers vs Disciplines

=item Data Structures

=item Functions and Attributes

=item Per-instance Data

=item Layers in action.

=item Per-instance flag bits

PERLIO_F_EOF, PERLIO_F_CANWRITE,  PERLIO_F_CANREAD, PERLIO_F_ERROR,
PERLIO_F_TRUNCATE, PERLIO_F_APPEND, PERLIO_F_CRLF, PERLIO_F_UTF8,
PERLIO_F_UNBUF, PERLIO_F_WRBUF, PERLIO_F_RDBUF, PERLIO_F_LINEBUF,
PERLIO_F_TEMP, PERLIO_F_OPEN, PERLIO_F_FASTGETS

=item Methods in Detail

fsize, name, size, kind, PERLIO_K_BUFFERED, PERLIO_K_RAW, PERLIO_K_CANCRLF,
PERLIO_K_FASTGETS, PERLIO_K_MULTIARG, Pushed, Popped, Open, Binmode,
Getarg, Fileno, Dup, Read, Write, Seek, Tell, Close, Flush, Fill, Eof,
Error,	Clearerr, Setlinebuf, Get_base, Get_bufsiz, Get_ptr, Get_cnt,
Set_ptrcnt

=item Utilities

=item Implementing PerlIO Layers

C implementations, Perl implementations

=item Core Layers

"unix", "perlio", "stdio", "crlf", "mmap", "pending", "raw", "utf8"

=item Extension Layers

":encoding", ":scalar", ":via"

=back

=item TODO

=back

=head2 perlapio - perl's IO abstraction interface.

=over 4

=item SYNOPSIS

=item DESCRIPTION

1. USE_STDIO, 2. USE_SFIO, 3. USE_PERLIO, B<PerlIO_stdin()>,
B<PerlIO_stdout()>, B<PerlIO_stderr()>, B<PerlIO_open(path, mode)>,
B<PerlIO_fdopen(fd,mode)>, B<PerlIO_reopen(path,mode,f)>,
B<PerlIO_printf(f,fmt,...)>, B<PerlIO_vprintf(f,fmt,a)>,
B<PerlIO_stdoutf(fmt,...)>, B<PerlIO_read(f,buf,count)>,
B<PerlIO_write(f,buf,count)>, B<PerlIO_close(f)>, B<PerlIO_puts(f,s)>,
B<PerlIO_putc(f,c)>, B<PerlIO_ungetc(f,c)>, B<PerlIO_getc(f)>,
B<PerlIO_eof(f)>, B<PerlIO_error(f)>, B<PerlIO_fileno(f)>,
B<PerlIO_clearerr(f)>, B<PerlIO_flush(f)>, B<PerlIO_seek(f,offset,whence)>,
B<PerlIO_tell(f)>, B<PerlIO_getpos(f,p)>, B<PerlIO_setpos(f,p)>,
B<PerlIO_rewind(f)>, B<PerlIO_tmpfile()>, B<PerlIO_setlinebuf(f)>

=over 4

=item Co-existence with stdio

B<PerlIO_importFILE(f,mode)>, B<PerlIO_exportFILE(f,mode)>,
B<PerlIO_releaseFILE(p,f)>, B<PerlIO_findFILE(f)>

=item "Fast gets" Functions

B<PerlIO_fast_gets(f)>, B<PerlIO_has_cntptr(f)>, B<PerlIO_get_cnt(f)>,
B<PerlIO_get_ptr(f)>, B<PerlIO_set_ptrcnt(f,p,c)>, B<PerlIO_canset_cnt(f)>,
B<PerlIO_set_cnt(f,c)>, B<PerlIO_has_base(f)>, B<PerlIO_get_base(f)>,
B<PerlIO_get_bufsiz(f)>

=item Other Functions

PerlIO_apply_layers(f,mode,layers), PerlIO_binmode(f,ptype,imode,layers),
'E<lt>' read, 'E<gt>' write, '+' read/write, PerlIO_debug(fmt,...)

=back

=back

=head2 perlhack - How to hack at the Perl internals

=over 4

=item DESCRIPTION

Does concept match the general goals of Perl?, Where is the
implementation?, Backwards compatibility, Could it be a module instead?, Is
the feature generic enough?, Does it potentially introduce new bugs?, Does
it preclude other desirable features?, Is the implementation robust?, Is
the implementation generic enough to be portable?, Is the implementation
tested?, Is there enough documentation?, Is there another way to do it?,
Does it create too much work?, Patches speak louder than words

=over 4

=item Keeping in sync

rsync'ing the source tree, Using rsync over the LAN, Using pushing over the
NFS, rsync'ing the patches

=item Why rsync the source tree

It's easier to rsync the source tree, It's more reliable

=item Why rsync the patches

It's easier to rsync the patches, It's a good reference, Finding a start
point, Finding how to fix a bug, Finding the source of misbehaviour

=item Working with the source

=item Perlbug administration

=item Submitting patches

L<perlguts>, L<perlxstut> and L<perlxs>, L<perlapi>,
F<Porting/pumpkin.pod>, The perl5-porters FAQ

=item Finding Your Way Around

Core modules, Tests, Documentation, Configure, Interpreter

=item Elements of the interpreter

Startup, Parsing, Optimization, Running, Exception handing

=item Internal Variable Types

=item Op Trees

=item Stacks

Argument stack, Mark stack, Save stack

=item Millions of Macros

=item The .i Targets

=item Poking at Perl

=item Using a source-level debugger

run [args], break function_name, break source.c:xxx, step, next, continue,
finish, 'enter', print

=item gdb macro support

=item Dumping Perl Data Structures

=item Patching

=item Patching a core module

=item Adding a new function to the core

=item Writing a test

F<t/base/>, F<t/cmd/>, F<t/comp/>, F<t/io/>, F<t/lib/>, F<t/op/>,
F<t/pod/>, F<t/run/>, F<t/uni/>, F<t/win32/>, F<t/x2p>, t/base t/comp,
t/cmd t/run t/io t/op, t/lib ext lib

=item Special Make Test Targets

coretest, test.deparse, test.taintwarn, minitest, test.valgrind
check.valgrind utest.valgrind ucheck.valgrind, test.third check.third
utest.third ucheck.third, test.torture torturetest, utest ucheck test.utf8
check.utf8, minitest.utf16 test.utf16, test_harness, test-notty test_notty

=item Running tests by hand

-v, -torture, -re=PATTERN, -re LIST OF PATTERNS, PERL_CORE=1,
PERL_DESTRUCT_LEVEL=2, PERL, PERL_SKIP_TTY_TEST

=back

=item EXTERNAL TOOLS FOR DEBUGGING PERL

=over 4

=item Rational Software's Purify

=item Purify on Unix

-Accflags=-DPURIFY, -Doptimize='-g', -Uusemymalloc, -Dusemultiplicity

=item Purify on NT

DEFINES, USE_MULTI = define, #PERL_MALLOC = define, CFG = Debug

=item valgrind

=item Compaq's/Digital's/HP's Third Degree

=item PERL_DESTRUCT_LEVEL

=item Profiling

=item Gprof Profiling

-a, -b, -e routine, -f routine, -s, -z

=item GCC gcov Profiling

=item Pixie Profiling

-h, -l, -p[rocedures], -h[eavy], -i[nvocations], -l[ines], -testcoverage,
-z[ero]

=item Miscellaneous tricks

=item CONCLUSION

I<The Road goes ever on and on, down from the door where it began.>

=back

=item AUTHOR

=back

=head2 perlbook - Perl book information

=over 4

=item DESCRIPTION

=back

=head2 perltodo - Perl TO-DO List

=over 4

=item DESCRIPTION

=item The roadmap to 5.10

=over 4

=item Needed for a 5.9.4 release

=item Needed for a 5.9.5 release

Implement L</_ prototype character>, Implement L</state variables>

=item Needed for a 5.9.6 release

=back

=item Tasks that only need Perl knowledge

=over 4

=item common test code for timed bail out

=item POD -> HTML conversion in the core still sucks

=item Parallel testing

=item Make Schwern poorer

=item Improve the coverage of the core tests

=item test B

=item A decent benchmark

=item fix tainting bugs

=item Dual life everything

=item Improving C<threads::shared>

=item POSIX memory footprint

=back

=item Tasks that need a little sysadmin-type knowledge

=over 4

=item Relocatable perl

=item make HTML install work

=item compressed man pages

=item Add a code coverage target to the Makefile

=item Make Config.pm cope with differences between build and installed perl

=item make parallel builds work

=item linker specification files

=back

=item Tasks that need a little C knowledge

=over 4

=item Make it clear from -v if this is the exact official release

=item Tidy up global variables

=item Ordering of "global" variables.

=item bincompat functions

=item am I hot or not?

=item emulate the per-thread memory pool on Unix

=item reduce duplication in sv_setsv_flags

=back

=item Tasks that need a knowledge of XS

=over 4

=item IPv6

=item shrink C<GV>s, C<CV>s

=item merge Perl_sv_2[inpu]v

=item UTF8 caching code

=item Implicit Latin 1 => Unicode translation

=item autovivification

=item Unicode in Filenames

=item Unicode in %ENV

=item use less 'memory'

=item Re-implement C<:unique> in a way that is actually thread-safe

=item Make tainting consistent

=item readpipe(LIST)

=back

=item Tasks that need a knowledge of the interpreter

=over 4

=item lexical pragmas

=item Attach/detach debugger from running program

=item Constant folding

=item LVALUE functions for lists

=item LVALUE functions in the debugger

=item _ prototype character

=item state variables

=item @INC source filter to Filter::Simple

=item regexp optimiser optional

=item UNITCHECK

=item optional optimizer

=item You WANT *how* many

=item lexical aliases

=item entersub XS vs Perl

=item Self ties

=item Optimize away @_

=item What hooks would assertions need?

=back

=item Big projects

=over 4

=item make ithreads more robust

=item iCOW

=item (?{...}) closures in regexps

=item A re-entrant regexp engine

=back

=back

=head2 perldoc - Look up Perl documentation in Pod format.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-h>, B<-v>, B<-t>, B<-u>, B<-m> I<module>, B<-l>, B<-F>, B<-f>
I<perlfunc>, B<-q> I<perlfaq-search-regexp>, B<-T>, B<-d>
I<destination-filename>, B<-o> I<output-formatname>, B<-M> I<module-name>,
B<-w> I<option:value> or B<-w> I<option>, B<-X>,
B<PageName|ModuleName|ProgramName>, B<-n> I<some-formatter>, B<-r>, B<-i>,
B<-V>

=item SECURITY

=item ENVIRONMENT

=item AUTHOR

=back

=head2 perlhist - the Perl history records

=over 4

=item DESCRIPTION

=item INTRODUCTION

=item THE KEEPERS OF THE PUMPKIN

=over 4

=item PUMPKIN?

=back

=item THE RECORDS

=over 4

=item SELECTED RELEASE SIZES

=item SELECTED PATCH SIZES

=back

=item THE KEEPERS OF THE RECORDS

=back

=head2 perldelta - what is new for perl v5.8.8

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

=item Utility Changes

=item New Documentation

=item Performance Enhancements

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item New Tests

=item Known Problems

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl588delta, perldelta - what is new for perl v5.8.8

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

=item Utility Changes

=item New Documentation

=item Performance Enhancements

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item New Tests

=item Known Problems

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl587delta, perldelta - what is new for perl v5.8.7

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=over 4

=item Unicode Character Database 4.1.0

=item suidperl less insecure

=item Optional site customization script

=item C<Config.pm> is now much smaller.

=back

=item Modules and Pragmata

=item Utility Changes

=over 4

=item find2perl enhancements

=back

=item Performance Enhancements

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Known Problems

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl586delta - what is new for perl v5.8.6

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

=item Utility Changes

=item Performance Enhancements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item New Tests

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl585delta - what is new for perl v5.8.5

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

=item Utility Changes

=over 4

=item Perl's debugger

=item h2ph

=back

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Known Problems

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl584delta - what is new for perl v5.8.4

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=over 4

=item Malloc wrapping

=item Unicode Character Database 4.0.1

=item suidperl less insecure

=item format

=back

=item Modules and Pragmata

=over 4

=item Updated modules

Attribute::Handlers, B, Benchmark, CGI, Carp, Cwd, Exporter, File::Find,
IO, IPC::Open3, Local::Maketext, Math::BigFloat, Math::BigInt,
Math::BigRat, MIME::Base64, ODBM_File, POSIX, Shell, Socket, Storable,
Switch, Sys::Syslog, Term::ANSIColor, Time::HiRes, Unicode::UCD, Win32,
base, open, threads, utf8

=back

=item Performance Enhancements

=item Utility Changes

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Future Directions

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl583delta - what is new for perl v5.8.3

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

CGI, Cwd, Digest, Digest::MD5, Encode, File::Spec, FindBin, List::Util,
Math::BigInt, PodParser, Pod::Perldoc, POSIX, Unicode::Collate,
Unicode::Normalize, Test::Harness, threads::shared

=item Utility Changes

=item New Documentation

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Configuration and Building

=item Platform Specific Problems

=item Known Problems

=item Future Directions

=item Obituary

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl582delta - what is new for perl v5.8.2

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=over 4

=item Hash Randomisation

=item Threading

=back

=item Modules and Pragmata

=over 4

=item Updated Modules And Pragmata

Devel::PPPort, Digest::MD5, I18N::LangTags, libnet, MIME::Base64,
Pod::Perldoc, strict, Tie::Hash, Time::HiRes, Unicode::Collate,
Unicode::Normalize, UNIVERSAL

=back

=item Selected Bug Fixes

=item Changed Internals

=item Platform Specific Problems

=item Future Directions

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl581delta - what is new for perl v5.8.1

=over 4

=item DESCRIPTION

=item Incompatible Changes

=over 4

=item Hash Randomisation

=item UTF-8 On Filehandles No Longer Activated By Locale

=item Single-number v-strings are no longer v-strings before "=>"

=item (Win32) The -C Switch Has Been Repurposed

=item (Win32) The /d Switch Of cmd.exe

=back

=item Core Enhancements

=over 4

=item UTF-8 no longer default under UTF-8 locales

=item Unsafe signals again available

=item Tied Arrays with Negative Array Indices

=item local ${$x}

=item Unicode Character Database 4.0.0

=item Deprecation Warnings

=item Miscellaneous Enhancements

=back

=item Modules and Pragmata

=over 4

=item Updated Modules And Pragmata

base, B::Bytecode, B::Concise, B::Deparse, Benchmark, ByteLoader, bytes,
CGI, charnames, CPAN, Data::Dumper, DB_File, Devel::PPPort, Digest::MD5,
Encode, fields, libnet, Math::BigInt, MIME::Base64, NEXT, Net::Ping,
PerlIO::scalar, podlators, Pod::LaTeX, PodParsers, Pod::Perldoc,
Scalar::Util, Storable, strict, Term::ANSIcolor, Test::Harness, Test::More,
Test::Simple, Text::Balanced, Time::HiRes, threads, threads::shared,
Unicode::Collate, Unicode::Normalize, Win32::GetFolderPath,
Win32::GetOSVersion

=back

=item Utility Changes

=item New Documentation

=item Installation and Configuration Improvements

=over 4

=item Platform-specific enhancements

=back

=item Selected Bug Fixes

=over 4

=item Closures, eval and lexicals

=item Generic fixes

=item Platform-specific fixes

=back

=item New or Changed Diagnostics

=over 4

=item Changed "A thread exited while %d threads were running"

=item Removed "Attempt to clear a restricted hash"

=item New "Illegal declaration of anonymous subroutine"

=item Changed "Invalid range "%s" in transliteration operator"

=item New "Missing control char name in \c"

=item New "Newline in left-justified string for %s"

=item New "Possible precedence problem on bitwise %c operator"

=item New "Pseudo-hashes are deprecated"

=item New "read() on %s filehandle %s"

=item New "5.005 threads are deprecated"

=item New "Tied variable freed while still in use"

=item New "To%s: illegal mapping '%s'"

=item New "Use of freed value in iteration"

=back

=item Changed Internals

=item New Tests

=item Known Problems

=over 4

=item Tied hashes in scalar context

=item Net::Ping 450_service and 510_ping_udp failures

=item B::C

=back

=item Platform Specific Problems

=over 4

=item EBCDIC Platforms

=item Cygwin 1.5 problems

=item HP-UX: HP cc warnings about sendfile and sendpath

=item IRIX: t/uni/tr_7jis.t falsely failing

=item Mac OS X: no usemymalloc

=item Tru64: No threaded builds with GNU cc (gcc)

=item Win32: sysopen, sysread, syswrite

=back

=item Future Directions

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl58delta - what is new for perl v5.8.0

=over 4

=item DESCRIPTION

=item Highlights In 5.8.0

=item Incompatible Changes

=over 4

=item Binary Incompatibility

=item 64-bit platforms and malloc

=item AIX Dynaloading

=item Attributes for C<my> variables now handled at run-time

=item Socket Extension Dynamic in VMS

=item IEEE-format Floating Point Default on OpenVMS Alpha

=item New Unicode Semantics (no more C<use utf8>, almost)

=item New Unicode Properties

=item REF(...) Instead Of SCALAR(...)

=item pack/unpack D/F recycled

=item glob() now returns filenames in alphabetical order

=item Deprecations

=back

=item Core Enhancements

=over 4

=item Unicode Overhaul

=item PerlIO is Now The Default

=item ithreads

=item Restricted Hashes

=item Safe Signals

=item Understanding of Numbers

=item Arrays now always interpolate into double-quoted strings [561]

=item Miscellaneous Changes

=back

=item Modules and Pragmata

=over 4

=item New Modules and Pragmata

=item Updated And Improved Modules and Pragmata

=back

=item Utility Changes

=item New Documentation

=item Performance Enhancements

=item Installation and Configuration Improvements

=over 4

=item Generic Improvements

=item New Or Improved Platforms

=back

=item Selected Bug Fixes

=over 4

=item Platform Specific Changes and Fixes

=back

=item New or Changed Diagnostics

=item Changed Internals

=item Security Vulnerability Closed [561]

=item New Tests

=item Known Problems

=over 4

=item The Compiler Suite Is Still Very Experimental

=item Localising Tied Arrays and Hashes Is Broken

=item Building Extensions Can Fail Because Of Largefiles

=item Modifying $_ Inside for(..)

=item mod_perl 1.26 Doesn't Build With Threaded Perl

=item lib/ftmp-security tests warn 'system possibly insecure'

=item libwww-perl (LWP) fails base/date #51

=item PDL failing some tests

=item Perl_get_sv

=item Self-tying Problems

=item ext/threads/t/libc

=item Failure of Thread (5.005-style) tests

=item Timing problems

=item Tied/Magical Array/Hash Elements Do Not Autovivify

=item Unicode in package/class and subroutine names does not work

=back

=item Platform Specific Problems

=over 4

=item AIX

=item Alpha systems with old gccs fail several tests

=item AmigaOS

=item BeOS

=item Cygwin "unable to remap"

=item Cygwin ndbm tests fail on FAT

=item DJGPP Failures

=item FreeBSD built with ithreads coredumps reading large directories

=item FreeBSD Failing locale Test 117 For ISO 8859-15 Locales

=item IRIX fails ext/List/Util/t/shuffle.t or Digest::MD5

=item HP-UX lib/posix Subtest 9 Fails When LP64-Configured

=item Linux with glibc 2.2.5 fails t/op/int subtest #6 with -Duse64bitint

=item Linux With Sfio Fails op/misc Test 48

=item Mac OS X

=item Mac OS X dyld undefined symbols

=item OS/2 Test Failures

=item op/sprintf tests 91, 129, and 130

=item SCO

=item Solaris 2.5

=item Solaris x86 Fails Tests With -Duse64bitint

=item SUPER-UX (NEC SX)

=item Term::ReadKey not working on Win32

=item UNICOS/mk

=item UTS

=item VOS (Stratus)

=item VMS

=item Win32

=item XML::Parser not working

=item z/OS (OS/390)

=item Unicode Support on EBCDIC Still Spotty

=item Seen In Perl 5.7 But Gone Now

=back

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl573delta - what's new for perl v5.7.3

=over 4

=item DESCRIPTION

=item Changes

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl572delta - what's new for perl v5.7.2

=over 4

=item DESCRIPTION

=item Security Vulnerability Closed

=item Incompatible Changes

=over 4

=item 64-bit platforms and malloc

=item AIX Dynaloading

=item Socket Extension Dynamic in VMS

=item Different Definition of the Unicode Character Classes \p{In...}

=item Deprecations

=back

=item Core Enhancements

=item Modules and Pragmata

=over 4

=item New Modules and Distributions

=item Updated And Improved Modules and Pragmata

=back

=item Utility Changes

=item New Documentation

=item Installation and Configuration Improvements

=over 4

=item New Or Improved Platforms

=item Generic Improvements

=back

=item Selected Bug Fixes

=over 4

=item Platform Specific Changes and Fixes

=back

=item New or Changed Diagnostics

=item Source Code Enhancements

=over 4

=item MAGIC constants

=item Better commented code

=item Regex pre-/post-compilation items matched up

=item gcc -Wall

=back

=item New Tests

=item Known Problems

=over 4

=item AIX

=item Amiga Perl Invoking Mystery

=item lib/ftmp-security tests warn 'system possibly insecure'

=item Cygwin intermittent failures of lib/Memoize/t/expire_file 11 and 12

=item HP-UX lib/io_multihomed Fails When LP64-Configured

=item  HP-UX lib/posix Subtest 9 Fails When LP64-Configured

=item Linux With Sfio Fails op/misc Test 48

=item OS/390

=item op/sprintf tests 129 and 130

=item  Failure of Thread tests

=item UNICOS

=item UTS

=item VMS

=item Win32

=item Localising a Tied Variable Leaks Memory

=item Self-tying of Arrays and Hashes Is Forbidden

=item Variable Attributes are not Currently Usable for Tieing

=item Building Extensions Can Fail Because Of Largefiles

=item The Compiler Suite Is Still Experimental

=item The Long Double Support is Still Experimental

=back

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl571delta - what's new for perl v5.7.1

=over 4

=item DESCRIPTION

=item Security Vulnerability Closed

=item Incompatible Changes

=item Core Enhancements

=over 4

=item AUTOLOAD Is Now Lvaluable

=item PerlIO is Now The Default

=item Signals Are Now Safe

=back

=item Modules and Pragmata

=over 4

=item New Modules

=item Updated And Improved Modules and Pragmata

=back

=item Performance Enhancements

=item Utility Changes

=item New Documentation

=over 4

=item perlclib

=item perliol

=item README.aix

=item README.bs2000

=item README.macos

=item README.mpeix

=item README.solaris

=item README.vos

=item Porting/repository.pod

=back

=item Installation and Configuration Improvements

=over 4

=item New Or Improved Platforms

=item Generic Improvements

d_cmsghdr, d_fcntl_can_lock, d_fsync, d_getitimer, d_getpagsz, d_msghdr_s,
need_va_copy, d_readv, d_recvmsg, d_sendmsg, sig_size, d_sockatmark,
d_strtoq, d_u32align, d_ualarm, d_usleep

=back

=item Selected Bug Fixes

=over 4

=item Platform Specific Changes and Fixes

=back

=item New or Changed Diagnostics

=item Changed Internals

=item New Tests

=item Known Problems

=over 4

=item AIX vac 5.0.0.0 May Produce Buggy Code For Perl

=item lib/ftmp-security tests warn 'system possibly insecure'

=item lib/io_multihomed Fails In LP64-Configured HP-UX

=item Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX

=item lib/b test 19

=item Linux With Sfio Fails op/misc Test 48

=item sigaction test 13 in VMS

=item sprintf tests 129 and 130

=item  Failure of Thread tests

=item Localising a Tied Variable Leaks Memory

=item Self-tying of Arrays and Hashes Is Forbidden

=item Building Extensions Can Fail Because Of Largefiles

=item The Compiler Suite Is Still Experimental

=back

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl570delta - what's new for perl v5.7.0

=over 4

=item DESCRIPTION

=item Security Vulnerability Closed

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

=over 4

=item New Modules

=item Updated And Improved Modules and Pragmata

=back

=item Utility Changes

=item New Documentation

=item Performance Enhancements

=item Installation and Configuration Improvements

=over 4

=item Generic Improvements

=back

=item Selected Bug Fixes

=over 4

=item Platform Specific Changes and Fixes

=back

=item New or Changed Diagnostics

=item Changed Internals

=item Known Problems

=over 4

=item Unicode Support Still Far From Perfect

=item EBCDIC Still A Lost Platform

=item Building Extensions Can Fail Because Of Largefiles

=item ftmp-security tests warn 'system possibly insecure'

=item Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX

=item Long Doubles Still Don't Work In Solaris

=item Linux With Sfio Fails op/misc Test 48

=item Storable tests fail in some platforms

=item Threads Are Still Experimental

=item The Compiler Suite Is Still Experimental

=back

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl561delta - what's new for perl v5.6.x

=over 4

=item DESCRIPTION

=item Summary of changes between 5.6.0 and 5.6.1

=over 4

=item Security Issues

=item Core bug fixes

C<UNIVERSAL::isa()>, Memory leaks, Numeric conversions, qw(a\\b), caller(),
Bugs in regular expressions, "slurp" mode, Autovivification of symbolic
references to special variables, Lexical warnings, Spurious warnings and
errors, glob(), Tainting, sort(), #line directives, Subroutine prototypes,
map(), Debugger, PERL5OPT, chop(), Unicode support, 64-bit support,
Compiler, Lvalue subroutines, IO::Socket, File::Find, xsubpp, C<no
Module;>, Tests

=item Core features

=item Configuration issues

=item Documentation

=item Bundled modules

B::Concise, File::Temp, Pod::LaTeX, Pod::Text::Overstrike, CGI, CPAN,
Class::Struct, DB_File, Devel::Peek, File::Find, Getopt::Long, IO::Poll,
IPC::Open3, Math::BigFloat, Math::Complex, Net::Ping, Opcode, Pod::Parser,
Pod::Text, SDBM_File, Sys::Syslog, Tie::RefHash, Tie::SubstrHash

=item Platform-specific improvements

NCR MP-RAS, NonStop-UX

=back

=item Core Enhancements

=over 4

=item Interpreter cloning, threads, and concurrency

=item Lexically scoped warning categories

=item Unicode and UTF-8 support

=item Support for interpolating named characters

=item "our" declarations

=item Support for strings represented as a vector of ordinals

=item Improved Perl version numbering system

=item New syntax for declaring subroutine attributes

=item File and directory handles can be autovivified

=item open() with more than two arguments

=item 64-bit support

=item Large file support

=item Long doubles

=item "more bits"

=item Enhanced support for sort() subroutines

=item C<sort $coderef @foo> allowed

=item File globbing implemented internally

=item Support for CHECK blocks

=item POSIX character class syntax [: :] supported

=item Better pseudo-random number generator

=item Improved C<qw//> operator

=item Better worst-case behavior of hashes

=item pack() format 'Z' supported

=item pack() format modifier '!' supported

=item pack() and unpack() support counted strings

=item Comments in pack() templates

=item Weak references

=item Binary numbers supported

=item Lvalue subroutines

=item Some arrows may be omitted in calls through references

=item Boolean assignment operators are legal lvalues

=item exists() is supported on subroutine names

=item exists() and delete() are supported on array elements

=item Pseudo-hashes work better

=item Automatic flushing of output buffers

=item Better diagnostics on meaningless filehandle operations

=item Where possible, buffered data discarded from duped input filehandle

=item eof() has the same old magic as <>

=item binmode() can be used to set :crlf and :raw modes

=item C<-T> filetest recognizes UTF-8 encoded files as "text"

=item system(), backticks and pipe open now reflect exec() failure

=item Improved diagnostics

=item Diagnostics follow STDERR

=item More consistent close-on-exec behavior

=item syswrite() ease-of-use

=item Better syntax checks on parenthesized unary operators

=item Bit operators support full native integer width

=item Improved security features

=item More functional bareword prototype (*)

=item C<require> and C<do> may be overridden

=item $^X variables may now have names longer than one character

=item New variable $^C reflects C<-c> switch

=item New variable $^V contains Perl version as a string

=item Optional Y2K warnings

=item Arrays now always interpolate into double-quoted strings

=item @- and @+ provide starting/ending offsets of regex submatches

=back

=item Modules and Pragmata

=over 4

=item Modules

attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters

=item Pragmata

=back

=item Utility Changes

=over 4

=item dprofpp

=item find2perl

=item h2xs

=item perlcc

=item perldoc

=item The Perl Debugger

=back

=item Improved Documentation

perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod

=item Performance enhancements

=over 4

=item Simple sort() using { $a <=> $b } and the like are optimized

=item Optimized assignments to lexical variables

=item Faster subroutine calls

=item delete(), each(), values() and hash iteration are faster

=back

=item Installation and Configuration Improvements

=over 4

=item -Dusethreads means something different

=item New Configure flags

=item Threadedness and 64-bitness now more daring

=item Long Doubles

=item -Dusemorebits

=item -Duselargefiles

=item installusrbinperl

=item SOCKS support

=item C<-A> flag

=item Enhanced Installation Directories

=item gcc automatically tried if 'cc' does not seem to be working

=back

=item Platform specific changes

=over 4

=item Supported platforms

=item DOS

=item OS390 (OpenEdition MVS)

=item VMS

=item Win32

=back

=item Significant bug fixes

=over 4

=item <HANDLE> on empty files

=item C<eval '...'> improvements

=item All compilation errors are true errors

=item Implicitly closed filehandles are safer

=item Behavior of list slices is more consistent

=item C<(\$)> prototype and C<$foo{a}>

=item C<goto &sub> and AUTOLOAD

=item C<-bareword> allowed under C<use integer>

=item Failures in DESTROY()

=item Locale bugs fixed

=item Memory leaks

=item Spurious subroutine stubs after failed subroutine calls

=item Taint failures under C<-U>

=item END blocks and the C<-c> switch

=item Potential to leak DATA filehandles

=back

=item New or Changed Diagnostics

"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number

=item New tests

=item Incompatible Changes

=over 4

=item Perl Source Incompatibilities

CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results

=item C Source Incompatibilities

C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>

=item Compatible C Source API Changes

C<PATCHLEVEL> is now C<PERL_VERSION>

=item Binary Incompatibilities

=back

=item Known Problems

=over 4

=item Localizing a tied hash element may leak memory

=item Known test failures

=item EBCDIC platforms not fully supported

=item UNICOS/mk CC failures during Configure run

=item Arrow operator and arrays

=item Experimental features

Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:

=back

=item Obsolete Diagnostics

Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @%s now must be written as
\@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl56delta - what's new for perl v5.6.0

=over 4

=item DESCRIPTION

=item Core Enhancements

=over 4

=item Interpreter cloning, threads, and concurrency

=item Lexically scoped warning categories

=item Unicode and UTF-8 support

=item Support for interpolating named characters

=item "our" declarations

=item Support for strings represented as a vector of ordinals

=item Improved Perl version numbering system

=item New syntax for declaring subroutine attributes

=item File and directory handles can be autovivified

=item open() with more than two arguments

=item 64-bit support

=item Large file support

=item Long doubles

=item "more bits"

=item Enhanced support for sort() subroutines

=item C<sort $coderef @foo> allowed

=item File globbing implemented internally

=item Support for CHECK blocks

=item POSIX character class syntax [: :] supported

=item Better pseudo-random number generator

=item Improved C<qw//> operator

=item Better worst-case behavior of hashes

=item pack() format 'Z' supported

=item pack() format modifier '!' supported

=item pack() and unpack() support counted strings

=item Comments in pack() templates

=item Weak references

=item Binary numbers supported

=item Lvalue subroutines

=item Some arrows may be omitted in calls through references

=item Boolean assignment operators are legal lvalues

=item exists() is supported on subroutine names

=item exists() and delete() are supported on array elements

=item Pseudo-hashes work better

=item Automatic flushing of output buffers

=item Better diagnostics on meaningless filehandle operations

=item Where possible, buffered data discarded from duped input filehandle

=item eof() has the same old magic as <>

=item binmode() can be used to set :crlf and :raw modes

=item C<-T> filetest recognizes UTF-8 encoded files as "text"

=item system(), backticks and pipe open now reflect exec() failure

=item Improved diagnostics

=item Diagnostics follow STDERR

=item More consistent close-on-exec behavior

=item syswrite() ease-of-use

=item Better syntax checks on parenthesized unary operators

=item Bit operators support full native integer width

=item Improved security features

=item More functional bareword prototype (*)

=item C<require> and C<do> may be overridden

=item $^X variables may now have names longer than one character

=item New variable $^C reflects C<-c> switch

=item New variable $^V contains Perl version as a string

=item Optional Y2K warnings

=item Arrays now always interpolate into double-quoted strings

=item @- and @+ provide starting/ending offsets of regex matches

=back

=item Modules and Pragmata

=over 4

=item Modules

attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters

=item Pragmata

=back

=item Utility Changes

=over 4

=item dprofpp

=item find2perl

=item h2xs

=item perlcc

=item perldoc

=item The Perl Debugger

=back

=item Improved Documentation

perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod

=item Performance enhancements

=over 4

=item Simple sort() using { $a <=> $b } and the like are optimized

=item Optimized assignments to lexical variables

=item Faster subroutine calls

=item delete(), each(), values() and hash iteration are faster

=back

=item Installation and Configuration Improvements

=over 4

=item -Dusethreads means something different

=item New Configure flags

=item Threadedness and 64-bitness now more daring

=item Long Doubles

=item -Dusemorebits

=item -Duselargefiles

=item installusrbinperl

=item SOCKS support

=item C<-A> flag

=item Enhanced Installation Directories

=back

=item Platform specific changes

=over 4

=item Supported platforms

=item DOS

=item OS390 (OpenEdition MVS)

=item VMS

=item Win32

=back

=item Significant bug fixes

=over 4

=item <HANDLE> on empty files

=item C<eval '...'> improvements

=item All compilation errors are true errors

=item Implicitly closed filehandles are safer

=item Behavior of list slices is more consistent

=item C<(\$)> prototype and C<$foo{a}>

=item C<goto &sub> and AUTOLOAD

=item C<-bareword> allowed under C<use integer>

=item Failures in DESTROY()

=item Locale bugs fixed

=item Memory leaks

=item Spurious subroutine stubs after failed subroutine calls

=item Taint failures under C<-U>

=item END blocks and the C<-c> switch

=item Potential to leak DATA filehandles

=back

=item New or Changed Diagnostics

"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number

=item New tests

=item Incompatible Changes

=over 4

=item Perl Source Incompatibilities

CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results

=item C Source Incompatibilities

C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>

=item Compatible C Source API Changes

C<PATCHLEVEL> is now C<PERL_VERSION>

=item Binary Incompatibilities

=back

=item Known Problems

=over 4

=item Thread test failures

=item EBCDIC platforms not supported

=item In 64-bit HP-UX the lib/io_multihomed test may hang

=item NEXTSTEP 3.3 POSIX test failure

=item Tru64 (aka Digital UNIX, aka DEC OSF/1) lib/sdbm test failure with
gcc

=item UNICOS/mk CC failures during Configure run

=item Arrow operator and arrays

=item Experimental features

Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:

=back

=item Obsolete Diagnostics

Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @%s now must be written as
\@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl5005delta - what's new for perl5.005

=over 4

=item DESCRIPTION

=item About the new versioning system

=item Incompatible Changes

=over 4

=item WARNING:	This version is not binary compatible with Perl 5.004.

=item Default installation structure has changed

=item Perl Source Compatibility

=item C Source Compatibility

=item Binary Compatibility

=item Security fixes may affect compatibility

=item Relaxed new mandatory warnings introduced in 5.004

=item Licensing

=back

=item Core Changes

=over 4

=item Threads

=item Compiler

=item Regular Expressions

Many new and improved optimizations, Many bug fixes, New regular expression
constructs, New operator for precompiled regular expressions, Other
improvements, Incompatible changes

=item	Improved malloc()

=item Quicksort is internally implemented

=item Reliable signals

=item Reliable stack pointers

=item More generous treatment of carriage returns

=item Memory leaks

=item Better support for multiple interpreters

=item Behavior of local() on array and hash elements is now well-defined

=item C<%!> is transparently tied to the L<Errno> module

=item Pseudo-hashes are supported

=item C<EXPR foreach EXPR> is supported

=item Keywords can be globally overridden

=item C<$^E> is meaningful on Win32

=item C<foreach (1..1000000)> optimized

=item C<Foo::> can be used as implicitly quoted package name

=item C<exists $Foo::{Bar::}> tests existence of a package

=item Better locale support

=item Experimental support for 64-bit platforms

=item prototype() returns useful results on builtins

=item Extended support for exception handling

=item Re-blessing in DESTROY() supported for chaining DESTROY() methods

=item All C<printf> format conversions are handled internally

=item New C<INIT> keyword

=item New C<lock> keyword

=item New C<qr//> operator

=item C<our> is now a reserved word

=item Tied arrays are now fully supported

=item Tied handles support is better

=item 4th argument to substr

=item Negative LENGTH argument to splice

=item Magic lvalues are now more magical

=item <> now reads in records

=back

=item Supported Platforms

=over 4

=item New Platforms

=item Changes in existing support

=back

=item Modules and Pragmata

=over 4

=item New Modules

B, Data::Dumper, Dumpvalue, Errno, File::Spec, ExtUtils::Installed,
ExtUtils::Packlist, Fatal, IPC::SysV, Test, Tie::Array, Tie::Handle,
Thread, attrs, fields, re

=item Changes in existing modules

Benchmark, Carp, CGI, Fcntl, Math::Complex, Math::Trig, POSIX, DB_File,
MakeMaker, CPAN, Cwd

=back

=item Utility Changes

=item Documentation Changes

=item New Diagnostics

Ambiguous call resolved as CORE::%s(), qualify as such or use &, Bad index
while coercing array into hash, Bareword "%s" refers to nonexistent
package, Can't call method "%s" on an undefined value, Can't check
filesystem of script "%s" for nosuid, Can't coerce array into hash, Can't
goto subroutine from an eval-string, Can't localize pseudo-hash element,
Can't use %%! because Errno.pm is not available, Cannot find an opnumber
for "%s", Character class syntax [. .] is reserved for future extensions,
Character class syntax [: :] is reserved for future extensions, Character
class syntax [= =] is reserved for future extensions, %s: Eval-group in
insecure regular expression, %s: Eval-group not allowed, use re 'eval', %s:
Eval-group not allowed at run time, Explicit blessing to '' (assuming
package main), Illegal hex digit ignored, No such array field, No such
field "%s" in variable %s of type %s, Out of memory during ridiculously
large request, Range iterator outside integer range, Recursive inheritance
detected while looking for method '%s' %s, Reference found where even-sized
list expected, Undefined value assigned to typeglob, Use of reserved word
"%s" is deprecated, perl: warning: Setting locale failed

=item Obsolete Diagnostics

Can't mktemp(), Can't write to temp file for B<-e>: %s, Cannot open
temporary file, regexp too big

=item Configuration Changes

=item BUGS

=item SEE ALSO

=item HISTORY

=back

=head2 perl5004delta - what's new for perl5.004

=over 4

=item DESCRIPTION

=item Supported Environments

=item Core Changes

=over 4

=item List assignment to %ENV works

=item Change to "Can't locate Foo.pm in @INC" error

=item Compilation option: Binary compatibility with 5.003

=item $PERL5OPT environment variable

=item Limitations on B<-M>, B<-m>, and B<-T> options

=item More precise warnings

=item Deprecated: Inherited C<AUTOLOAD> for non-methods

=item Previously deprecated %OVERLOAD is no longer usable

=item Subroutine arguments created only when they're modified

=item Group vector changeable with C<$)>

=item Fixed parsing of $$<digit>, &$<digit>, etc.

=item Fixed localization of $<digit>, $&, etc.

=item No resetting of $. on implicit close

=item C<wantarray> may return undef

=item C<eval EXPR> determines value of EXPR in scalar context

=item Changes to tainting checks

No glob() or <*>, No spawning if tainted $CDPATH, $ENV, $BASH_ENV, No
spawning if tainted $TERM doesn't look like a terminal name

=item New Opcode module and revised Safe module

=item Embedding improvements

=item Internal change: FileHandle class based on IO::* classes

=item Internal change: PerlIO abstraction interface

=item New and changed syntax

$coderef->(PARAMS)

=item New and changed builtin constants

__PACKAGE__

=item New and changed builtin variables

$^E, $^H, $^M

=item New and changed builtin functions

delete on slices, flock, printf and sprintf, keys as an lvalue, my() in
Control Structures, pack() and unpack(), sysseek(), use VERSION, use Module
VERSION LIST, prototype(FUNCTION), srand, $_ as Default, C<m//gc> does not
reset search position on failure, C<m//x> ignores whitespace before ?*+{},
nested C<sub{}> closures work now, formats work right on changing lexicals

=item New builtin methods

isa(CLASS), can(METHOD), VERSION( [NEED] )

=item TIEHANDLE now supported

TIEHANDLE classname, LIST, PRINT this, LIST, PRINTF this, LIST, READ this
LIST, READLINE this, GETC this, DESTROY this

=item Malloc enhancements

-DPERL_EMERGENCY_SBRK, -DPACK_MALLOC, -DTWO_POT_OPTIMIZE

=item Miscellaneous efficiency enhancements

=back

=item Support for More Operating Systems

=over 4

=item Win32

=item Plan 9

=item QNX

=item AmigaOS

=back

=item Pragmata

use autouse MODULE => qw(sub1 sub2 sub3), use blib, use blib 'dir', use
constant NAME => VALUE, use locale, use ops, use vmsish

=item Modules

=over 4

=item Required Updates

=item Installation directories

=item Module information summary

=item Fcntl

=item IO

=item Math::Complex

=item Math::Trig

=item DB_File

=item Net::Ping

=item Object-oriented overrides for builtin operators

=back

=item Utility Changes

=over 4

=item pod2html

Sends converted HTML to standard output

=item xsubpp

C<void> XSUBs now default to returning nothing

=back

=item C Language API Changes

C<gv_fetchmethod> and C<perl_call_sv>, C<perl_eval_pv>, Extended API for
manipulating hashes

=item Documentation Changes

L<perldelta>, L<perlfaq>, L<perllocale>, L<perltoot>, L<perlapio>,
L<perlmodlib>, L<perldebug>, L<perlsec>

=item New Diagnostics

"my" variable %s masks earlier declaration in same scope, %s argument is
not a HASH element or slice, Allocation too large: %lx, Allocation too
large, Applying %s to %s will act on scalar(%s), Attempt to free
nonexistent shared string, Attempt to use reference as lvalue in substr,
Bareword "%s" refers to nonexistent package, Can't redefine active sort
subroutine %s, Can't use bareword ("%s") as %s ref while "strict refs" in
use, Cannot resolve method `%s' overloading `%s' in package `%s', Constant
subroutine %s redefined, Constant subroutine %s undefined, Copy method did
not return a reference, Died, Exiting pseudo-block via %s, Identifier too
long, Illegal character %s (carriage return), Illegal switch in PERL5OPT:
%s, Integer overflow in hex number, Integer overflow in octal number,
internal error: glob failed, Invalid conversion in %s: "%s", Invalid type
in pack: '%s', Invalid type in unpack: '%s', Name "%s::%s" used only once:
possible typo, Null picture in formline, Offset outside string, Out of
memory!, Out of memory during request for %s, panic: frexp, Possible
attempt to put comments in qw() list, Possible attempt to separate words
with commas, Scalar value @%s{%s} better written as $%s{%s}, Stub found
while resolving method `%s' overloading `%s' in %s, Too late for "B<-T>"
option, untie attempted while %d inner references still exist, Unrecognized
character %s, Unsupported function fork, Use of "$$<digit>" to mean
"${$}<digit>" is deprecated, Value of %s can be "0"; test with defined(),
Variable "%s" may be unavailable, Variable "%s" will not stay shared,
Warning: something's wrong, Ill-formed logical name |%s| in prime_env_iter,
Got an error from DosAllocMem, Malformed PERLLIB_PREFIX, PERL_SH_DIR too
long, Process terminated by SIG%s

=item BUGS

=item SEE ALSO

=item HISTORY

=back

=head2 perlartistic - the Perl Artistic License

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item The "Artistic License"

=over 4

=item Preamble

=item Definitions

"Package", "Standard Version", "Copyright Holder", "You", "Reasonable
copying fee", "Freely Available"

=item Conditions

a), b), c), d), a), b), c), d)

=back

=back

=head2 perlgpl - the GNU General Public License, version 2

=over 4

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=item GNU GENERAL PUBLIC LICENSE

=back

=head2 perlaix, README.aix - Perl version 5 on IBM Unix (AIX) systems

=over 4

=item DESCRIPTION

=over 4

=item Compiling Perl 5 on AIX

=item OS level

=item Building Dynamic Extensions on AIX

=item The IBM ANSI C Compiler

=item The usenm option

=item Using GNU's gcc for building perl

=item Using Large Files with Perl

=item Threaded Perl

=item 64-bit Perl

=item AIX 4.2 and extensions using C++ with statics

=back

=item AUTHOR

=item DATE

=back

=head2 perlamiga - Perl under Amiga OS

=over 4

=item NOTE

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=over 4

=item Prerequisites for Compiling Perl on AmigaOS

B<Unix emulation for AmigaOS: ixemul.library>, B<Version of Amiga OS>

=item Starting Perl programs under AmigaOS

=item Shortcomings of Perl under AmigaOS

=back

=item INSTALLATION

=item Accessing documentation

=over 4

=item Manpages for Perl on AmigaOS

=item Perl HTML Documentation on AmigaOS

=item Perl GNU Info Files on AmigaOS

=item Perl LaTeX Documentation on AmigaOS

=back

=item BUILDING PERL ON AMIGAOS

=over 4

=item Build Prerequisites for Perl on AmigaOS

=item Getting the Perl Source for AmigaOS

=item Making Perl on AmigaOS

=item Testing Perl on AmigaOS

=item Installing the built Perl on AmigaOS

=back

=item PERL 5.8.0 BROKEN IN AMIGAOS

=item AUTHORS

=item SEE ALSO

=back

=head2 perlapollo, README.apollo - Perl version 5 on Apollo DomainOS

=over 4

=item DESCRIPTION

=item AUTHOR

=back

=head2 perlbeos, README.beos - Perl version 5.8+ on BeOS

=over 4

=item DESCRIPTION

=item BUILD AND INSTALL

=over 4

=item Requirements

=item Configure

=item Build

=item Install

=back

=item KNOWN PROBLEMS

=item CONTACT

=back

=head2 perlbs2000, README.BS2000 - building and installing Perl for BS2000.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item gzip on BS2000

=item bison on BS2000

=item Unpacking Perl Distribution on BS2000

=item Compiling Perl on BS2000

=item Testing Perl on BS2000

=item Installing Perl on BS2000

=item Using Perl in the Posix-Shell of BS2000

=item Using Perl in "native" BS2000

=item Floating point anomalies on BS2000

=item Using PerlIO and different encodings on ASCII and EBCDIC partitions

=back

=item AUTHORS

=item SEE ALSO

=over 4

=item Mailing list

=back

=item HISTORY

=back

=head2 perlce - Perl for WinCE

=over 4

=item DESCRIPTION

=item BUILD

=over 4

=item Tools & SDK

Microsoft Embedded Visual Tools, Microsoft Visual C++, Rainer Keuchel's
celib-sources, Rainer Keuchel's console-sources

=item Make

go to ./wince subdirectory, edit file compile.bat, run	  compile.bat, run 
  compile.bat dist

=back

=item ACKNOWLEDGEMENTS

=item AUTHORS

=back

=head2 perlcygwin, README.cygwin - Perl for Cygwin

=over 4

=item SYNOPSIS

=item PREREQUISITES FOR COMPILING PERL ON CYGWIN

=over 4

=item Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)

=item Cygwin Configuration

C<PATH>, I<nroff>, Permissions

=back

=item CONFIGURE PERL ON CYGWIN

=over 4

=item Stripping Perl Binaries on Cygwin

=item Optional Libraries for Perl on Cygwin

C<-lcrypt>, C<-lgdbm> (C<use GDBM_File>), C<-ldb> (C<use DB_File>),
C<-lcygipc> (C<use IPC::SysV>), C<-lutil>

=item Configure-time Options for Perl on Cygwin

C<-Uusedl>, C<-Uusemymalloc>, C<-Uuseperlio>, C<-Dusemultiplicity>,
C<-Duse64bitint>, C<-Duselongdouble>, C<-Dusethreads>, C<-Duselargefiles>,
C<-Dmksymlinks>

=item Suspicious Warnings on Cygwin

I<dlsym()>, Win9x and C<d_eofnblk>, Compiler/Preprocessor defines

=back

=item MAKE ON CYGWIN

=over 4

=item Errors on Cygwin

=item ld2 on Cygwin

=back

=item TEST ON CYGWIN

=over 4

=item File Permissions on Cygwin

=item NDBM_File and ODBM_File do not work on FAT filesystems

=item C<fork()> failures in io_* tests

=back

=item Specific features of the Cygwin port

=over 4

=item Script Portability on Cygwin

Pathnames, Text/Binary, PerlIO, F<.exe>, cygwin vs. windows process ids,
C<chown()>, Miscellaneous

=item Prebuilt methods:

C<Cwd::cwd>, C<Cygwin::pid_to_winpid>, C<Cygwin::winpid_to_pid>

=back

=item INSTALL PERL ON CYGWIN

=item MANIFEST ON CYGWIN

Documentation, Build, Configure, Make, Install, Tests, Compiled Perl
Source, Compiled Module Source, Perl Modules/Scripts

=item BUGS ON CYGWIN

=item AUTHORS

=item HISTORY

=back

=head2 perldgux - Perl under DG/UX.

=over 4

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=item BUILDING PERL ON DG/UX

=over 4

=item Non-threaded Perl on DG/UX

=item Threaded Perl on DG/UX

=item Testing Perl on DG/UX

=item Installing the built perl on DG/UX

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perldos - Perl under DOS, W31, W95.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Prerequisites for Compiling Perl on DOS

DJGPP, Pthreads

=item Shortcomings of Perl under DOS

=item Building Perl on DOS

=item Testing Perl on DOS

=item Installation of Perl on DOS

=back

=item BUILDING AND INSTALLING MODULES ON DOS

=over 4

=item Building Prerequisites for Perl on DOS

=item Unpacking CPAN Modules on DOS

=item Building Non-XS Modules on DOS

=item Building XS Modules on DOS

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perlepoc, README.epoc - Perl for EPOC

=over 4

=item SYNOPSIS

=item INTRODUCTION

=item INSTALLING PERL ON EPOC

=item STARTING PERL ON EPOC

=over 4

=item Editors on Epoc

=item Features of Perl on Epoc

=item Restrictions of Perl on Epoc

=item Compiling Perl 5 on the EPOC cross compiling environment

=back

=item SUPPORT STATUS OF PERL ON EPOC

=item AUTHOR

=item LAST UPDATE

=back

=head2 perlfreebsd, README.freebsd - Perl version 5 on FreeBSD systems

=over 4

=item DESCRIPTION

=over 4

=item FreeBSD core dumps from readdir_r with ithreads

=item $^X doesn't always contain a full path in FreeBSD

=item Perl will no longer be part of "base FreeBSD"

=back

=item AUTHOR

=back

=head2 perlhpux, README.hpux - Perl version 5 on Hewlett-Packard Unix
(HP-UX) systems

=over 4

=item DESCRIPTION

=over 4

=item Using perl as shipped with HP-UX

=item Using perl from HP's porting centre

=item Compiling Perl 5 on HP-UX

=item PA-RISC

=item Portability Between PA-RISC Versions

=item PA-RISC 1.0

=item PA-RISC 1.1

=item PA-RISC 2.0

=item Itanium Processor Family and HP-UX

=item Itanium & Itanium 2

=item Building Dynamic Extensions on HP-UX

=item The HP ANSI C Compiler

=item The GNU C Compiler

=item Using Large Files with Perl on HP-UX

=item Threaded Perl on HP-UX

=item 64-bit Perl on HP-UX

=item Oracle on HP-UX

=item GDBM and Threads on HP-UX

=item NFS filesystems and utime(2) on HP-UX

=item perl -P and // and HP-UX

=item HP-UX Kernel Parameters (maxdsiz) for Compiling Perl

=back

=item nss_delete core dump from op/pwent or op/grent

=item AUTHOR

=item DATE

=back

=head2 perlhurd, README.hurd - Perl version 5 on Hurd

=over 4

=item DESCRIPTION

=over 4

=item Known Problems with Perl on Hurd 

=back

=item AUTHOR

=back

=head2 perlirix, README.irix - Perl version 5 on Irix systems

=over 4

=item DESCRIPTION

=over 4

=item Building 32-bit Perl in Irix

=item Building 64-bit Perl in Irix

=item About Compiler Versions of Irix

=item Linker Problems in Irix

=item Malloc in Irix

=item Building with threads in Irix

=item Irix 5.3

=back

=item AUTHOR

=back

=head2 perllinux, README.linux - Perl version 5 on Linux systems

=over 4

=item DESCRIPTION

=over 4

=item Experimental Support for Sun Studio Compilers for Linux OS

=back

=item AUTHOR

=back

=head2 perlmachten, README.machten - Perl version 5 on Power MachTen
systems

=over 4

=item DESCRIPTION

=over 4

=item Perl version 5.8.x and greater not supported

=item Compiling Perl 5.6.x on MachTen

=item Failures during C<make test> on MachTen

op/lexassign.t, pragma/warnings.t

=item Building external modules on MachTen

=back

=item AUTHOR

=item DATE

=back

=head2 perlmacos, README.macos - Perl under Mac OS (Classic)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item DATE

=back

=head2 perlmacosx, README.macosx - Perl under Mac OS X

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Installation Prefix

=item libperl and Prebinding

=item Updating Apple-supplied Perl

=item 64-bit Perl

=item Intel processor support

=item  Universal binaries

=item Known problems

=item MacPerl

=item Carbon

=item Cocoa

=back

=item Starting From Scratch

=item AUTHOR

=item DATE

=back

=head2 perlmint, README.mint - Perl version 5 on Atari MiNT

=over 4

=item DESCRIPTION

=item Known problems with Perl on MiNT

=item AUTHOR

=back

=head2 perlmpeix, README.mpeix - Perl/iX for HP e3000 MPE

=over 4

=item SYNOPSIS

=item NOTE

=item Binary distribution from HP

=item What's New in Perl for MPE/iX

=item Welcome to Perl/iX

=item System Requirements for Perl/iX

=item How to Obtain Perl/iX

=item Perl/iX Distribution Contents Highlights

README, INSTALL, LIBSHP3K, PERL, .cpan/, lib/, man/,
public_html/feedback.cgi, src/perl-5.6.0-mpe

=item How to Compile Perl/iX

 4,  6

=item Getting Started with Perl/iX

=item MPE/iX Implementation Considerations

=item Known Perl/iX Bugs Under Investigation

=item Perl/iX To-Do List

=item Perl/iX Change History

=item AUTHOR

=back

=head2 perlnetware - Perl for NetWare

=over 4

=item DESCRIPTION

=item BUILD

=over 4

=item Tools & SDK

=item Setup

SetNWBld.bat, Buildtype.bat

=item Make

=item Interpreter

=item Extensions

=back

=item INSTALL

=item BUILD NEW EXTENSIONS

=item ACKNOWLEDGEMENTS

=item AUTHORS

=item DATE

=back

=head2 perlopenbsd, README.openbsd - Perl version 5 on OpenBSD systems

=over 4

=item DESCRIPTION

=over 4

=item OpenBSD core dumps from getprotobyname_r and getservbyname_r with
ithreads

=back

=item AUTHOR

=back

=head2 perlos2 - Perl under OS/2, DOS, Win0.3*, Win0.95 and WinNT.

=over 4

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=over 4

=item Target

=item Other OSes

=item Prerequisites

EMX, RSX, HPFS, pdksh

=item Starting Perl programs under OS/2 (and DOS and...)

=item Starting OS/2 (and DOS) programs under Perl

=back

=item Frequently asked questions

=over 4

=item "It does not work"

=item I cannot run external programs

=item I cannot embed perl into my program, or use F<perl.dll> from my
program. 

Is your program EMX-compiled with C<-Zmt -Zcrtdll>?, Did you use
L<ExtUtils::Embed>?

=item C<``> and pipe-C<open> do not work under DOS.

=item Cannot start C<find.exe "pattern" file>

=back

=item INSTALLATION

=over 4

=item Automatic binary installation

C<PERL_BADLANG>, C<PERL_BADFREE>, F<Config.pm>

=item Manual binary installation

Perl VIO and PM executables (dynamically linked), Perl_ VIO executable
(statically linked), Executables for Perl utilities, Main Perl library,
Additional Perl modules, Tools to compile Perl modules, Manpages for Perl
and utilities, Manpages for Perl modules, Source for Perl documentation,
Perl manual in F<.INF> format, Pdksh

=item B<Warning>

=back

=item Accessing documentation

=over 4

=item OS/2 F<.INF> file

=item Plain text

=item Manpages

=item HTML

=item GNU C<info> files

=item F<PDF> files

=item C<LaTeX> docs

=back

=item BUILD

=over 4

=item The short story

=item Prerequisites

=item Getting perl source

=item Application of the patches

=item Hand-editing

=item Making

=item Testing

A lot of C<bad free>, Process terminated by SIGTERM/SIGINT, F<op/fs.t>,
F<op/stat.t>

=item Installing the built perl

=item C<a.out>-style build

=back

=item Building a binary distribution

=item Building custom F<.EXE> files

=over 4

=item Making executables with a custom collection of statically loaded
extensions

=item Making executables with a custom search-paths

=back

=item Build FAQ

=over 4

=item Some C</> became C<\> in pdksh.

=item C<'errno'> - unresolved external

=item Problems with tr or sed

=item Some problem (forget which ;-)

=item Library ... not found

=item Segfault in make

=item op/sprintf test failure

=back

=item Specific (mis)features of OS/2 port

=over 4

=item C<setpriority>, C<getpriority>

=item C<system()>

=item C<extproc> on the first line

=item Additional modules:

=item Prebuilt methods:

C<File::Copy::syscopy>, C<DynaLoader::mod2fname>,  C<Cwd::current_drive()>,
 C<Cwd::sys_chdir(name)>,  C<Cwd::change_drive(name)>, 
C<Cwd::sys_is_absolute(name)>,	C<Cwd::sys_is_rooted(name)>, 
C<Cwd::sys_is_relative(name)>,	C<Cwd::sys_cwd(name)>, 
C<Cwd::sys_abspath(name, dir)>,  C<Cwd::extLibpath([type])>, 
C<Cwd::extLibpath_set( path [, type ] )>,
C<OS2::Error(do_harderror,do_exception)>, C<OS2::Errors2Drive(drive)>,
OS2::SysInfo(), OS2::BootDrive(), C<OS2::MorphPM(serve)>,
C<OS2::UnMorphPM(serve)>, C<OS2::Serve_Messages(force)>,
C<OS2::Process_Messages(force [, cnt])>, C<OS2::_control87(new,mask)>,
OS2::get_control87(), C<OS2::set_control87_em(new=MCW_EM,mask=MCW_EM)>,
C<OS2::DLLname([how [, \&xsub]])>

=item Prebuilt variables:

$OS2::emx_rev, $OS2::emx_env, $OS2::os_ver, $OS2::is_aout, $OS2::can_fork,
$OS2::nsyserror

=item Misfeatures

=item Modifications

C<popen>, C<tmpnam>, C<tmpfile>, C<ctermid>, C<stat>, C<mkdir>, C<rmdir>,
C<flock>

=item Identifying DLLs

=item Centralized management of resources

C<HAB>, C<HMQ>, Treating errors reported by OS/2 API,
C<CheckOSError(expr)>, C<CheckWinError(expr)>, C<SaveWinError(expr)>,
C<SaveCroakWinError(expr,die,name1,name2)>, C<WinError_2_Perl_rc>,
C<FillWinError>, C<FillOSError(rc)>, Loading DLLs and ordinals in DLLs

=back

=item Perl flavors

=over 4

=item F<perl.exe>

=item F<perl_.exe>

=item F<perl__.exe>

=item F<perl___.exe>

=item Why strange names?

=item Why dynamic linking?

=item Why chimera build?

=back

=item ENVIRONMENT

=over 4

=item C<PERLLIB_PREFIX>

=item C<PERL_BADLANG>

=item C<PERL_BADFREE>

=item C<PERL_SH_DIR>

=item C<USE_PERL_FLOCK>

=item C<TMP> or C<TEMP>

=back

=item Evolution

=over 4

=item Text-mode filehandles

=item Priorities

=item DLL name mangling: pre 5.6.2

=item DLL name mangling: 5.6.2 and beyond

Global DLLs, specific DLLs, C<BEGINLIBPATH> and C<ENDLIBPATH>, F<.> from
C<LIBPATH>

=item DLL forwarder generation

=item Threading

=item Calls to external programs

=item Memory allocation

=item Threads

C<COND_WAIT>, F<os2.c>

=back

=item BUGS

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 perlos390, README.os390 - building and installing Perl for OS/390
and z/OS

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tools

=item Unpacking Perl distribution on OS/390

=item Setup and utilities for Perl on OS/390

=item Configure Perl on OS/390

=item Build, Test, Install Perl on OS/390

=item Build Anomalies with Perl on OS/390

=item Testing Anomalies with Perl on OS/390

=item Installation Anomalies with Perl on OS/390

=item Usage Hints for Perl on OS/390

=item Floating Point Anomalies with Perl on OS/390

=item Modules and Extensions for Perl on OS/390

=back

=item AUTHORS

=item SEE ALSO

=over 4

=item Mailing list for Perl on OS/390

=back

=item HISTORY

=back

=head2 perlos400, README.os400 - Perl version 5 on OS/400

=over 4

=item DESCRIPTION

=over 4

=item Compiling Perl for OS/400 PASE

=item Installing Perl in OS/400 PASE

=item Using Perl in OS/400 PASE

=item Known Problems

=item Perl on ILE

=back

=item AUTHORS

=back

=head2 perlplan9 - Plan 9-specific documentation for Perl

=over 4

=item DESCRIPTION

=over 4

=item Invoking Perl

=item What's in Plan 9 Perl

=item What's not in Plan 9 Perl

=item Perl5 Functions not currently supported in Plan 9 Perl

=item Signals in Plan 9 Perl

=back

=item COMPILING AND INSTALLING PERL ON PLAN 9

=over 4

=item Installing Perl Documentation on Plan 9

=back

=item BUGS

=item Revision date

=item AUTHOR

=back

=head2 perlqnx, README.qnx - Perl version 5 on QNX

=over 4

=item DESCRIPTION

=over 4

=item Required Software for Compiling Perl on QNX4

/bin/sh, ar, nm, cpp, make

=item Outstanding Issues with Perl on QNX4

=item QNX auxiliary files

qnx/ar, qnx/cpp

=item Outstanding issues with perl under QNX6

=back

=item AUTHOR

=back

=head2 perlsolaris, README.solaris - Perl version 5 on Solaris systems

=over 4

=item DESCRIPTION

=over 4

=item Solaris Version Numbers.

=back

=item RESOURCES

Solaris FAQ, Precompiled Binaries, Solaris Documentation

=item SETTING UP

=over 4

=item File Extraction Problems on Solaris.

=item Compiler and Related Tools on Solaris.

=item Environment for Compiling perl on Solaris

=back

=item RUN CONFIGURE.

=over 4

=item 64-bit perl on Solaris.

=item Threads in perl on Solaris.

=item Malloc Issues with perl on Solaris.

=back

=item MAKE PROBLEMS.

Dynamic Loading Problems With GNU as and GNU ld, ld.so.1: ./perl: fatal:
relocation error:, dlopen: stub interception failed, #error "No
DATAMODEL_NATIVE specified", sh: ar: not found, warning: dead part of
constant expression is nonconstant

=item MAKE TEST

=over 4

=item op/stat.t test 4 in Solaris

=item nss_delete core dump from op/pwent or op/grent

=back

=item PREBUILT BINARIES OF PERL FOR SOLARIS.

=item RUNTIME ISSUES FOR PERL ON SOLARIS.

=over 4

=item Limits on Numbers of Open Files on Solaris.

=back

=item SOLARIS-SPECIFIC MODULES.

=item SOLARIS-SPECIFIC PROBLEMS WITH MODULES.

=over 4

=item Proc::ProcessTable on Solaris

=item BSD::Resource on Solaris

=item Net::SSLeay on Solaris

=back

=item SunOS 4.x

=item AUTHOR

=back

=head2 perltru64, README.tru64 - Perl version 5 on Tru64 (formerly known as
Digital UNIX formerly known as DEC OSF/1) systems

=over 4

=item DESCRIPTION

=over 4

=item Compiling Perl 5 on Tru64

=item Using Large Files with Perl on Tru64

=item Threaded Perl on Tru64

=item Long Doubles on Tru64

=item DB_File tests failing on Tru64

=item 64-bit Perl on Tru64

=item Warnings about floating-point overflow when compiling Perl on Tru64

=back

=item Testing Perl on Tru64

=item ext/ODBM_File/odbm Test Failing With Static Builds

=item Perl Fails Because Of Unresolved Symbol sockatmark

=item AUTHOR

=back

=head2 perluts - Perl under UTS

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUILDING PERL ON UTS

=item Installing the built perl on UTS

=item AUTHOR

=back

=head2 perlvmesa, README.vmesa - building and installing Perl for VM/ESA.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Unpacking Perl Distribution on VM/ESA

=item Setup Perl and utilities on VM/ESA

=item Configure Perl on VM/ESA

=item Testing Anomalies of Perl on VM/ESA

=item Usage Hints for Perl on VM/ESA

=back

=item AUTHORS

=item SEE ALSO

=over 4

=item Mailing list for Perl on VM/ESA

=back

=back

=head2 perlvms - VMS-specific documentation for Perl

=over 4

=item DESCRIPTION

=item Installation

=item Organization of Perl Images

=over 4

=item Core Images

=item Perl Extensions

=item Installing static extensions

=item Installing dynamic extensions

=back

=item File specifications

=over 4

=item Syntax

=item Wildcard expansion

=item Pipes

=back

=item PERL5LIB and PERLLIB

=item Command line

=over 4

=item I/O redirection and backgrounding

=item Command line switches

-i, -S, -u

=back

=item Perl functions

File tests, backticks, binmode FILEHANDLE, crypt PLAINTEXT, USER, dump,
exec LIST, fork, getpwent, getpwnam, getpwuid, gmtime, kill, qx//, select
(system call), stat EXPR, system LIST, time, times, unlink LIST, utime
LIST, waitpid PID,FLAGS

=item Perl variables

%ENV, CRTL_ENV, CLISYM_[LOCAL], Any other string, $!, $^E, $?, $|

=item Standard modules with VMS-specific differences

=over 4

=item SDBM_File

=back

=item Revision date

=item AUTHOR

=back

=head2 perlvos, README.vos - Perl for Stratus VOS

=over 4

=item SYNOPSIS

=over 4

=item Multiple methods to build perl for VOS

=item Stratus POSIX Support

=back

=item INSTALLING PERL IN VOS

=over 4

=item Compiling Perl 5 on VOS

=item Installing Perl 5 on VOS

=back

=item USING PERL IN VOS

=over 4

=item Unimplemented Features of Perl on VOS

=item Restrictions of Perl on VOS

=item Handling of underflow and overflow

=back

=item TEST STATUS

=item SUPPORT STATUS

=item AUTHOR

=item LAST UPDATE

=back

=head2 perlwin32 - Perl under Windows

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Setting Up Perl on Win32

Make, Command Shell, Borland C++, Microsoft Visual C++, Microsoft Visual
C++ Toolkit 2003, Microsoft Platform SDK 64-bit Compiler, MinGW release 3
with gcc, MinGW release 1 with gcc

=item Building

=item Testing Perl on Win32

=item Installation of Perl on Win32

=item Usage Hints for Perl on Win32

Environment Variables, File Globbing, Using perl from the command line,
Building Extensions, Command-line Wildcard Expansion, Win32 Specific
Extensions, Notes on 64-bit Windows

=item Running Perl Scripts

=item Miscellaneous Things

=back

=item BUGS AND CAVEATS

=item ACKNOWLEDGEMENTS

=item AUTHORS

Gary Ng E<lt>71564.1743@CompuServe.COME<gt>, Gurusamy Sarathy
E<lt>gsar@activestate.comE<gt>, Nick Ing-Simmons
E<lt>nick@ing-simmons.netE<gt>, Jan Dubois E<lt>jand@activestate.comE<gt>,
Steve Hay E<lt>steve.hay@uk.radan.comE<gt>

=item SEE ALSO

=item HISTORY

=back

=head1 PRAGMA DOCUMENTATION

=head2 attrs - set/get attributes of a subroutine (deprecated)

=over 4

=item SYNOPSIS

=item DESCRIPTION

method, locked

=back

=head2 re - Perl pragma to alter regular expression behaviour

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 threadshared::shared, threads::shared - Perl extension for sharing
data structures between threads

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXPORT

=item FUNCTIONS

share VARIABLE, lock VARIABLE, cond_wait VARIABLE, cond_wait CONDVAR,
LOCKVAR, cond_timedwait VARIABLE, ABS_TIMEOUT, cond_timedwait CONDVAR,
ABS_TIMEOUT, LOCKVAR, cond_signal VARIABLE, cond_broadcast VARIABLE

=item NOTES

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 threads - Perl extension allowing use of interpreter based threads
from perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

$thread = threads->create(function, LIST), $thread->join, $thread->detach,
threads->self, $thread->tid, threads->object( tid ), threads->yield();,
threads->list();, async BLOCK;

=item WARNINGS

A thread exited while %d other threads were still running

=item TODO

=item BUGS

Parent-Child threads, tid is I32, Returning objects, Creating threads
inside BEGIN blocks, PERL_OLD_SIGNALS are not threadsafe, will not be

=item AUTHOR and COPYRIGHT

=item SEE ALSO

=back

=head2 attributes - get/set subroutine or variable attributes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Built-in Attributes

locked, method, lvalue

=item Available Subroutines

get, reftype

=item Package-specific Attribute Handling

FETCH_I<type>_ATTRIBUTES, MODIFY_I<type>_ATTRIBUTES

=item Syntax of Attribute Lists

=back

=item EXPORTS

=over 4

=item Default exports

=item Available exports

=item Export tags defined

=back

=item EXAMPLES

=item SEE ALSO

=back

=head2 autouse - postpone load of modules until a function is used

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item WARNING

=item AUTHOR

=item SEE ALSO

=back

=head2 base - Establish IS-A relationship with base classes at compile time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item DIAGNOSTICS

Base class package "%s" is empty

=item HISTORY

=item CAVEATS

=item SEE ALSO

=back

=head2 bigint - Transparent BigInteger support for Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Options

a or accuracy, p or precision, t or trace, l or lib, v or version

=item Math Library

=item Internal Format

=item Sign

=item Methods

=item Caveat

=back

=item MODULES USED

=item EXAMPLES

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 bignum - Transparent BigNumber support for Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Options

a or accuracy, p or precision, t or trace, l or lib, v or version

=item Methods

=item Caveat

inf(), NaN(), upgrade()

=item MATH LIBRARY

=item INTERNAL FORMAT

=item SIGN

=back

=item MODULES USED

=item EXAMPLES

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 bigrat - Transparent BigNumber/BigRational support for Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Modules Used

=item Math Library

=item Sign

=item Methods

=item Cavaet

=item Options

a or accuracy, p or precision, t or trace, l or lib, v or version

=back

=item EXAMPLES

	perl -Mbigrat -le 'print sqrt(33)'
	perl -Mbigrat -le 'print 2*255'
	perl -Mbigrat -le 'print 4.5+2*255'
	perl -Mbigrat -le 'print 3/7 + 5/7 + 8/3'	
	perl -Mbigrat -le 'print 12->is_odd()';

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 blib - Use MakeMaker's uninstalled version of a package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 bytes - Perl pragma to force byte semantics rather than character
semantics

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item LIMITATIONS

=item SEE ALSO

=back

=head2 charnames - define character names for C<\N{named}> string literal
escapes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CUSTOM TRANSLATORS

=item CUSTOM ALIASES

=over 4

=item Anonymous hashes

=item Alias file

=item Alias shortcut

=back

=item charnames::viacode(code)

=item charnames::vianame(name)

=item ALIASES

=item ILLEGAL CHARACTERS

=item BUGS

=back

=head2 constant - Perl pragma to declare constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=over 4

=item List constants

=item Defining multiple constants at once

=item Magic constants

=back

=item TECHNICAL NOTES

=item BUGS

=item AUTHOR

=item COPYRIGHT

=back

=head2 diagnostics, splain - produce verbose warning diagnostics

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The C<diagnostics> Pragma

=item The I<splain> Program

=back

=item EXAMPLES

=item INTERNALS

=item BUGS

=item AUTHOR

=back

=head2 encoding - allows you to write your script in non-ascii or non-utf8

=over 4

=item SYNOPSIS

=item ABSTRACT

=over 4

=item Literal Conversions

=item PerlIO layers for C<STD(IN|OUT)>

=item Implicit upgrading for byte strings

=back

=item FEATURES THAT REQUIRE 5.8.1

"NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle

=item USAGE

use encoding [I<ENCNAME>] ;, use encoding I<ENCNAME> [ STDIN =E<gt>
I<ENCNAME_IN> ...] ;, use encoding I<ENCNAME> Filter=E<gt>1;, no encoding;

=item The Filter Option

=over 4

=item Filter-related changes at Encode version 1.87

=back

=item CAVEATS

=over 4

=item NOT SCOPED

=item DO NOT MIX MULTIPLE ENCODINGS

=item tr/// with ranges

Legend of characters above

=back

=item EXAMPLE - Greekperl

=item KNOWN PROBLEMS

literals in regex that are longer than 127 bytes, EBCDIC, format

=over 4

=item The Logic of :locale

=back

=item HISTORY

=item SEE ALSO

=back

=head2 fields - compile-time class fields

=over 4

=item SYNOPSIS

=item DESCRIPTION

new, phash

=item SEE ALSO

=back

=head2 filetest - Perl pragma to control the filetest permission operators

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item subpragma access

=back

=back

=head2 if - C<use> a Perl module if a condition holds

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 integer - Perl pragma to use integer arithmetic instead of floating
point

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 less - perl pragma to request less of something from the compiler

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 lib - manipulate @INC at compile time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Adding directories to @INC

=item Deleting directories from @INC

=item Restoring original @INC

=back

=item CAVEATS

=item NOTES

=item SEE ALSO

=item AUTHOR

=back

=head2 locale - Perl pragma to use and avoid POSIX locales for built-in
operations

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 open - perl pragma to set default PerlIO layers for input and output

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NONPERLIO FUNCTIONALITY

=item IMPLEMENTATION DETAILS

=item SEE ALSO

=back

=head2 ops - Perl pragma to restrict unsafe operations when compiling

=over 4

=item SYNOPSIS	

=item DESCRIPTION

=item SEE ALSO

=back

=head2 overload - Package for overloading Perl operations

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Declaration of overloaded functions

=item Calling Conventions for Binary Operations

FALSE, TRUE, C<undef>

=item Calling Conventions for Unary Operations

=item Calling Conventions for Mutators

C<++> and C<-->, C<x=> and other assignment versions

=item Overloadable Operations

I<Arithmetic operations>, I<Comparison operations>, I<Bit operations>,
I<Increment and decrement>, I<Transcendental functions>, I<Boolean, string
and numeric conversion>, I<Iteration>, I<Dereferencing>, I<Special>

=item Inheritance and overloading

Strings as values of C<use overload> directive, Overloading of an operation
is inherited by derived classes

=back

=item SPECIAL SYMBOLS FOR C<use overload>

=over 4

=item Last Resort

=item Fallback

C<undef>, TRUE, defined, but FALSE

=item Copy Constructor

B<Example>

=back

=item MAGIC AUTOGENERATION

I<Assignment forms of arithmetic operations>, I<Conversion operations>,
I<Increment and decrement>, C<abs($a)>, I<Unary minus>, I<Negation>,
I<Concatenation>, I<Comparison operations>, I<Iterator>, I<Dereferencing>,
I<Copy operator>

=item Losing overloading

=item Run-time Overloading

=item Public functions

overload::StrVal(arg), overload::Overloaded(arg), overload::Method(obj,op)

=item Overloading constants

integer, float, binary, q, qr

=item IMPLEMENTATION

=item Metaphor clash

=item Cookbook

=over 4

=item Two-face scalars

=item Two-face references

=item Symbolic calculator

=item I<Really> symbolic calculator

=back

=item AUTHOR

=item DIAGNOSTICS

Odd number of arguments for overload::constant, `%s' is not an overloadable
type, `%s' is not a code reference

=item BUGS

=back

=head2 sigtrap - Perl pragma to enable simple signal handling

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

=over 4

=item SIGNAL HANDLERS

B<stack-trace>, B<die>, B<handler> I<your-handler>

=item SIGNAL LISTS

B<normal-signals>, B<error-signals>, B<old-interface-signals>

=item OTHER

B<untrapped>, B<any>, I<signal>, I<number>

=back

=item EXAMPLES

=back

=head2 sort - perl pragma to control sort() behaviour

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=back

=head2 strict - Perl pragma to restrict unsafe constructs

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<strict refs>, C<strict vars>, C<strict subs>

=item HISTORY

=back

=head2 subs - Perl pragma to predeclare sub names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 threadshared, threads::shared - Perl extension for sharing data
structures between threads

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXPORT

=item FUNCTIONS

share VARIABLE, lock VARIABLE, cond_wait VARIABLE, cond_wait CONDVAR,
LOCKVAR, cond_timedwait VARIABLE, ABS_TIMEOUT, cond_timedwait CONDVAR,
ABS_TIMEOUT, LOCKVAR, cond_signal VARIABLE, cond_broadcast VARIABLE

=item NOTES

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 utf8 - Perl pragma to enable/disable UTF-8 (or UTF-EBCDIC) in source
code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Utility functions

$num_octets = utf8::upgrade($string), $success = utf8::downgrade($string[,
FAIL_OK]), utf8::encode($string), utf8::decode($string), $flag =
utf8::is_utf8(STRING), $flag = utf8::valid(STRING)

=back

=item BUGS

=item SEE ALSO

=back

=head2 vars - Perl pragma to predeclare global variable names (obsolete)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 vmsish - Perl pragma to control VMS-specific language features

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<vmsish status>, C<vmsish exit>, C<vmsish time>, C<vmsish hushed>

=back

=head2 warnings - Perl pragma to control optional warnings

=over 4

=item SYNOPSIS

=item DESCRIPTION

use warnings::register, warnings::enabled(), warnings::enabled($category),
warnings::enabled($object), warnings::warn($message),
warnings::warn($category, $message), warnings::warn($object, $message),
warnings::warnif($message), warnings::warnif($category, $message),
warnings::warnif($object, $message)

=back

=head2 warnings::register - warnings import function

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head1 MODULE DOCUMENTATION

=head2 AnyDBM_File - provide framework for multiple DBMs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item DBM Comparisons

[0], [1], [2], [3]

=back

=item SEE ALSO

=back

=head2 Attribute::Handlers - Simpler definition of attribute handlers

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

[0], [1], [2], [3], [4], [5]

=over 4

=item Typed lexicals

=item Type-specific attribute handlers

=item Non-interpretive attribute handlers

=item Phase-specific attribute handlers

=item Attributes as C<tie> interfaces

=back

=item EXAMPLES

=item DIAGNOSTICS

C<Bad attribute type: ATTR(%s)>, C<Attribute handler %s doesn't handle %s
attributes>, C<Declaration of %s attribute in package %s may clash with
future reserved word>, C<Can't have two ATTR specifiers on one subroutine>,
C<Can't autotie a %s>, C<Internal error: %s symbol went missing>, C<Won't
be able to apply END handler>

=item AUTHOR

=item BUGS

=item COPYRIGHT

=back

=head2 AutoLoader - load subroutines only on demand

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Subroutine Stubs

=item Using B<AutoLoader>'s AUTOLOAD Subroutine

=item Overriding B<AutoLoader>'s AUTOLOAD Subroutine

=item Package Lexicals

=item Not Using AutoLoader

=item B<AutoLoader> vs. B<SelfLoader>

=back

=item CAVEATS

=item SEE ALSO

=back

=head2 AutoSplit - split a package for autoloading

=over 4

=item SYNOPSIS

=item DESCRIPTION

$keep, $check, $modtime

=over 4

=item Multiple packages

=back

=item DIAGNOSTICS

=back

=head2 B - The Perl Compiler

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OVERVIEW

=item Utility Functions

=over 4

=item Functions Returning C<B::SV>, C<B::AV>, C<B::HV>, and C<B::CV>
objects

sv_undef, sv_yes, sv_no, svref_2object(SVREF), amagic_generation, init_av,
check_av, begin_av, end_av, comppadlist, regex_padav, main_cv

=item Functions for Examining the Symbol Table

walksymtable(SYMREF, METHOD, RECURSE, PREFIX)

=item Functions Returning C<B::OP> objects or for walking op trees

main_root, main_start, walkoptree(OP, METHOD), walkoptree_debug(DEBUG)

=item Miscellaneous Utility Functions

ppname(OPNUM), hash(STR), cast_I32(I), minus_c, cstring(STR),
perlstring(STR), class(OBJ), threadsv_names

=back

=item OVERVIEW OF CLASSES

=over 4

=item SV-RELATED CLASSES

=item B::SV Methods

REFCNT, FLAGS, object_2svref

=item B::IV Methods

IV, IVX, UVX, int_value, needs64bits, packiv

=item B::NV Methods

NV, NVX

=item B::RV Methods

RV

=item B::PV Methods

PV, RV, PVX

=item B::PVMG Methods

MAGIC, SvSTASH

=item B::MAGIC Methods

MOREMAGIC, precomp, PRIVATE, TYPE, FLAGS, OBJ, PTR, REGEX

=item B::PVLV Methods

TARGOFF, TARGLEN, TYPE, TARG

=item B::BM Methods

USEFUL, PREVIOUS, RARE, TABLE

=item B::GV Methods

is_empty, NAME, SAFENAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN,
LINE, FILE, FILEGV, GvREFCNT, FLAGS

=item B::IO Methods

LINES, PAGE, PAGE_LEN, LINES_LEFT, TOP_NAME, TOP_GV, FMT_NAME, FMT_GV,
BOTTOM_NAME, BOTTOM_GV, SUBPROCESS, IoTYPE, IoFLAGS, IsSTD

=item B::AV Methods

FILL, MAX, OFF, ARRAY, ARRAYelt, AvFLAGS

=item B::CV Methods

STASH, START, ROOT, GV, FILE, DEPTH, PADLIST, OUTSIDE, OUTSIDE_SEQ, XSUB,
XSUBANY, CvFLAGS, const_sv

=item B::HV Methods

FILL, MAX, KEYS, RITER, NAME, PMROOT, ARRAY

=item OP-RELATED CLASSES

=item B::OP Methods

next, sibling, name, ppaddr, desc, targ, type, opt, static, flags, private,
spare

=item B::UNOP METHOD

first

=item B::BINOP METHOD

last

=item B::LOGOP METHOD

other

=item B::LISTOP METHOD

children

=item B::PMOP Methods

pmreplroot, pmreplstart, pmnext, pmregexp, pmflags, pmdynflags,
pmpermflags, precomp, pmoffset

=item B::SVOP METHOD

sv, gv

=item B::PADOP METHOD

padix

=item B::PVOP METHOD

pv

=item B::LOOP Methods

redoop, nextop, lastop

=item B::COP Methods

label, stash, stashpv, file, cop_seq, arybase, line, warnings, io

=back

=item AUTHOR

=back

=head2 B::Asmdata - Autogenerated data about Perl ops, used to generate
bytecode

=over 4

=item SYNOPSIS

=item DESCRIPTION

%insn_data, @insn_name, @optype, @specialsv_name

=item AUTHOR

=back

=head2 B::Assembler - Assemble Perl bytecode

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHORS

=back

=head2 B::Bblock - Walk basic blocks

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

B<find_leaders>

=back

=item AUTHOR

=back

=head2 B::Bytecode - Perl compiler's bytecode backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=item OPTIONS

B<-b>, B<-H>, B<-k>, B<-o>I<outfile>, B<-s>

=item KNOWN BUGS

=item NOTICE

=item AUTHORS

=back

=head2 B::C - Perl compiler's C backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-D>, B<-Do>, B<-Dc>, B<-DA>,
B<-DC>, B<-DM>, B<-f>, B<-fcog>, B<-fsave-data>, B<-fppaddr>, B<-fwarn-sv>,
B<-fuse-script-name>, B<-fsave-sig-hash>, B<-On>, B<-O0>, B<-O1>, B<-O2>,
B<-llimit>

=item EXAMPLES

=item BUGS

=item AUTHOR

=back

=head2 B::CC - Perl compiler's optimized C translation backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-mModulename>, B<-D>, B<-Dr>,
B<-DO>, B<-Ds>, B<-Dp>, B<-Dq>, B<-Dl>, B<-Dt>, B<-f>,
B<-ffreetmps-each-bblock>, B<-ffreetmps-each-loop>, B<-fomit-taint>, B<-On>

=item EXAMPLES

=item BUGS

=item DIFFERENCES

=over 4

=item Loops

=item Context of ".."

=item Arithmetic

=item Deprecated features

=back

=item AUTHOR

=back

=head2 B::Concise - Walk Perl syntax tree, printing concise info about ops

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=item OPTIONS

=over 4

=item Options for Opcode Ordering

B<-basic>, B<-exec>, B<-tree>

=item Options for Line-Style

B<-concise>, B<-terse>, B<-linenoise>, B<-debug>, B<-env>

=item Options for tree-specific formatting

B<-compact>, B<-loose>, B<-vt>, B<-ascii>

=item Options controlling sequence numbering

B<-base>I<n>, B<-bigendian>, B<-littleendian>

=item Other options

B<-main>, B<-nomain>, B<-nobanner>, B<-banner>, B<-banneris> => subref

=item Option Stickiness

=back

=item ABBREVIATIONS

=over 4

=item OP class abbreviations

=item OP flags abbreviations

=back

=item FORMATTING SPECIFICATIONS

=over 4

=item Special Patterns

B<(x(>I<exec_text>B<;>I<basic_text>B<)x)>, B<(*(>I<text>B<)*)>,
B<(*(>I<text1>B<;>I<text2>B<)*)>, B<(?(>I<text1>B<#>I<var>I<Text2>B<)?)>,
B<~>

=item # Variables

B<#>I<var>, B<#>I<var>I<N>, B<#>I<Var>, B<#addr>, B<#arg>, B<#class>,
B<#classsym>, B<#coplabel>, B<#exname>, B<#extarg>, B<#firstaddr>,
B<#flags>, B<#flagval>, B<#hyphseq>, B<#label>, B<#lastaddr>, B<#name>,
B<#NAME>, B<#next>, B<#nextaddr>, B<#noise>, B<#private>, B<#privval>,
B<#seq>, B<#seqnum>, B<#opt>, B<#static>, B<#sibaddr>, B<#svaddr>,
B<#svclass>, B<#svval>, B<#targ>, B<#targarg>, B<#targarglife>, B<#typenum>

=back

=item Using B::Concise outside of the O framework

=over 4

=item Example: Altering Concise Renderings

=item set_style()

=item set_style_standard($name)

=item add_style()

=item add_callback()

=item Running B::Concise::compile()

=item B::Concise::reset_sequence()

=item Errors

=back

=item AUTHOR

=back

=head2 B::Debug - Walk Perl syntax tree, printing debug info about ops

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Deparse - Perl compiler backend to produce perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-d>, B<-f>I<FILE>, B<-l>, B<-p>, B<-P>, B<-q>, B<-s>I<LETTERS>, B<C>,
B<i>I<NUMBER>, B<T>, B<v>I<STRING>B<.>, B<-x>I<LEVEL>

=item USING B::Deparse AS A MODULE

=over 4

=item Synopsis

=item Description

=item new

=item ambient_pragmas

strict, $[, bytes, utf8, integer, re, warnings, hint_bits, warning_bits

=item coderef2text

=back

=item BUGS

=item AUTHOR

=back

=head2 B::Disassembler - Disassemble Perl bytecode

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Lint - Perl lint

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS AND LINT CHECKS

B<context>, B<implicit-read> and B<implicit-write>, B<bare-subs>,
B<dollar-underscore>, B<private-names>, B<undefined-subs>,
B<regexp-variables>, B<all>, B<none>

=item NON LINT-CHECK OPTIONS

B<-u Package>

=item BUGS

=item AUTHOR

=back

=head2 B::O, O - Generic interface to Perl Compiler backends

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONVENTIONS

=item IMPLEMENTATION

=item BUGS

=item AUTHOR

=back

=head2 B::Showlex - Show lexical variables used in functions or files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=over 4

=item OPTIONS

=back

=item SEE ALSO

=item TODO

=item AUTHOR

=back

=head2 B::Stackobj - Helper module for CC backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Stash - show what stashes are loaded

=head2 B::Terse - Walk Perl syntax tree, printing terse info about ops

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Xref - Generates cross reference reports for Perl programs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

C<-oFILENAME>, C<-r>, C<-d>, C<-D[tO]>

=item BUGS

=item AUTHOR

=back

=head2 Bblock, B::Bblock - Walk basic blocks

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

B<find_leaders>

=back

=item AUTHOR

=back

=head2 Benchmark - benchmark running times of Perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods

new, debug, iters

=item Standard Exports

timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE ]] ),
timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff ( T1, T2 ), timestr (
TIMEDIFF, [ STYLE, [ FORMAT ] ] )

=item Optional Exports

clearcache ( COUNT ), clearallcache ( ), cmpthese ( COUNT, CODEHASHREF, [
STYLE ] ), cmpthese ( RESULTSHASHREF, [ STYLE ] ), countit(TIME, CODE),
disablecache ( ), enablecache ( ), timesum ( T1, T2 )

=item :hireswallclock

=back

=item NOTES

=item EXAMPLES

=item INHERITANCE

=item CAVEATS

=item SEE ALSO

=item AUTHORS

=item MODIFICATION HISTORY

=back

=head2 ByteLoader - load byte compiled perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Bytecode, B::Bytecode - Perl compiler's bytecode backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=item OPTIONS

B<-b>, B<-H>, B<-k>, B<-o>I<outfile>, B<-s>

=item KNOWN BUGS

=item NOTICE

=item AUTHORS

=back

=head2 CGI - Simple Common Gateway Interface Class

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=over 4

=item PROGRAMMING STYLE

=item CALLING CGI.PM ROUTINES

=item CREATING A NEW QUERY OBJECT (OBJECT-ORIENTED STYLE):

=item CREATING A NEW QUERY OBJECT FROM AN INPUT FILE

=item FETCHING A LIST OF KEYWORDS FROM THE QUERY:

=item FETCHING THE NAMES OF ALL THE PARAMETERS PASSED TO YOUR SCRIPT:

=item FETCHING THE VALUE OR VALUES OF A SINGLE NAMED PARAMETER:

=item SETTING THE VALUE(S) OF A NAMED PARAMETER:

=item APPENDING ADDITIONAL VALUES TO A NAMED PARAMETER:

=item IMPORTING ALL PARAMETERS INTO A NAMESPACE:

=item DELETING A PARAMETER COMPLETELY:

=item DELETING ALL PARAMETERS:

=item HANDLING NON-URLENCODED ARGUMENTS

=item DIRECT ACCESS TO THE PARAMETER LIST:

=item FETCHING THE PARAMETER LIST AS A HASH:

=item SAVING THE STATE OF THE SCRIPT TO A FILE:

=item RETRIEVING CGI ERRORS

=item USING THE FUNCTION-ORIENTED INTERFACE

B<:cgi>, B<:form>, B<:html2>, B<:html3>, B<:html4>, B<:netscape>, B<:html>,
B<:standard>, B<:all>

=item PRAGMAS

-any, -compile, -nosticky, -tabindex, -no_undef_params, -no_xhtml, -nph,
-newstyle_urls, -oldstyle_urls, -autoload, -no_debug, -debug,
-private_tempfiles

=item SPECIAL FORMS FOR IMPORTING HTML-TAG FUNCTIONS

1. start_table() (generates a <table> tag), 2. end_table() (generates a
</table> tag), 3. start_ul() (generates a <ul> tag), 4. end_ul() (generates
a </ul> tag)

=back

=item GENERATING DYNAMIC DOCUMENTS

=over 4

=item CREATING A STANDARD HTTP HEADER:

=item GENERATING A REDIRECTION HEADER

=item CREATING THE HTML DOCUMENT HEADER

B<Parameters:>, 4, 5, 6..

=item ENDING THE HTML DOCUMENT:

=item CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:

=item OBTAINING THE SCRIPT'S URL

B<-absolute>, B<-relative>, B<-full>, B<-path> (B<-path_info>), B<-query>
(B<-query_string>), B<-base>, B<-rewrite>

=item MIXING POST AND URL PARAMETERS

=back

=item CREATING STANDARD HTML ELEMENTS:

=over 4

=item PROVIDING ARGUMENTS TO HTML SHORTCUTS

=item THE DISTRIBUTIVE PROPERTY OF HTML SHORTCUTS

=item HTML SHORTCUTS AND LIST INTERPOLATION

=item NON-STANDARD HTML SHORTCUTS

=item AUTOESCAPING HTML

$escaped_string = escapeHTML("unescaped string");, $charset =
charset([$charset]);, $flag = autoEscape([$flag]);

=item PRETTY-PRINTING HTML

=back

=item CREATING FILL-OUT FORMS:

=over 4

=item CREATING AN ISINDEX TAG

=item STARTING AND ENDING A FORM

B<application/x-www-form-urlencoded>, B<multipart/form-data>

=item FORM ELEMENTS

B<-name>, B<-value>, B<-values>, B<-tabindex>, B<-id>, B<-override>,
B<-onChange>, B<-onFocus>, B<-onBlur>, B<-onMouseOver>, B<-onMouseOut>,
B<-onSelect>

=item CREATING A TEXT FIELD

B<Parameters>

=item CREATING A BIG TEXT FIELD

=item CREATING A PASSWORD FIELD

=item CREATING A FILE UPLOAD FIELD

B<Parameters>

=item CREATING A POPUP MENU

=item CREATING AN OPTION GROUP

=item CREATING A SCROLLING LIST

B<Parameters:>

=item CREATING A GROUP OF RELATED CHECKBOXES

B<Parameters:>

=item CREATING A STANDALONE CHECKBOX

B<Parameters:>

=item CREATING A RADIO BUTTON GROUP

B<Parameters:>

=item CREATING A SUBMIT BUTTON 

B<Parameters:>

=item CREATING A RESET BUTTON

=item CREATING A DEFAULT BUTTON

=item CREATING A HIDDEN FIELD

B<Parameters:>

=item CREATING A CLICKABLE IMAGE BUTTON

B<Parameters:>, 3. The third option (-align, optional) is an alignment
type, and may be TOP, BOTTOM or MIDDLE

=item CREATING A JAVASCRIPT ACTION BUTTON

=back

=item HTTP COOKIES

1. an expiration time, 2. a domain, 3. a path, 4. a "secure" flag,
B<-name>, B<-value>, B<-path>, B<-domain>, B<-expires>, B<-secure>

=item WORKING WITH FRAMES

1. Create a <Frameset> document, 2. Specify the destination for the
document in the HTTP header, 3. Specify the destination for the document in
the <form> tag

=item SUPPORT FOR JAVASCRIPT

B<onLoad>, B<onUnload>, B<onSubmit>, B<onClick>, B<onChange>, B<onFocus>,
B<onBlur>, B<onSelect>, B<onMouseOver>, B<onMouseOut>

=item LIMITED SUPPORT FOR CASCADING STYLE SHEETS

=item DEBUGGING

=over 4

=item DUMPING OUT ALL THE NAME/VALUE PAIRS

=back

=item FETCHING ENVIRONMENT VARIABLES

B<Accept()>, B<raw_cookie()>, B<user_agent()>, B<path_info()>,
B<path_translated()>, B<remote_host()>, B<script_name()> Return the script
name as a partial URL, for self-refering scripts, B<referer()>, B<auth_type
()>, B<server_name ()>, B<virtual_host ()>, B<server_port ()>,
B<virtual_port ()>, B<server_software ()>, B<remote_user ()>, B<user_name
()>, B<request_method()>, B<content_type()>, B<http()>, B<https()>

=item USING NPH SCRIPTS

In the B<use> statement, By calling the B<nph()> method:, By using B<-nph>
parameters

=item Server Push

multipart_init(), multipart_start(), multipart_end(), multipart_final()

=item Avoiding Denial of Service Attacks

B<$CGI::POST_MAX>, B<$CGI::DISABLE_UPLOADS>, B<1. On a script-by-script
basis>, B<2. Globally for all scripts>

=item COMPATIBILITY WITH CGI-LIB.PL

=item AUTHOR INFORMATION

=item CREDITS

Matt Heffron (heffron@falstaff.css.beckman.com), James Taylor
(james.taylor@srs.gov), Scott Anguish <sanguish@digifix.com>, Mike Jewell
(mlj3u@virginia.edu), Timothy Shimmin (tes@kbs.citri.edu.au), Joergen Haegg
(jh@axis.se), Laurent Delfosse (delfosse@delfosse.com), Richard Resnick
(applepi1@aol.com), Craig Bishop (csb@barwonwater.vic.gov.au), Tony Curtis
(tc@vcpc.univie.ac.at), Tim Bunce (Tim.Bunce@ig.co.uk), Tom Christiansen
(tchrist@convex.com), Andreas Koenig (k@franz.ww.TU-Berlin.DE), Tim
MacKenzie (Tim.MacKenzie@fulcrum.com.au), Kevin B. Hendricks
(kbhend@dogwood.tyler.wm.edu), Stephen Dahmen (joyfire@inxpress.net), Ed
Jordan (ed@fidalgo.net), David Alan Pisoni (david@cnation.com), Doug
MacEachern (dougm@opengroup.org), Robin Houston (robin@oneworld.org),
...and many many more..

=item A COMPLETE EXAMPLE OF A SIMPLE FORM-BASED SCRIPT

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Apache - Backward compatibility module for CGI.pm

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Carp, B<CGI::Carp> - CGI routines for writing to the HTTPD (or
other) error log

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item REDIRECTING ERROR MESSAGES

=item MAKING PERL ERRORS APPEAR IN THE BROWSER WINDOW

=over 4

=item Changing the default message

=back

=item MAKING WARNINGS APPEAR AS HTML COMMENTS

=item OVERRIDING THE NAME OF THE PROGRAM

=item AUTHORS

=item SEE ALSO

=back

=head2 CGI::Cookie - Interface to Netscape Cookies

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USING CGI::Cookie

B<1. expiration date>, B<2. domain>, B<3. path>, B<4. secure flag>

=over 4

=item Creating New Cookies

=item Sending the Cookie to the Browser

=item Recovering Previous Cookies

=item Manipulating Cookies

B<name()>, B<value()>, B<domain()>, B<path()>, B<expires()>

=back

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Fast - CGI Interface for Fast CGI

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OTHER PIECES OF THE PUZZLE

=item WRITING FASTCGI PERL SCRIPTS

=item INSTALLING FASTCGI SCRIPTS

=item USING FASTCGI SCRIPTS AS CGI SCRIPTS

=item EXTERNAL FASTCGI SERVER INVOCATION

FCGI_SOCKET_PATH, FCGI_LISTEN_QUEUE

=item CAVEATS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Pretty - module to produce nicely formatted HTML code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tags that won't be formatted

=item Customizing the Indenting

=back

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 CGI::Push - Simple Interface to Server Push

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USING CGI::Push

-next_page, -last_page, -type, -delay, -cookie, -target, -expires, -nph

=over 4

=item Heterogeneous Pages

=item Changing the Page Delay on the Fly

=back

=item INSTALLING CGI::Push SCRIPTS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Switch - Backward compatibility module for defunct CGI::Switch

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Util - Internal utilities used by CGI module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR INFORMATION

=item SEE ALSO

=back

=head2 CPAN - query, download and build perl modules from CPAN sites

=over 4

=item SYNOPSIS

=item STATUS

=item DESCRIPTION

=over 4

=item Interactive Mode

Searching for authors, bundles, distribution files and modules, make, test,
install, clean	modules or distributions, get, readme, perldoc, look module
or distribution, ls author, ls globbing_expresion, Signals

=item CPAN::Shell

=item autobundle

=item recompile

=item The four C<CPAN::*> Classes: Author, Bundle, Module, Distribution

=item Programmer's interface

expand($type,@things), expandany(@things), Programming Examples

=item Methods in the other Classes

CPAN::Author::as_glimpse(), CPAN::Author::as_string(),
CPAN::Author::email(), CPAN::Author::fullname(), CPAN::Author::name(),
CPAN::Bundle::as_glimpse(), CPAN::Bundle::as_string(),
CPAN::Bundle::clean(), CPAN::Bundle::contains(),
CPAN::Bundle::force($method,@args), CPAN::Bundle::get(),
CPAN::Bundle::inst_file(), CPAN::Bundle::inst_version(),
CPAN::Bundle::uptodate(), CPAN::Bundle::install(), CPAN::Bundle::make(),
CPAN::Bundle::readme(), CPAN::Bundle::test(),
CPAN::Distribution::as_glimpse(), CPAN::Distribution::as_string(),
CPAN::Distribution::clean(), CPAN::Distribution::containsmods(),
CPAN::Distribution::cvs_import(), CPAN::Distribution::dir(),
CPAN::Distribution::force($method,@args), CPAN::Distribution::get(),
CPAN::Distribution::install(), CPAN::Distribution::isa_perl(),
CPAN::Distribution::look(), CPAN::Distribution::make(),
CPAN::Distribution::prereq_pm(), CPAN::Distribution::readme(),
CPAN::Distribution::perldoc(), CPAN::Distribution::test(),
CPAN::Distribution::uptodate(), CPAN::Index::force_reload(),
CPAN::Index::reload(), CPAN::InfoObj::dump(), CPAN::Module::as_glimpse(),
CPAN::Module::as_string(), CPAN::Module::clean(),
CPAN::Module::cpan_file(), CPAN::Module::cpan_version(),
CPAN::Module::cvs_import(), CPAN::Module::description(),
CPAN::Module::force($method,@args), CPAN::Module::get(),
CPAN::Module::inst_file(), CPAN::Module::inst_version(),
CPAN::Module::install(), CPAN::Module::look(), CPAN::Module::make(),
CPAN::Module::manpage_headline(), CPAN::Module::readme(),
CPAN::Module::perldoc(), CPAN::Module::test(), CPAN::Module::uptodate(),
CPAN::Module::userid()

=item Cache Manager

=item Bundles

=item Prerequisites

=item Finding packages and VERSION

=item Debugging

=item Floppy, Zip, Offline Mode

=back

=item CONFIGURATION

C<o conf E<lt>scalar optionE<gt>>, C<o conf E<lt>scalar optionE<gt>
E<lt>valueE<gt>>, C<o conf E<lt>list optionE<gt>>, C<o conf E<lt>list
optionE<gt> [shift|pop]>, C<o conf E<lt>list optionE<gt>
[unshift|push|splice] E<lt>listE<gt>>

=over 4

=item Note on urllist parameter's format

=item urllist parameter has CD-ROM support

=back

=item SECURITY

=over 4

=item Cryptographically signed modules

=back

=item EXPORT

=item POPULATE AN INSTALLATION WITH LOTS OF MODULES

=item WORKING WITH CPAN.pm BEHIND FIREWALLS

=over 4

=item Three basic types of firewalls

http firewall, ftp firewall, One way visibility, SOCKS, IP Masquerade

=item Configuring lynx or ncftp for going through a firewall

=back

=item FAQ

1), 2), 3), 4), 5), 6), 7), 8), 9), 10), 11)

=item BUGS

=item AUTHOR

=item TRANSLATIONS

=item SEE ALSO

=back

=head2 CPAN::FirstTime - Utility for CPAN::Config file Initialization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 CPAN::Version - utility functions to compare CPAN versions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 CPANox, CPAN::Nox - Wrapper around CPAN.pm without using any XS
module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item  SEE ALSO

=back

=head2 Carp, carp    - warn of errors (from perspective of caller)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Forcing a Stack Trace

=back

=back

=over 4

=item GLOBAL VARIABLES

=over 4

=item $Carp::CarpLevel

=item $Carp::MaxEvalLen

=item $Carp::MaxArgLen

=item $Carp::MaxArgNums

=item $Carp::Verbose

=back

=back

=over 4

=item BUGS

=back

=head2 Carp::Heavy - heavy machinery, no user serviceable parts inside

=head2 Class::ISA -- report the search path for a class's ISA tree

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

the function Class::ISA::super_path($CLASS), the function
Class::ISA::self_and_super_path($CLASS), the function
Class::ISA::self_and_super_versions($CLASS)

=item CAUTIONARY NOTES

=item COPYRIGHT

=item AUTHOR

=back

=head2 Class::Struct - declare struct-like datatypes as Perl classes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The C<struct()> function

=item Class Creation at Compile Time

=item Element Types and Accessor Methods

Scalar (C<'$'> or C<'*$'>), Array (C<'@'> or C<'*@'>), Hash (C<'%'> or
C<'*%'>), Class (C<'Class_Name'> or C<'*Class_Name'>)

=item Initializing with C<new>

=back

=item EXAMPLES

Example 1, Example 2, Example 3

=item Author and Modification History

=back

=head2 Config - access Perl configuration information

=over 4

=item SYNOPSIS

=item DESCRIPTION

myconfig(), config_sh(), config_re($regex), config_vars(@names)

=item EXAMPLE

=item WARNING

=item GLOSSARY

=over 4

=item _

C<_a>, C<_exe>, C<_o>

=item a

C<afs>, C<afsroot>, C<alignbytes>, C<ansi2knr>, C<aphostname>,
C<api_revision>, C<api_subversion>, C<api_version>, C<api_versionstring>,
C<ar>, C<archlib>, C<archlibexp>, C<archname64>, C<archname>, C<archobjs>,
C<asctime_r_proto>, C<awk>

=item b

C<baserev>, C<bash>, C<bin>, C<binexp>, C<bison>, C<byacc>, C<byteorder>

=item c

C<c>, C<castflags>, C<cat>, C<cc>, C<cccdlflags>, C<ccdlflags>, C<ccflags>,
C<ccflags_uselargefiles>, C<ccname>, C<ccsymbols>, C<ccversion>, C<cf_by>,
C<cf_email>, C<cf_time>, C<charsize>, C<chgrp>, C<chmod>, C<chown>,
C<clocktype>, C<comm>, C<compress>, C<contains>, C<cp>, C<cpio>, C<cpp>,
C<cpp_stuff>, C<cppccsymbols>, C<cppflags>, C<cpplast>, C<cppminus>,
C<cpprun>, C<cppstdin>, C<cppsymbols>, C<crypt_r_proto>, C<cryptlib>,
C<csh>, C<ctermid_r_proto>, C<ctime_r_proto>

=item d

C<d__fwalk>, C<d_access>, C<d_accessx>, C<d_aintl>, C<d_alarm>,
C<d_archlib>, C<d_asctime_r>, C<d_atolf>, C<d_atoll>,
C<d_attribute_format>, C<d_attribute_malloc>, C<d_attribute_nonnull>,
C<d_attribute_noreturn>, C<d_attribute_pure>, C<d_attribute_unused>,
C<d_attribute_warn_unused_result>, C<d_bcmp>, C<d_bcopy>, C<d_bsd>,
C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_bzero>, C<d_casti32>, C<d_castneg>,
C<d_charvspr>, C<d_chown>, C<d_chroot>, C<d_chsize>, C<d_class>,
C<d_clearenv>, C<d_closedir>, C<d_cmsghdr_s>, C<d_const>, C<d_copysignl>,
C<d_crypt>, C<d_crypt_r>, C<d_csh>, C<d_ctermid_r>, C<d_ctime_r>,
C<d_cuserid>, C<d_dbl_dig>, C<d_dbminitproto>, C<d_difftime>, C<d_dirfd>,
C<d_dirnamlen>, C<d_dlerror>, C<d_dlopen>, C<d_dlsymun>, C<d_dosuid>,
C<d_drand48_r>, C<d_drand48proto>, C<d_dup2>, C<d_eaccess>, C<d_endgrent>,
C<d_endgrent_r>, C<d_endhent>, C<d_endhostent_r>, C<d_endnent>,
C<d_endnetent_r>, C<d_endpent>, C<d_endprotoent_r>, C<d_endpwent>,
C<d_endpwent_r>, C<d_endsent>, C<d_endservent_r>, C<d_eofnblk>,
C<d_eunice>, C<d_faststdio>, C<d_fchdir>, C<d_fchmod>, C<d_fchown>,
C<d_fcntl>, C<d_fcntl_can_lock>, C<d_fd_macros>, C<d_fd_set>,
C<d_fds_bits>, C<d_fgetpos>, C<d_finite>, C<d_finitel>, C<d_flexfnam>,
C<d_flock>, C<d_flockproto>, C<d_fork>, C<d_fp_class>, C<d_fpathconf>,
C<d_fpclass>, C<d_fpclassify>, C<d_fpclassl>, C<d_fpos64_t>, C<d_frexpl>,
C<d_fs_data_s>, C<d_fseeko>, C<d_fsetpos>, C<d_fstatfs>, C<d_fstatvfs>,
C<d_fsync>, C<d_ftello>, C<d_ftime>, C<d_futimes>, C<d_Gconvert>,
C<d_getcwd>, C<d_getespwnam>, C<d_getfsstat>, C<d_getgrent>,
C<d_getgrent_r>, C<d_getgrgid_r>, C<d_getgrnam_r>, C<d_getgrps>,
C<d_gethbyaddr>, C<d_gethbyname>, C<d_gethent>, C<d_gethname>,
C<d_gethostbyaddr_r>, C<d_gethostbyname_r>, C<d_gethostent_r>,
C<d_gethostprotos>, C<d_getitimer>, C<d_getlogin>, C<d_getlogin_r>,
C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>, C<d_getnbyname>,
C<d_getnent>, C<d_getnetbyaddr_r>, C<d_getnetbyname_r>, C<d_getnetent_r>,
C<d_getnetprotos>, C<d_getpagsz>, C<d_getpbyname>, C<d_getpbynumber>,
C<d_getpent>, C<d_getpgid>, C<d_getpgrp2>, C<d_getpgrp>, C<d_getppid>,
C<d_getprior>, C<d_getprotobyname_r>, C<d_getprotobynumber_r>,
C<d_getprotoent_r>, C<d_getprotoprotos>, C<d_getprpwnam>, C<d_getpwent>,
C<d_getpwent_r>, C<d_getpwnam_r>, C<d_getpwuid_r>, C<d_getsbyname>,
C<d_getsbyport>, C<d_getsent>, C<d_getservbyname_r>, C<d_getservbyport_r>,
C<d_getservent_r>, C<d_getservprotos>, C<d_getspnam>, C<d_getspnam_r>,
C<d_gettimeod>, C<d_gmtime_r>, C<d_gnulibc>, C<d_grpasswd>, C<d_hasmntopt>,
C<d_htonl>, C<d_ilogbl>, C<d_index>, C<d_inetaton>, C<d_int64_t>,
C<d_isascii>, C<d_isfinite>, C<d_isinf>, C<d_isnan>, C<d_isnanl>,
C<d_killpg>, C<d_lchown>, C<d_ldbl_dig>, C<d_link>, C<d_localtime_r>,
C<d_locconv>, C<d_lockf>, C<d_longdbl>, C<d_longlong>, C<d_lseekproto>,
C<d_lstat>, C<d_madvise>, C<d_malloc_size>, C<d_malloc_good_size>,
C<d_mblen>, C<d_mbstowcs>, C<d_mbtowc>, C<d_memchr>, C<d_memcmp>,
C<d_memcpy>, C<d_memmove>, C<d_memset>, C<d_mkdir>, C<d_mkdtemp>,
C<d_mkfifo>, C<d_mkstemp>, C<d_mkstemps>, C<d_mktime>, C<d_mmap>,
C<d_modfl>, C<d_modfl_pow32_bug>, C<d_modflproto>, C<d_mprotect>, C<d_msg>,
C<d_msg_ctrunc>, C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>,
C<d_msg_proxy>, C<d_msgctl>, C<d_msgget>, C<d_msghdr_s>, C<d_msgrcv>,
C<d_msgsnd>, C<d_msync>, C<d_munmap>, C<d_mymalloc>, C<d_nanosleep>,
C<d_nice>, C<d_nl_langinfo>, C<d_nv_preserves_uv>,
C<d_nv_zero_is_allbits_zero>, C<d_off64_t>,
C<d_old_pthread_create_joinable>, C<d_oldpthreads>, C<d_oldsock>,
C<d_open3>, C<d_pathconf>, C<d_pause>, C<d_perl_otherlibdirs>,
C<d_phostname>, C<d_pipe>, C<d_poll>, C<d_portable>, C<d_PRId64>,
C<d_PRIeldbl>, C<d_PRIEUldbl>, C<d_PRIfldbl>, C<d_PRIFUldbl>,
C<d_PRIgldbl>, C<d_PRIGUldbl>, C<d_PRIi64>, C<d_PRIo64>, C<d_PRIu64>,
C<d_PRIx64>, C<d_PRIXU64>, C<d_procselfexe>, C<d_pthread_atfork>,
C<d_pthread_attr_setscope>, C<d_pthread_yield>, C<d_pwage>, C<d_pwchange>,
C<d_pwclass>, C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>, C<d_pwpasswd>,
C<d_pwquota>, C<d_qgcvt>, C<d_quad>, C<d_random_r>, C<d_readdir64_r>,
C<d_readdir>, C<d_readdir_r>, C<d_readlink>, C<d_readv>, C<d_recvmsg>,
C<d_rename>, C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>,
C<d_sanemcmp>, C<d_sbrkproto>, C<d_scalbnl>, C<d_sched_yield>,
C<d_scm_rights>, C<d_SCNfldbl>, C<d_seekdir>, C<d_select>, C<d_sem>,
C<d_semctl>, C<d_semctl_semid_ds>, C<d_semctl_semun>, C<d_semget>,
C<d_semop>, C<d_sendmsg>, C<d_setegid>, C<d_seteuid>, C<d_setgrent>,
C<d_setgrent_r>, C<d_setgrps>, C<d_sethent>, C<d_sethostent_r>,
C<d_setitimer>, C<d_setlinebuf>, C<d_setlocale>, C<d_setlocale_r>,
C<d_setnent>, C<d_setnetent_r>, C<d_setpent>, C<d_setpgid>, C<d_setpgrp2>,
C<d_setpgrp>, C<d_setprior>, C<d_setproctitle>, C<d_setprotoent_r>,
C<d_setpwent>, C<d_setpwent_r>, C<d_setregid>, C<d_setresgid>,
C<d_setresuid>, C<d_setreuid>, C<d_setrgid>, C<d_setruid>, C<d_setsent>,
C<d_setservent_r>, C<d_setsid>, C<d_setvbuf>, C<d_sfio>, C<d_shm>,
C<d_shmat>, C<d_shmatprototype>, C<d_shmctl>, C<d_shmdt>, C<d_shmget>,
C<d_sigaction>, C<d_sigprocmask>, C<d_sigsetjmp>, C<d_sockatmark>,
C<d_sockatmarkproto>, C<d_socket>, C<d_socklen_t>, C<d_sockpair>,
C<d_socks5_init>, C<d_sprintf_returns_strlen>, C<d_sqrtl>, C<d_srand48_r>,
C<d_srandom_r>, C<d_sresgproto>, C<d_sresuproto>, C<d_statblks>,
C<d_statfs_f_flags>, C<d_statfs_s>, C<d_statvfs>, C<d_stdio_cnt_lval>,
C<d_stdio_ptr_lval>, C<d_stdio_ptr_lval_nochange_cnt>,
C<d_stdio_ptr_lval_sets_cnt>, C<d_stdio_stream_array>, C<d_stdiobase>,
C<d_stdstdio>, C<d_strchr>, C<d_strcoll>, C<d_strctcpy>, C<d_strerrm>,
C<d_strerror>, C<d_strerror_r>, C<d_strftime>, C<d_strlcat>, C<d_strlcpy>,
C<d_strtod>, C<d_strtol>, C<d_strtold>, C<d_strtoll>, C<d_strtoq>,
C<d_strtoul>, C<d_strtoull>, C<d_strtouq>, C<d_strxfrm>, C<d_suidsafe>,
C<d_symlink>, C<d_syscall>, C<d_syscallproto>, C<d_sysconf>,
C<d_sysernlst>, C<d_syserrlst>, C<d_system>, C<d_tcgetpgrp>,
C<d_tcsetpgrp>, C<d_telldir>, C<d_telldirproto>, C<d_time>, C<d_times>,
C<d_tm_tm_gmtoff>, C<d_tm_tm_zone>, C<d_tmpnam_r>, C<d_truncate>,
C<d_ttyname_r>, C<d_tzname>, C<d_u32align>, C<d_ualarm>, C<d_umask>,
C<d_uname>, C<d_union_semun>, C<d_unordered>, C<d_unsetenv>, C<d_usleep>,
C<d_usleepproto>, C<d_ustat>, C<d_vendorarch>, C<d_vendorbin>,
C<d_vendorlib>, C<d_vendorscript>, C<d_vfork>, C<d_void_closedir>,
C<d_voidsig>, C<d_voidtty>, C<d_volatile>, C<d_vprintf>, C<d_wait4>,
C<d_waitpid>, C<d_wcstombs>, C<d_wctomb>, C<d_writev>, C<d_xenix>, C<date>,
C<db_hashtype>, C<db_prefixtype>, C<db_version_major>, C<db_version_minor>,
C<db_version_patch>, C<defvoidused>, C<direntrytype>, C<dlext>, C<dlsrc>,
C<doublesize>, C<drand01>, C<drand48_r_proto>, C<dynamic_ext>

=item e

C<eagain>, C<ebcdic>, C<echo>, C<egrep>, C<emacs>, C<endgrent_r_proto>,
C<endhostent_r_proto>, C<endnetent_r_proto>, C<endprotoent_r_proto>,
C<endpwent_r_proto>, C<endservent_r_proto>, C<eunicefix>, C<exe_ext>,
C<expr>, C<extensions>, C<extras>

=item f

C<fflushall>, C<fflushNULL>, C<find>, C<firstmakefile>, C<flex>,
C<fpossize>, C<fpostype>, C<freetype>, C<from>, C<full_ar>, C<full_csh>,
C<full_sed>

=item g

C<gccansipedantic>, C<gccosandvers>, C<gccversion>, C<getgrent_r_proto>,
C<getgrgid_r_proto>, C<getgrnam_r_proto>, C<gethostbyaddr_r_proto>,
C<gethostbyname_r_proto>, C<gethostent_r_proto>, C<getlogin_r_proto>,
C<getnetbyaddr_r_proto>, C<getnetbyname_r_proto>, C<getnetent_r_proto>,
C<getprotobyname_r_proto>, C<getprotobynumber_r_proto>,
C<getprotoent_r_proto>, C<getpwent_r_proto>, C<getpwnam_r_proto>,
C<getpwuid_r_proto>, C<getservbyname_r_proto>, C<getservbyport_r_proto>,
C<getservent_r_proto>, C<getspnam_r_proto>, C<gidformat>, C<gidsign>,
C<gidsize>, C<gidtype>, C<glibpth>, C<gmake>, C<gmtime_r_proto>,
C<gnulibc_version>, C<grep>, C<groupcat>, C<groupstype>, C<gzip>

=item h

C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>, C<html1dir>, C<html1direxp>,
C<html3dir>, C<html3direxp>

=item i

C<i16size>, C<i16type>, C<i32size>, C<i32type>, C<i64size>, C<i64type>,
C<i8size>, C<i8type>, C<i_arpainet>, C<i_bsdioctl>, C<i_crypt>, C<i_db>,
C<i_dbm>, C<i_dirent>, C<i_dld>, C<i_dlfcn>, C<i_fcntl>, C<i_float>,
C<i_fp>, C<i_fp_class>, C<i_gdbm>, C<i_grp>, C<i_ieeefp>, C<i_inttypes>,
C<i_langinfo>, C<i_libutil>, C<i_limits>, C<i_locale>, C<i_machcthr>,
C<i_malloc>, C<i_math>, C<i_memory>, C<i_mntent>, C<i_ndbm>, C<i_netdb>,
C<i_neterrno>, C<i_netinettcp>, C<i_niin>, C<i_poll>, C<i_prot>,
C<i_pthread>, C<i_pwd>, C<i_rpcsvcdbm>, C<i_sfio>, C<i_sgtty>, C<i_shadow>,
C<i_socks>, C<i_stdarg>, C<i_stddef>, C<i_stdlib>, C<i_string>,
C<i_sunmath>, C<i_sysaccess>, C<i_sysdir>, C<i_sysfile>, C<i_sysfilio>,
C<i_sysin>, C<i_sysioctl>, C<i_syslog>, C<i_sysmman>, C<i_sysmode>,
C<i_sysmount>, C<i_sysndir>, C<i_sysparam>, C<i_sysresrc>, C<i_syssecrt>,
C<i_sysselct>, C<i_syssockio>, C<i_sysstat>, C<i_sysstatfs>,
C<i_sysstatvfs>, C<i_systime>, C<i_systimek>, C<i_systimes>, C<i_systypes>,
C<i_sysuio>, C<i_sysun>, C<i_sysutsname>, C<i_sysvfs>, C<i_syswait>,
C<i_termio>, C<i_termios>, C<i_time>, C<i_unistd>, C<i_ustat>, C<i_utime>,
C<i_values>, C<i_varargs>, C<i_varhdr>, C<i_vfork>,
C<ignore_versioned_solibs>, C<inc_version_list>, C<inc_version_list_init>,
C<incpath>, C<inews>, C<installarchlib>, C<installbin>, C<installhtml1dir>,
C<installhtml3dir>, C<installman1dir>, C<installman3dir>, C<installprefix>,
C<installprefixexp>, C<installprivlib>, C<installscript>,
C<installsitearch>, C<installsitebin>, C<installsitehtml1dir>,
C<installsitehtml3dir>, C<installsitelib>, C<installsiteman1dir>,
C<installsiteman3dir>, C<installsitescript>, C<installstyle>,
C<installusrbinperl>, C<installvendorarch>, C<installvendorbin>,
C<installvendorhtml1dir>, C<installvendorhtml3dir>, C<installvendorlib>,
C<installvendorman1dir>, C<installvendorman3dir>, C<installvendorscript>,
C<intsize>, C<issymlink>, C<ivdformat>, C<ivsize>, C<ivtype>

=item k

C<known_extensions>, C<ksh>

=item l

C<ld>, C<lddlflags>, C<ldflags>, C<ldflags_uselargefiles>, C<ldlibpthname>,
C<less>, C<lib_ext>, C<libc>, C<libperl>, C<libpth>, C<libs>, C<libsdirs>,
C<libsfiles>, C<libsfound>, C<libspath>, C<libswanted>,
C<libswanted_uselargefiles>, C<line>, C<lint>, C<lkflags>, C<ln>, C<lns>,
C<localtime_r_proto>, C<locincpth>, C<loclibpth>, C<longdblsize>,
C<longlongsize>, C<longsize>, C<lp>, C<lpr>, C<ls>, C<lseeksize>,
C<lseektype>

=item m

C<mail>, C<mailx>, C<make>, C<make_set_make>, C<mallocobj>, C<mallocsrc>,
C<malloctype>, C<man1dir>, C<man1direxp>, C<man1ext>, C<man3dir>,
C<man3direxp>, C<man3ext>

=item M

C<Mcc>, C<mips_type>, C<mistrustnm>, C<mkdir>, C<mmaptype>, C<modetype>,
C<more>, C<multiarch>, C<mv>, C<myarchname>, C<mydomain>, C<myhostname>,
C<myuname>

=item n

C<n>, C<need_va_copy>, C<netdb_hlen_type>, C<netdb_host_type>,
C<netdb_name_type>, C<netdb_net_type>, C<nm>, C<nm_opt>, C<nm_so_opt>,
C<nonxs_ext>, C<nroff>, C<nv_preserves_uv_bits>, C<nveformat>,
C<nvEUformat>, C<nvfformat>, C<nvFUformat>, C<nvgformat>, C<nvGUformat>,
C<nvsize>, C<nvtype>

=item o

C<o_nonblock>, C<obj_ext>, C<old_pthread_create_joinable>, C<optimize>,
C<orderlib>, C<osname>, C<osvers>, C<otherlibdirs>

=item p

C<package>, C<pager>, C<passcat>, C<patchlevel>, C<path_sep>, C<perl5>,
C<perl>, C<perl_patchlevel>

=item P

C<PERL_REVISION>, C<PERL_SUBVERSION>, C<PERL_VERSION>, C<perladmin>,
C<perllibs>, C<perlpath>, C<pg>, C<phostname>, C<pidtype>, C<plibpth>,
C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>, C<privlibexp>,
C<procselfexe>, C<prototype>, C<ptrsize>

=item q

C<quadkind>, C<quadtype>

=item r

C<randbits>, C<randfunc>, C<random_r_proto>, C<randseedtype>, C<ranlib>,
C<rd_nodata>, C<readdir64_r_proto>, C<readdir_r_proto>, C<revision>, C<rm>,
C<rmail>, C<run>, C<runnm>

=item s

C<sched_yield>, C<scriptdir>, C<scriptdirexp>, C<sed>, C<seedfunc>,
C<selectminbits>, C<selecttype>, C<sendmail>, C<setgrent_r_proto>,
C<sethostent_r_proto>, C<setlocale_r_proto>, C<setnetent_r_proto>,
C<setprotoent_r_proto>, C<setpwent_r_proto>, C<setservent_r_proto>, C<sh>,
C<shar>, C<sharpbang>, C<shmattype>, C<shortsize>, C<shrpenv>, C<shsharp>,
C<sig_count>, C<sig_name>, C<sig_name_init>, C<sig_num>, C<sig_num_init>,
C<sig_size>, C<signal_t>, C<sitearch>, C<sitearchexp>, C<sitebin>,
C<sitebinexp>, C<sitehtml1dir>, C<sitehtml1direxp>, C<sitehtml3dir>,
C<sitehtml3direxp>, C<sitelib>, C<sitelib_stem>, C<sitelibexp>,
C<siteman1dir>, C<siteman1direxp>, C<siteman3dir>, C<siteman3direxp>,
C<siteprefix>, C<siteprefixexp>, C<sitescript>, C<sitescriptexp>,
C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<so>, C<sockethdr>,
C<socketlib>, C<socksizetype>, C<sort>, C<spackage>, C<spitshell>,
C<sPRId64>, C<sPRIeldbl>, C<sPRIEUldbl>, C<sPRIfldbl>, C<sPRIFUldbl>,
C<sPRIgldbl>, C<sPRIGUldbl>, C<sPRIi64>, C<sPRIo64>, C<sPRIu64>,
C<sPRIx64>, C<sPRIXU64>, C<srand48_r_proto>, C<srandom_r_proto>, C<src>,
C<sSCNfldbl>, C<ssizetype>, C<startperl>, C<startsh>, C<static_ext>,
C<stdchar>, C<stdio_base>, C<stdio_bufsiz>, C<stdio_cnt>, C<stdio_filbuf>,
C<stdio_ptr>, C<stdio_stream_array>, C<strerror_r_proto>, C<strings>,
C<submit>, C<subversion>, C<sysman>

=item t

C<tail>, C<tar>, C<targetarch>, C<tbl>, C<tee>, C<test>, C<timeincl>,
C<timetype>, C<tmpnam_r_proto>, C<to>, C<touch>, C<tr>, C<trnl>, C<troff>,
C<ttyname_r_proto>

=item u

C<u16size>, C<u16type>, C<u32size>, C<u32type>, C<u64size>, C<u64type>,
C<u8size>, C<u8type>, C<uidformat>, C<uidsign>, C<uidsize>, C<uidtype>,
C<uname>, C<uniq>, C<uquadtype>, C<use5005threads>, C<use64bitall>,
C<use64bitint>, C<usecrosscompile>, C<usedl>, C<usefaststdio>,
C<useithreads>, C<uselargefiles>, C<uselongdouble>, C<usemallocwrap>,
C<usemorebits>, C<usemultiplicity>, C<usemymalloc>, C<usenm>, C<useopcode>,
C<useperlio>, C<useposix>, C<usereentrant>, C<usesfio>, C<useshrplib>,
C<usesocks>, C<usethreads>, C<usevendorprefix>, C<usevfork>, C<usrinc>,
C<uuname>, C<uvoformat>, C<uvsize>, C<uvtype>, C<uvuformat>, C<uvxformat>,
C<uvXUformat>

=item v

C<vendorarch>, C<vendorarchexp>, C<vendorbin>, C<vendorbinexp>,
C<vendorhtml1dir>, C<vendorhtml1direxp>, C<vendorhtml3dir>,
C<vendorhtml3direxp>, C<vendorlib>, C<vendorlib_stem>, C<vendorlibexp>,
C<vendorman1dir>, C<vendorman1direxp>, C<vendorman3dir>,
C<vendorman3direxp>, C<vendorprefix>, C<vendorprefixexp>, C<vendorscript>,
C<vendorscriptexp>, C<version>, C<version_patchlevel_string>,
C<versiononly>, C<vi>, C<voidflags>

=item x

C<xlibpth>

=item y

C<yacc>, C<yaccflags>

=item z

C<zcat>, C<zip>

=back

=item NOTE

=back

=head2 Cwd - get pathname of current working directory

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item getcwd and friends

getcwd, cwd, fastcwd, fastgetcwd, getdcwd

=item abs_path and friends

abs_path, realpath, fast_abs_path

=item $ENV{PWD}

=back

=item NOTES

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 DB - programmatic interface to the Perl debugging API (draft,
subject to
change)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Global Variables

 $DB::sub,  %DB::sub,  $DB::single,  $DB::signal,  $DB::trace,	@DB::args, 
@DB::dbline,  %DB::dbline,  $DB::package,  $DB::filename,  $DB::subname, 
$DB::lineno

=item API Methods

CLIENT->register(), CLIENT->evalcode(STRING), CLIENT->skippkg('D::hide'),
CLIENT->run(), CLIENT->step(), CLIENT->next(), CLIENT->done()

=item Client Callback Methods

CLIENT->init(), CLIENT->prestop([STRING]), CLIENT->stop(), CLIENT->idle(),
CLIENT->poststop([STRING]), CLIENT->evalcode(STRING), CLIENT->cleanup(),
CLIENT->output(LIST)

=back

=item BUGS

=item AUTHOR

=back

=head2 DBM_Filter -- Filter DBM keys/values 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item What is a DBM Filter?

=over 4

=item So what's new?

=back

=item METHODS

=over 4

=item $db->Filter_Push()

=item $db->Filter_Key_Push()

=item $db->Filter_Value_Push()

Filter_Push, Filter_Key_Push, Filter_Value_Push

=item $db->Filter_Pop()

=item $db->Filtered()

=back

=item Writing a Filter

=over 4

=item Immediate Filters

=item Canned Filters

"name", params

=back

=item Filters Included

utf8, encode, compress, int32, null

=item NOTES

=over 4

=item Maintain Round Trip Integrity

=item Don't mix filtered & non-filtered data in the same database file. 

=back

=item EXAMPLE

=item SEE ALSO

=item AUTHOR

=back

=head2 DB_File - Perl5 access to Berkeley DB version 1.x

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<DB_HASH>, B<DB_BTREE>, B<DB_RECNO>

=over 4

=item Using DB_File with Berkeley DB version 2 or greater

=item Interface to Berkeley DB

=item Opening a Berkeley DB Database File

=item Default Parameters

=item In Memory Databases

=back

=item DB_HASH

=over 4

=item A Simple Example

=back

=item DB_BTREE

=over 4

=item Changing the BTREE sort order

=item Handling Duplicate Keys 

=item The get_dup() Method

=item The find_dup() Method

=item The del_dup() Method

=item Matching Partial Keys 

=back

=item DB_RECNO

=over 4

=item The 'bval' Option

=item A Simple Example

=item Extra RECNO Methods

B<$X-E<gt>push(list) ;>, B<$value = $X-E<gt>pop ;>, B<$X-E<gt>shift>,
B<$X-E<gt>unshift(list) ;>, B<$X-E<gt>length>, B<$X-E<gt>splice(offset,
length, elements);>

=item Another Example

=back

=item THE API INTERFACE

B<$status = $X-E<gt>get($key, $value [, $flags]) ;>, B<$status =
$X-E<gt>put($key, $value [, $flags]) ;>, B<$status = $X-E<gt>del($key [,
$flags]) ;>, B<$status = $X-E<gt>fd ;>, B<$status = $X-E<gt>seq($key,
$value, $flags) ;>, B<$status = $X-E<gt>sync([$flags]) ;>

=item DBM FILTERS

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>

=over 4

=item The Filter

=item An Example -- the NULL termination problem.

=item Another Example -- Key is a C int.

=back

=item HINTS AND TIPS 

=over 4

=item Locking: The Trouble with fd

=item Safe ways to lock a database

B<Tie::DB_Lock>, B<Tie::DB_LockFile>, B<DB_File::Lock>

=item Sharing Databases With C Applications

=item The untie() Gotcha

=back

=item COMMON QUESTIONS

=over 4

=item Why is there Perl source in my database?

=item How do I store complex data structures with DB_File?

=item What does "Invalid Argument" mean?

=item What does "Bareword 'DB_File' not allowed" mean? 

=back

=item REFERENCES

=item HISTORY

=item BUGS

=item AVAILABILITY

=item COPYRIGHT

=item SEE ALSO

=item AUTHOR

=back

=head2 Data::Dumper - stringified perl data structures, suitable for both
printing and C<eval>

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods

I<PACKAGE>->new(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dump  I<or> 
I<PACKAGE>->Dump(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Seen(I<[HASHREF]>),
I<$OBJ>->Values(I<[ARRAYREF]>), I<$OBJ>->Names(I<[ARRAYREF]>),
I<$OBJ>->Reset

=item Functions

Dumper(I<LIST>)

=item Configuration Variables or Methods

=item Exports

Dumper

=back

=item EXAMPLES

=item BUGS

=over 4

=item NOTE

=back

=item AUTHOR

=item VERSION

=item SEE ALSO

=back

=head2 Devel::DProf - a Perl code profiler

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item PROFILE FORMAT

=item AUTOLOAD

=item ENVIRONMENT

=item BUGS

=item SEE ALSO

=back

=head2 Devel::PPPort - Perl/Pollution/Portability

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Why use ppport.h?

You should use F<ppport.h> in modern code so that your code will work
with the widest range of Perl interpreters possible, without significant
additional work.

=item How to use ppport.h

=item Running ppport.h

=back

=item FUNCTIONS

=over 4

=item WriteFile

=back

=item COMPATIBILITY

=over 4

=item Provided Perl compatibility API

=item Perl API not supported by ppport.h

perl 5.9.2, perl 5.9.1, perl 5.9.0, perl 5.8.3, perl 5.8.1, perl 5.8.0,
perl 5.7.3, perl 5.7.2, perl 5.7.1, perl 5.6.1, perl 5.6.0, perl 5.005_03,
perl 5.005, perl 5.004_05, perl 5.004_04, perl 5.004

=back

=item BUGS

=item AUTHORS

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Devel::Peek - A data debugging tool for the XS programmer

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Runtime debugging

=item Memory footprint debugging

=back

=item EXAMPLES

=over 4

=item A simple scalar string

=item A simple scalar number

=item A simple scalar with an extra reference

=item A reference to a simple scalar

=item A reference to an array

=item A reference to a hash

=item Dumping a large array or hash

=item A reference to an SV which holds a C pointer

=item A reference to a subroutine

=back

=item EXPORTS

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 Devel::SelfStubber - generate stubs for a SelfLoading module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Devel::Size - Perl extension for finding the memory usage of Perl
variables

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item size($ref)

=item total_size($ref)

=back

=item EXPORT

=item UNDERSTANDING MEMORY ALLOCATION

=over 4

=item The C library

=item Perl

=back

=item DANGERS

=item Messages: texts originating from this module.

=over 4

=item Errors

=item warnings

=back

=item BUGS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Digest - Modules that calculate message digests

=over 4

=item SYNOPSIS

=item DESCRIPTION

I<binary>, I<hex>, I<base64>

=item OO INTERFACE

$ctx = Digest->XXX($arg,...), $ctx = Digest->new(XXX => $arg,...), $ctx =
Digest::XXX->new($arg,...), $other_ctx = $ctx->clone, $ctx->reset,
$ctx->add( $data, ... ), $ctx->addfile( $io_handle ), $ctx->add_bits(
$data, $nbits ), $ctx->add_bits( $bitstring ), $ctx->digest,
$ctx->hexdigest, $ctx->b64digest

=item Digest speed

=item SEE ALSO

=item AUTHOR

=back

=head2 Digest::MD5 - Perl interface to the MD5 Algorithm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

md5($data,...), md5_hex($data,...), md5_base64($data,...)

=item METHODS

$md5 = Digest::MD5->new, $md5->reset, $md5->clone, $md5->add($data,...),
$md5->addfile($io_handle), $md5->add_bits($data, $nbits),
$md5->add_bits($bitstring), $md5->digest, $md5->hexdigest, $md5->b64digest

=item EXAMPLES

=item SEE ALSO

=item COPYRIGHT

=item AUTHORS

=back

=head2 Digest::base - Digest base class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Digest::file - Calculate digests of files

=over 4

=item SYNOPSIS

=item DESCRIPTION

digest_file( $file, $algorithm, [$arg,...] ), digest_file_hex( $file,
$algorithm, [$arg,...] ), digest_file_base64( $file, $algorithm, [$arg,...]
)

=item SEE ALSO

=back

=head2 DirHandle - supply object methods for directory handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=back

=head2 Dumpvalue - provides screen dump of Perl data.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Creation

C<arrayDepth>, C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>,
C<dumpDBFiles>, C<dumpPackages>, C<dumpReused>, C<tick>, C<quoteHighBit>,
C<printUndef>, C<usageOnly>, unctrl, subdump, bareStringify, quoteHighBit,
stopDbSignal

=item Methods

dumpValue, dumpValues, stringify, dumpvars, set_quote, set_unctrl,
compactDump, veryCompact, set, get

=back

=back

=head2 DynaLoader - Dynamically load C libraries into Perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

@dl_library_path, @dl_resolve_using, @dl_require_symbols, @dl_librefs,
@dl_modules, @dl_shared_objects, dl_error(), $dl_debug, dl_findfile(),
dl_expandspec(), dl_load_file(), dl_unload_file(), dl_load_flags(),
dl_find_symbol(), dl_find_symbol_anywhere(), dl_undef_symbols(),
dl_install_xsub(), bootstrap()

=item AUTHOR

=back

=head2 DynaLoader::XSLoader, XSLoader - Dynamically load C libraries into
Perl code

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Migration from C<DynaLoader>

=item Backward compatible boilerplate

=back

=item Order of initialization: early load()

=over 4

=item The most hairy case

=back

=item DIAGNOSTICS

Can't find '%s' symbol in %s, Can't load '%s' for module %s: %s, Undefined
symbols present after loading %s: %s, XSLoader::load('Your::Module',
$Your::Module::VERSION)

=item LIMITATIONS

=item BUGS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 Encode - character encodings

=over 4

=item SYNOPSIS

=over 4

=item Table of Contents

=back

=item DESCRIPTION

=over 4

=item TERMINOLOGY

=back

=item PERL ENCODING API

$octets  = encode(ENCODING, $string [, CHECK]), $string = decode(ENCODING,
$octets [, CHECK]), [$length =] from_to($octets, FROM_ENC, TO_ENC [,
CHECK]), $octets = encode_utf8($string);, $string = decode_utf8($octets [,
CHECK]);

=over 4

=item Listing available encodings

=item Defining Aliases

=back

=item Encoding via PerlIO

=item Handling Malformed Data

B<NOTE:> Not all encoding support this feature, I<CHECK> =
Encode::FB_DEFAULT ( == 0), I<CHECK> = Encode::FB_CROAK ( == 1), I<CHECK> =
Encode::FB_QUIET, I<CHECK> = Encode::FB_WARN, perlqq mode (I<CHECK> =
Encode::FB_PERLQQ), HTML charref mode (I<CHECK> = Encode::FB_HTMLCREF), XML
charref mode (I<CHECK> = Encode::FB_XMLCREF), The bitmask

=over 4

=item coderef for CHECK

=back

=item Defining Encodings

=item The UTF-8 flag

Goal #1:, Goal #2:, Goal #3:, Goal #4:

=over 4

=item Messing with Perl's Internals

is_utf8(STRING [, CHECK]), _utf8_on(STRING), _utf8_off(STRING)

=back

=item UTF-8 vs. utf8

=item SEE ALSO

=item MAINTAINER

=back

=head2 Encode::Alias - alias definitions to encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

As a simple string, As a qr// compiled regular expression, e.g.:, As a code
reference, e.g.:

=over 4

=item Alias overloading

=back

=item SEE ALSO

=back

=head2 Encode::Byte - Single Byte Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Encode::CJKConstants -- Internally used by Encode::??::ISO_2022_*

=head2 Encode::CN - China-based Chinese Encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item BUGS

=item SEE ALSO

=back

=head2 Encode::CN::HZ -- internally used by Encode::CN

=head2 Encode::Config -- internally used by Encode

=head2 Encode::EBCDIC - EBCDIC Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Encode::Encoding - Encode Implementation Base Class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods you should implement

-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check]),
-E<gt>cat_decode($destination, $octets, $offset, $terminator [,$check])

=item Other methods defined in Encode::Encodings

-E<gt>name, -E<gt>renew, -E<gt>renewed, -E<gt>perlio_ok(),
-E<gt>needs_lines()

=item Example: Encode::ROT13

=back

=item Why the heck Encode API is different?

=over 4

=item Compiled Encodings

=back

=item SEE ALSO

Scheme 1, Scheme 2, Other Schemes

=back

=head2 Encode::Guess -- Guesses encoding from data

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

Encode::Guess->set_suspects, Encode::Guess->add_suspects,
Encode::decode("Guess" ...), Encode::Guess->guess($data),
guess_encoding($data, [, I<list of suspects>])

=item CAVEATS

=item TO DO

=item SEE ALSO

=back

=head2 Encode::JP - Japanese Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item Note on ISO-2022-JP(-1)?

=item BUGS

=item SEE ALSO

=back

=head2 Encode::JP::H2Z -- internally used by Encode::JP::2022_JP*

=head2 Encode::JP::JIS7 -- internally used by Encode::JP

=head2 Encode::KR - Korean Encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=back

=head2 Encode::KR::2022_KR -- internally used by Encode::KR

=head2 Encode::MIME::Header -- MIME 'B' and 'Q' header encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=back

=head2 Encode::PerlIO -- a detailed document on Encode and PerlIO

=over 4

=item Overview

=item How does it work?

=item Line Buffering

=over 4

=item How can I tell whether my encoding fully supports PerlIO ?

=back

=item SEE ALSO

=back

=head2 Encode::Supported -- Encodings supported by Encode

=over 4

=item DESCRIPTION

=over 4

=item Encoding Names

=back

=item Supported Encodings

=over 4

=item Built-in Encodings

=item Encode::Unicode -- other Unicode encodings

=item Encode::Byte -- Extended ASCII

ISO-8859 and corresponding vendor mappings, KOI8 - De Facto Standard for
the Cyrillic world, gsm0338 - Hentai Latin 1

=item CJK: Chinese, Japanese, Korean (Multibyte)

Encode::CN -- Continental China, Encode::JP -- Japan, Encode::KR -- Korea,
Encode::TW -- Taiwan, Encode::HanExtra -- More Chinese via CPAN,
Encode::JIS2K -- JIS X 0213 encodings via CPAN

=item Miscellaneous encodings

Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header, Encode::Guess

=back

=item Unsupported encodings

  ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
Various Mac encodings, (Mac) Indic encodings

=item Encoding vs. Charset -- terminology

=item Encoding Classification (by Anton Tagunov and Dan Kogai)

=over 4

=item Microsoft-related naming mess

KS_C_5601-1987, GB2312, Big5, Shift_JIS

=back

=item Glossary

character repertoire, coded character set (CCS), character encoding scheme
(CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2, Unicode, UTF,
UTF-16

=item See Also

=item References

ECMA, ECMA-035 (eq C<ISO-2022>), IANA, Assigned Charset Names by IANA, ISO,
RFC, UC, Unicode Glossary

=over 4

=item Other Notable Sites

czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
"Introduction to i18n"

=item Offline sources

C<CJKV Information Processing> by Ken Lunde

=back

=back

=head2 Encode::Symbol - Symbol Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Encode::TW - Taiwan-based Chinese Encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item BUGS

=item SEE ALSO

=back

=head2 Encode::Unicode -- Various Unicode Transformation Formats

=over 4

=item SYNOPSIS

=item ABSTRACT

L<http://www.unicode.org/glossary/> says:, Quick Reference

=item Size, Endianness, and BOM

=over 4

=item by size

=item by endianness

BOM as integer when fetched in network byte order

=back

=item Surrogate Pairs

=item Error Checking

=item SEE ALSO

=back

=head2 Encode::Unicode::UTF7 -- UTF-7 encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item In Practice

=item SEE ALSO

=back

=head2 Encode::lib::Encode::Alias, Encode::Alias - alias definitions to
encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

As a simple string, As a qr// compiled regular expression, e.g.:, As a code
reference, e.g.:

=over 4

=item Alias overloading

=back

=item SEE ALSO

=back

=head2 Encode::lib::Encode::CJKConstants, Encode::CJKConstants.pm --
Internally used by Encode::??::ISO_2022_*

=head2 Encode::lib::Encode::CN::HZ, Encode::CN::HZ -- internally used by
Encode::CN

=head2 Encode::lib::Encode::Config, Encode::Config -- internally used by
Encode

=head2 Encode::lib::Encode::Encoding, Encode::Encoding - Encode
Implementation Base Class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods you should implement

-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check]),
-E<gt>cat_decode($destination, $octets, $offset, $terminator [,$check])

=item Other methods defined in Encode::Encodings

-E<gt>name, -E<gt>renew, -E<gt>renewed, -E<gt>perlio_ok(),
-E<gt>needs_lines()

=item Example: Encode::ROT13

=back

=item Why the heck Encode API is different?

=over 4

=item Compiled Encodings

=back

=item SEE ALSO

Scheme 1, Scheme 2, Other Schemes

=back

=head2 Encode::lib::Encode::Guess, Encode::Guess -- Guesses encoding from
data

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

Encode::Guess->set_suspects, Encode::Guess->add_suspects,
Encode::decode("Guess" ...), Encode::Guess->guess($data),
guess_encoding($data, [, I<list of suspects>])

=item CAVEATS

=item TO DO

=item SEE ALSO

=back

=head2 Encode::lib::Encode::JP::H2Z, Encode::JP::H2Z -- internally used by
Encode::JP::2022_JP*

=head2 Encode::lib::Encode::JP::JIS7, Encode::JP::JIS7 -- internally used
by Encode::JP

=head2 Encode::lib::Encode::KR::2022_KR, Encode::KR::2022_KR -- internally
used by Encode::KR

=head2 Encode::lib::Encode::MIME::Header, Encode::MIME::Header -- MIME 'B'
and 'Q' header encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=back

=head2 Encode::lib::Encode::PerlIO, Encode::PerlIO -- a detailed document
on Encode and PerlIO

=over 4

=item Overview

=item How does it work?

=item Line Buffering

=over 4

=item How can I tell whether my encoding fully supports PerlIO ?

=back

=item SEE ALSO

=back

=head2 Encode::lib::Encode::Supported, Encode::Supported -- Encodings
supported by Encode

=over 4

=item DESCRIPTION

=over 4

=item Encoding Names

=back

=item Supported Encodings

=over 4

=item Built-in Encodings

=item Encode::Unicode -- other Unicode encodings

=item Encode::Byte -- Extended ASCII

ISO-8859 and corresponding vendor mappings, KOI8 - De Facto Standard for
the Cyrillic world, gsm0338 - Hentai Latin 1

=item CJK: Chinese, Japanese, Korean (Multibyte)

Encode::CN -- Continental China, Encode::JP -- Japan, Encode::KR -- Korea,
Encode::TW -- Taiwan, Encode::HanExtra -- More Chinese via CPAN,
Encode::JIS2K -- JIS X 0213 encodings via CPAN

=item Miscellaneous encodings

Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header, Encode::Guess

=back

=item Unsupported encodings

  ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
Various Mac encodings, (Mac) Indic encodings

=item Encoding vs. Charset -- terminology

=item Encoding Classification (by Anton Tagunov and Dan Kogai)

=over 4

=item Microsoft-related naming mess

KS_C_5601-1987, GB2312, Big5, Shift_JIS

=back

=item Glossary

character repertoire, coded character set (CCS), character encoding scheme
(CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2, Unicode, UTF,
UTF-16

=item See Also

=item References

ECMA, ECMA-035 (eq C<ISO-2022>), IANA, Assigned Charset Names by IANA, ISO,
RFC, UC, Unicode Glossary

=over 4

=item Other Notable Sites

czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
"Introduction to i18n"

=item Offline sources

C<CJKV Information Processing> by Ken Lunde

=back

=back

=head2 Encode::lib::Encode::Unicode::UTF7, Encode::Unicode::UTF7 -- UTF-7
encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item In Practice

=item SEE ALSO

=back

=head2 Encode::lib::Encoder, Encode::Encoder -- Object Oriented Encoder

=over 4

=item SYNOPSIS

=item ABSTRACT

=item Description

=over 4

=item Predefined Methods

$e = Encode::Encoder-E<gt>new([$data, $encoding]);, encoder(),
$e-E<gt>data([$data]), $e-E<gt>encoding([$encoding]),
$e-E<gt>bytes([$encoding])

=item Example: base64 transcoder

=item Operator Overloading

=back

=item SEE ALSO

=back

=head2 Encodencoding, encoding - allows you to write your script in
non-ascii or non-utf8

=over 4

=item SYNOPSIS

=item ABSTRACT

=over 4

=item Literal Conversions

=item PerlIO layers for C<STD(IN|OUT)>

=item Implicit upgrading for byte strings

=back

=item FEATURES THAT REQUIRE 5.8.1

"NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle

=item USAGE

use encoding [I<ENCNAME>] ;, use encoding I<ENCNAME> [ STDIN =E<gt>
I<ENCNAME_IN> ...] ;, use encoding I<ENCNAME> Filter=E<gt>1;, no encoding;

=item The Filter Option

=over 4

=item Filter-related changes at Encode version 1.87

=back

=item CAVEATS

=over 4

=item NOT SCOPED

=item DO NOT MIX MULTIPLE ENCODINGS

=item tr/// with ranges

Legend of characters above

=back

=item EXAMPLE - Greekperl

=item KNOWN PROBLEMS

literals in regex that are longer than 127 bytes, EBCDIC, format

=over 4

=item The Logic of :locale

=back

=item HISTORY

=item SEE ALSO

=back

=head2 Encoder, Encode::Encoder -- Object Oriented Encoder

=over 4

=item SYNOPSIS

=item ABSTRACT

=item Description

=over 4

=item Predefined Methods

$e = Encode::Encoder-E<gt>new([$data, $encoding]);, encoder(),
$e-E<gt>data([$data]), $e-E<gt>encoding([$encoding]),
$e-E<gt>bytes([$encoding])

=item Example: base64 transcoder

=item Operator Overloading

=back

=item SEE ALSO

=back

=head2 English - use nice English (or awk) names for ugly punctuation
variables

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item PERFORMANCE

=back

=head2 Env - perl module that imports environment variables as scalars or
arrays

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item LIMITATIONS

=item AUTHOR

=back

=head2 Errno - System errno constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Exporter - Implements default import method for modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item How to Export

=item Selecting What To Export

=item How to Import

C<use ModuleName;>, C<use ModuleName ();>, C<use ModuleName qw(...);>

=back

=item Advanced features

=over 4

=item Specialised Import Lists

=item Exporting without using Exporter's import method

=item Exporting without inheriting from Exporter

=item Module Version Checking

=item Managing Unknown Symbols

=item Tag Handling Utility Functions

=item Generating combined tags

=item C<AUTOLOAD>ed Constants

=back

=back

=head2 Exporter::Heavy - Exporter guts

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::Command - utilities to replace common UNIX commands in
Makefiles etc.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

cat

eqtime

rm_rf

rm_f

touch

mv

cp

chmod

mkpath

test_f

dos2unix

=over 4

=item SEE ALSO 

=item AUTHOR

=back

=head2 ExtUtils::Command::MM - Commands for the MM's to use in Makefiles

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<test_harness>

=back

B<pod2man>

B<warn_if_old_packlist>

B<perllocal_install>

B<uninstall>

=head2 ExtUtils::Constant - generate XS code to import C header constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

IV, UV, NV, PV, PVN, SV, YES, NO, UNDEF

=item FUNCTIONS

=back

constant_types

XS_constant PACKAGE, TYPES, SUBNAME, C_SUBNAME

autoload PACKAGE, VERSION, AUTOLOADER

WriteMakefileSnippet

WriteConstants ATTRIBUTE =E<gt> VALUE [, ...], NAME, DEFAULT_TYPE,
BREAKOUT_AT, NAMES, C_FILE, XS_FILE, SUBNAME, C_SUBNAME

=over 4

=item AUTHOR

=back

=head2 ExtUtils::Constant::Base - base class for ExtUtils::Constant objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=back

header

memEQ_clause args_hashref

dump_names arg_hashref, ITEM..

assign arg_hashref, VALUE..

return_clause arg_hashref, ITEM

switch_clause arg_hashref, NAMELEN, ITEMHASH, ITEM..

params WHAT

dogfood arg_hashref, ITEM..

C_constant arg_hashref, ITEM.., name, type, value, macro, default, pre,
post, def_pre, def_post, utf8, weight

=over 4

=item BUGS

=item AUTHOR

=back

=head2 ExtUtils::Constant::Utils - helper functions for ExtUtils::Constant

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

C_stringify NAME

=back

perl_stringify NAME

=over 4

=item AUTHOR

=back

=head2 ExtUtils::Constant::XS, ExtUtils::Constant::Base - base class for
ExtUtils::Constant objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item @EXPORT

=item FUNCTIONS

xsinit(), Examples, ldopts(), Examples, perl_inc(), ccflags(), ccdlflags(),
ccopts(), xsi_header(), xsi_protos(@modules), xsi_body(@modules)

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=back

=head2 ExtUtils::Install - install files from here to there

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

B<install>

=back

=back

B<install_default> I<DISCOURAGED>

B<uninstall>

B<pm_to_blib>

_autosplit

=over 4

=item ENVIRONMENT

B<PERL_INSTALL_ROOT>

=item AUTHOR

=item LICENSE

=back

=head2 ExtUtils::Installed - Inventory management of installed modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=item FUNCTIONS

new(), modules(), files(), directories(), directory_tree(), validate(),
packlist(), version()

=item EXAMPLE

=item AUTHOR

=back

=head2 ExtUtils::Liblist - determine libraries to use and how to use them

=over 4

=item SYNOPSIS

=item DESCRIPTION

For static extensions, For dynamic extensions at build/link time, For
dynamic extensions at load time

=over 4

=item EXTRALIBS

=item LDLOADLIBS and LD_RUN_PATH

=item BSLOADLIBS

=back

=item PORTABILITY

=over 4

=item VMS implementation

=item Win32 implementation

=back

=item SEE ALSO

=back

=head2 ExtUtils::MM - OS adjusted ExtUtils::MakeMaker subclass

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MM_AIX - AIX specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_Any - Platform-agnostic MM methods

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Cross-platform helper methods

=back

=back

=over 4

=item Targets

=back

=over 4

=item Init methods

=back

=over 4

=item Tools

=back

=over 4

=item File::Spec wrappers

=back

=over 4

=item Misc

=back

=over 4

=item AUTHOR

=back

=head2 ExtUtils::MM_BeOS - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

os_flavor

init_linker

=head2 ExtUtils::MM_Cygwin - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

os_flavor

=back

cflags

replace_manpage_separator

init_linker

=head2 ExtUtils::MM_DOS - DOS specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

os_flavor

=back

=back

B<replace_manpage_separator>

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_MacOS - once produced Makefiles for MacOS Classic

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MM_NW5 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

os_flavor

init_platform, platform_constants

const_cccmd

static_lib

dynamic_lib

=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

init_dist

=back

init_linker

os_flavor

=head2 ExtUtils::MM_QNX - QNX specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_UWIN - U/WIN specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

os_flavor

=back

=back

B<replace_manpage_separator>

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=back

=over 4

=item Methods

os_flavor

=back

c_o (o)

cflags (o)

const_cccmd (o)

const_config (o)

const_loadlibs (o)

constants (o)

depend (o)

init_DEST

init_dist

dist (o)

dist_basics (o)

dist_ci (o)

dist_core (o)

B<dist_target>

B<tardist_target>

B<zipdist_target>

B<tarfile_target>

zipfile_target

uutardist_target

shdist_target

dlsyms (o)

dynamic_bs (o)

dynamic_lib (o)

exescan

extliblist

find_perl

fixin

force (o)

guess_name

has_link_code

init_dirscan

init_DIRFILESEP

init_main

init_others

init_linker

init_lib2arch

init_PERL

init_platform, platform_constants

init_PERM

init_xs

install (o)

installbin (o)

linkext (o)

lsdir

macro (o)

makeaperl (o)

makefile (o)

maybe_command

needs_linking (o)

nicetext

parse_abstract

parse_version

pasthru (o)

perl_script

perldepend (o)

perm_rw (o)

perm_rwx (o)

pm_to_blib

post_constants (o)

post_initialize (o)

postamble (o)

ppd

prefixify

processPL (o)

quote_paren

replace_manpage_separator

cd

oneliner

quote_literal

escape_newlines

max_exec_len

static (o)

static_lib (o)

staticmake (o)

subdir_x (o)

subdirs (o)

test (o)

test_via_harness (override)

test_via_script (override)

tools_other (o)

tool_xsubpp (o)

all_target

top_targets (o)

writedoc

xs_c (o)

xs_cpp (o)

xs_o (o)

=over 4

=item SEE ALSO

=back

=head2 ExtUtils::MM_VMS - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods always loaded

wraplist

=back

=back

=over 4

=item Methods

guess_name (override)

=back

find_perl (override)

maybe_command (override)

pasthru (override)

pm_to_blib (override)

perl_script (override)

replace_manpage_separator

init_DEST

init_DIRFILESEP

init_main (override)

init_others (override)

init_platform (override)

platform_constants

init_VERSION (override)

constants (override)

special_targets

cflags (override)

const_cccmd (override)

tools_other (override)

init_dist (override)

c_o (override)

xs_c (override)

xs_o (override)

dlsyms (override)

dynamic_lib (override)

static_lib (override)

extra_clean_files

zipfile_target, tarfile_target, shdist_target

install (override)

perldepend (override)

makeaperl (override)

nicetext (override)

prefixify (override)

cd

oneliner

B<echo>

quote_literal

escape_newlines

max_exec_len

init_linker

eliminate_macros

fixpath

os_flavor

=over 4

=item AUTHOR

=back

=head2 ExtUtils::MM_VOS - VOS specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_Win32 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item Overridden methods

B<dlsyms>

=back

replace_manpage_separator

B<maybe_command>

B<init_DIRFILESEP>

B<init_others>

init_platform, platform_constants

special_targets

static_lib

dynamic_lib

extra_clean_files

init_linker

perl_script

xs_o

pasthru

oneliner

cd

max_exec_len

os_flavor

=head2 ExtUtils::MM_Win95 - method to customize MakeMaker for Win9X

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overriden methods

xs_c

=back

=back

xs_cpp

xs_o

max_exec_len

os_flavor

=over 4

=item AUTHOR

=back

=head2 ExtUtils::MY - ExtUtils::MakeMaker subclass for customization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker - Create a module Makefile

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item How To Write A Makefile.PL

=item Default Makefile Behaviour

=item make test

=item make testdb

=item make install

=item PREFIX and LIB attribute

=item AFS users

=item Static Linking of a new Perl Binary

=item Determination of Perl Library and Installation Locations

=item Which architecture dependent directory?

=item Using Attributes and Parameters

ABSTRACT, ABSTRACT_FROM, AUTHOR, BINARY_LOCATION, C, CCFLAGS, CONFIG,
CONFIGURE, DEFINE, DESTDIR, DIR, DISTNAME, DISTVNAME, DL_FUNCS, DL_VARS,
EXCLUDE_EXT, EXE_FILES, FIRST_MAKEFILE, FULLPERL, FULLPERLRUN,
FULLPERLRUNINST, FUNCLIST, H, IMPORTS, INC, INCLUDE_EXT, INSTALLARCHLIB,
INSTALLBIN, INSTALLDIRS, INSTALLMAN1DIR, INSTALLMAN3DIR, INSTALLPRIVLIB,
INSTALLSCRIPT, INSTALLSITEARCH, INSTALLSITEBIN, INSTALLSITELIB,
INSTALLSITEMAN1DIR, INSTALLSITEMAN3DIR, INSTALLVENDORARCH,
INSTALLVENDORBIN, INSTALLVENDORLIB, INSTALLVENDORMAN1DIR,
INSTALLVENDORMAN3DIR, INST_ARCHLIB, INST_BIN, INST_LIB, INST_MAN1DIR,
INST_MAN3DIR, INST_SCRIPT, LD, LDDLFLAGS, LDFROM, LIB, LIBPERL_A, LIBS,
LINKTYPE, MAKEAPERL, MAKEFILE_OLD, MAN1PODS, MAN3PODS, MAP_TARGET,
MYEXTLIB, NAME, NEEDS_LINKING, NOECHO, NORECURS, NO_META, NO_VC, OBJECT,
OPTIMIZE, PERL, PERL_CORE, PERLMAINCC, PERL_ARCHLIB, PERL_LIB,
PERL_MALLOC_OK, PERLPREFIX, PERLRUN, PERLRUNINST, PERL_SRC, PERM_RW,
PERM_RWX, PL_FILES, PM, PMLIBDIRS, PM_FILTER, POLLUTE, PPM_INSTALL_EXEC,
PPM_INSTALL_SCRIPT, PREFIX, PREREQ_FATAL, PREREQ_PM, PREREQ_PRINT,
PRINT_PREREQ, SITEPREFIX, SIGN, SKIP, TYPEMAPS, VENDORPREFIX, VERBINST,
VERSION, VERSION_FROM, VERSION_SYM, XS, XSOPT, XSPROTOARG, XS_VERSION

=item Additional lowercase attributes

clean, depend, dist, dynamic_lib, linkext, macro, postamble, realclean,
test, tool_autosplit

=item Overriding MakeMaker Methods

=item The End Of Cargo Cult Programming

C<< MAN3PODS => ' ' >>

=item Hintsfile support

=item Distribution Support

   make distcheck,    make skipcheck,	 make distclean,    make manifest, 
  make distdir,   make disttest,    make tardist,    make dist,    make
uutardist,    make shdist,    make zipdist,    make ci

=item Module Meta-Data

=item Disabling an extension

=item Other Handy Functions

prompt

=back

=item ENVIRONMENT

PERL_MM_OPT, PERL_MM_USE_DEFAULT, PERL_CORE

=item SEE ALSO

=item AUTHORS

=item LICENSE

=back

=head2 ExtUtils::MakeMaker::Config - Wrapper around Config.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker::FAQ - Frequently Asked Questions About
MakeMaker

=over 4

=item DESCRIPTION

=over 4

=item Module Installation

How do I keep from installing man pages?, How do I use a module without
installing it?

=item Philosophy and History

Why not just use <insert other build config tool here>?, What is
Module::Build and how does it relate to MakeMaker?, pure perl.	no make, no
shell commands, easier to customize, cleaner internals, less cruft

=item Module Writing

How do I keep my $VERSION up to date without resetting it manually?, What's
this F<META.yml> thing and how did it get in my F<MANIFEST>?!

=item XS

How to I prevent "object version X.XX does not match bootstrap parameter
Y.YY" errors?, How do I make two or more XS files coexist in the same
directory?

=back

=item PATCHING

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MakeMaker::Tutorial - Writing a module with MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The Mantra

=item The Layout

Makefile.PL, MANIFEST, lib/, t/, Changes, README, INSTALL, MANIFEST.SKIP,
bin/

=back

=item SEE ALSO

=back

=head2 ExtUtils::MakeMaker::bytes - Version-agnostic bytes.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker::vmsish - Platform-agnostic vmsish.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

mkmanifest

=back

=back

manifind

manicheck

filecheck

fullcheck

skipcheck

maniread

manicopy

maniadd

=over 4

=item MANIFEST

=item MANIFEST.SKIP

=item EXPORT_OK

=item GLOBAL VARIABLES

=back

=over 4

=item DIAGNOSTICS

C<Not in MANIFEST:> I<file>, C<Skipping> I<file>, C<No such file:> I<file>,
C<MANIFEST:> I<$!>, C<Added to MANIFEST:> I<file>

=item ENVIRONMENT

B<PERL_MM_MANIFEST_DEBUG>

=item SEE ALSO

=item AUTHOR

=back

=head2 ExtUtils::Miniperl, writemain - write the C code for perlmain.c

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::Mksymlists - write linker options files for dynamic
extension

=over 4

=item SYNOPSIS

=item DESCRIPTION

DLBASE, DL_FUNCS, DL_VARS, FILE, FUNCLIST, IMPORTS, NAME

=item AUTHOR

=item REVISION

=back

=head2 ExtUtils::Packlist - manage .packlist files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=item FUNCTIONS

new(), read(), write(), validate(), packlist_file()

=item EXAMPLE

=item AUTHOR

=back

=head2 ExtUtils::testlib - add blib/* directories to @INC

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Fatal - replace functions with equivalents which succeed or die

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 Fcntl - load the C Fcntl.h defines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item EXPORTED SYMBOLS

=back

=head2 File::Basename - Parse file paths into directory, filename and
suffix.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

C<fileparse>

C<basename>

C<dirname>

C<fileparse_set_fstype>

=over 4

=item SEE ALSO

=back

=head2 File::CheckTree, validate - run many filetest checks on a tree

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item HISTORY

=back

=head2 File::Compare - Compare files or filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item RETURN

=item AUTHOR

=back

=head2 File::Copy - Copy files or filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Special behaviour if C<syscopy> is defined (OS/2, VMS and Win32)

rmscopy($from,$to[,$date_flag])

=back

=item RETURN

=item NOTES

=item AUTHOR

=back

=head2 File::DosGlob - DOS like globbing and then some

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item EXPORTS (by request only)

=item BUGS

=item AUTHOR

=item HISTORY

=item SEE ALSO

=back

=head2 File::Find - Traverse a directory tree.

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<find>, B<finddepth>

=over 4

=item %options

C<wanted>, C<bydepth>, C<preprocess>, C<postprocess>, C<follow>,
C<follow_fast>, C<follow_skip>, C<dangling_symlinks>, C<no_chdir>,
C<untaint>, C<untaint_pattern>, C<untaint_skip>

=item The wanted function

C<$File::Find::dir> is the current directory name,, C<$_> is the current
filename within that directory, C<$File::Find::name> is the complete
pathname to the file

=back

=item WARNINGS

=item CAVEAT

$dont_use_nlink, symlinks

=item NOTES

=item BUGS AND CAVEATS

=item HISTORY

=back

=head2 File::Glob - Perl extension for BSD glob routine

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item META CHARACTERS

=item POSIX FLAGS

C<GLOB_ERR>, C<GLOB_LIMIT>, C<GLOB_MARK>, C<GLOB_NOCASE>, C<GLOB_NOCHECK>,
C<GLOB_NOSORT>, C<GLOB_BRACE>, C<GLOB_NOMAGIC>, C<GLOB_QUOTE>,
C<GLOB_TILDE>, C<GLOB_CSH>, C<GLOB_ALPHASORT>

=back

=item DIAGNOSTICS

C<GLOB_NOSPACE>, C<GLOB_ABEND>

=item NOTES

=item SEE ALSO

=item AUTHOR

=back

=head2 File::Path - create or remove directory trees

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item DIAGNOSTICS

=item AUTHORS

=back

=head2 File::Spec - portably perform operations on file names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath, catdir, catfile, curdir, devnull, rootdir, tmpdir, updir,
no_upwards, case_tolerant, file_name_is_absolute, path, join, splitpath,
splitdir, catpath(), abs2rel, rel2abs()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 File::Spec::Cygwin - methods for Cygwin file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

canonpath

file_name_is_absolute

tmpdir (override)

=over 4

=item COPYRIGHT

=back

=head2 File::Spec::Epoc - methods for Epoc file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

canonpath()

=over 4

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::Functions - portably perform operations on file names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Exports

=back

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::Mac - File::Spec for Mac OS (Classic)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath

=back

catdir()

catfile

curdir

devnull

rootdir

tmpdir

updir

file_name_is_absolute

path

splitpath

splitdir

catpath

abs2rel

rel2abs

=over 4

=item AUTHORS

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::OS2 - methods for OS/2 file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

tmpdir, splitpath

=item COPYRIGHT

=back

=head2 File::Spec::Unix - File::Spec for Unix, base for other File::Spec
modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath()

=back

catdir()

catfile

curdir

devnull

rootdir

tmpdir

updir

no_upwards

case_tolerant

file_name_is_absolute

path

join

splitpath

splitdir

catpath()

abs2rel

rel2abs()

=over 4

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::VMS - methods for VMS file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

canonpath (override)

=back

catdir (override)

catfile (override)

curdir (override)

devnull (override)

rootdir (override)

tmpdir (override)

updir (override)

case_tolerant (override)

path (override)

file_name_is_absolute (override)

splitpath (override)

splitdir (override)

catpath (override)

abs2rel (override)

rel2abs (override)

=over 4

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::Win32 - methods for Win32 file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

devnull

=back

tmpdir

catfile

canonpath

splitpath

splitdir

catpath

=over 4

=item Note For File::Spec::Win32 Maintainers

=back

=over 4

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Temp - return name and handle of a temporary file safely

=over 4

=item PORTABILITY

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item OBJECT-ORIENTED INTERFACE

B<new>

=back

B<filename>

B<unlink_on_destroy>

B<DESTROY>

=over 4

=item FUNCTIONS

B<tempfile>

=back

B<tempdir>

=over 4

=item MKTEMP FUNCTIONS

B<mkstemp>

=back

B<mkstemps>

B<mkdtemp>

B<mktemp>

=over 4

=item POSIX FUNCTIONS

B<tmpnam>

=back

B<tmpfile>

=over 4

=item ADDITIONAL FUNCTIONS

B<tempnam>

=back

=over 4

=item UTILITY FUNCTIONS

B<unlink0>

=back

B<cmpstat>

B<unlink1>

B<cleanup>

=over 4

=item PACKAGE VARIABLES

B<safe_level>, STANDARD, MEDIUM, HIGH

=back

TopSystemUID

B<$KEEP_ALL>, B<$DEBUG>

=over 4

=item WARNING

=over 4

=item Temporary files and NFS

=item Forking

=item BINMODE

=back

=item HISTORY

=item SEE ALSO

=item AUTHOR

=back

=head2 File::stat - by-name interface to Perl's built-in stat() functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item NOTE

=item AUTHOR

=back

=head2 FileCache - keep more files open than the system permits

=over 4

=item SYNOPSIS

=item DESCRIPTION

cacheout EXPR, cacheout MODE, EXPR

=item CAVEATS

=item BUGS

=back

=head2 FileHandle - supply object methods for filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

$fh->print, $fh->printf, $fh->getline, $fh->getlines

=item SEE ALSO

=back

=head2 Filter::Simple - Simplified source filtering

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The Problem

=item A Solution

=item Disabling or changing <no> behaviour

=item All-in-one interface

=item Filtering only specific components of source code

C<"code">, C<"code_no_comments">, C<"executable">,
C<"executable_no_comments">, C<"quotelike">, C<"string">, C<"regex">,
C<"all">

=item Filtering only the code parts of source code

Most source code ceases to be grammatically correct when it is broken up
into the pieces between string literals and regexes. So the C<'code'>
and C<'code_no_comments'> component filter behave slightly differently
from the other partial filters described in the previous section.

=item Using Filter::Simple with an explicit C<import> subroutine

=item Using Filter::Simple and Exporter together

=item How it works

=back

=item AUTHOR

=item COPYRIGHT

=back

=head2 Filter::Util::Call - Perl Source Filter Utility Module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item B<use Filter::Util::Call>

=item B<import()>

=item B<filter() and anonymous sub>

B<$_>, B<$status>, B<filter_read> and B<filter_read_exact>, B<filter_del>

=back

=item EXAMPLES

=over 4

=item Example 1: A simple filter.

=item Example 2: Using the context

=item Example 3: Using the context within the filter

=item Example 4: Using filter_del

=back

=item Filter::Simple

=item AUTHOR

=item DATE

=back

=head2 FindBin - Locate directory of original perl script

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTABLE VARIABLES

=item KNOWN ISSUES

=item KNOWN BUGS

=item AUTHORS

=item COPYRIGHT

=back

=head2 GDBM_File - Perl5 access to the gdbm library.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AVAILABILITY

=item BUGS

=item SEE ALSO

=back

=head2 Getopt::Long - Extended processing of command line options

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Command Line Options, an Introduction

=item Getting Started with Getopt::Long

=over 4

=item Simple options

=item A little bit less simple options

=item Mixing command line option with other arguments

=item Options with values

=item Options with multiple values

=item Options with hash values

=item User-defined subroutines to handle options

=item Options with multiple names

=item Case and abbreviations

=item Summary of Option Specifications

!, +, s, i, o, f, : I<type> [ I<desttype> ], : I<number> [ I<desttype> ], :
+ [ I<desttype> ]

=back

=item Advanced Possibilities

=over 4

=item Object oriented interface

=item Thread Safety

=item Documentation and help texts

=item Storing option values in a hash

=item Bundling

=item The lonesome dash

=item Argument callback

=back

=item Configuring Getopt::Long

default, posix_default, auto_abbrev, getopt_compat, gnu_compat, gnu_getopt,
require_order, permute, bundling (default: disabled), bundling_override
(default: disabled), ignore_case  (default: enabled), ignore_case_always
(default: disabled), auto_version (default:disabled), auto_help
(default:disabled), pass_through (default: disabled), prefix,
prefix_pattern, long_prefix_pattern, debug (default: disabled)

=item Exportable Methods

VersionMessage, C<-message>, C<-msg>, C<-exitval>, C<-output>, HelpMessage

=item Return values and Errors

=item Legacy

=over 4

=item Default destinations

=item Alternative option starters

=item Configuration variables

=back

=item Trouble Shooting

=over 4

=item GetOptions does not return a false result when an option is not
supplied

=item GetOptions does not split the command line correctly

=item Undefined subroutine &main::GetOptions called

=item How do I put a "-?" option into a Getopt::Long?

=back

=item AUTHOR

=item COPYRIGHT AND DISCLAIMER

=back

=head2 Getopt::Std, getopt, getopts - Process single-character switches
with switch clustering

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item C<--help> and C<--version>

=back

=head2 Hash::Util - A selection of general-utility hash subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Restricted hashes

lock_keys, unlock_keys

=back

=back

lock_value, unlock_value

B<lock_hash>, B<unlock_hash>

B<hash_seed>

=over 4

=item CAVEATS

=item AUTHOR

=item SEE ALSO

=back

=head2 I18N::Collate - compare 8-bit scalar data according to the current
locale

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 I18N::LangTags - functions for dealing with RFC3066-style language
tags

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

the function is_language_tag($lang1)

the function extract_language_tags($whatever)

the function same_language_tag($lang1, $lang2)

the function similarity_language_tag($lang1, $lang2)

the function is_dialect_of($lang1, $lang2)

the function super_languages($lang1)

the function locale2language_tag($locale_identifier)

the function encode_language_tag($lang1)

the function alternate_language_tags($lang1)

the function @langs = panic_languages(@accept_languages)

the function implicate_supers( ...languages... ), the function
implicate_supers_strictly( ...languages... )

=over 4

=item ABOUT LOWERCASING

=item ABOUT UNICODE PLAINTEXT LANGUAGE TAGS

=item SEE ALSO

=item COPYRIGHT

=item AUTHOR

=back

=head2 I18N::LangTags::Detect - detect the user's language preferences

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=item ENVIRONMENT

=item SEE ALSO

=item COPYRIGHT

=item AUTHOR

=back

=head2 I18N::LangTags::List -- tags and names for human languages

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ABOUT LANGUAGE TAGS

=item LIST OF LANGUAGES

{ab} : Abkhazian, {ace} : Achinese, {ach} : Acoli, {ada} : Adangme, {ady} :
Adyghe, {aa} : Afar, {afh} : Afrihili, {af} : Afrikaans, [{afa} :
Afro-Asiatic (Other)], {ak} : Akan, {akk} : Akkadian, {sq} : Albanian,
{ale} : Aleut, [{alg} : Algonquian languages], [{tut} : Altaic (Other)],
{am} : Amharic, {i-ami} : Ami, [{apa} : Apache languages], {ar} : Arabic,
{arc} : Aramaic, {arp} : Arapaho, {arn} : Araucanian, {arw} : Arawak, {hy}
: Armenian, {an} : Aragonese, [{art} : Artificial (Other)], {ast} :
Asturian, {as} : Assamese, [{ath} : Athapascan languages], [{aus} :
Australian languages], [{map} : Austronesian (Other)], {av} : Avaric, {ae}
: Avestan, {awa} : Awadhi, {ay} : Aymara, {az} : Azerbaijani, {ban} :
Balinese, [{bat} : Baltic (Other)], {bal} : Baluchi, {bm} : Bambara, [{bai}
: Bamileke languages], {bad} : Banda, [{bnt} : Bantu (Other)], {bas} :
Basa, {ba} : Bashkir, {eu} : Basque, {btk} : Batak (Indonesia), {bej} :
Beja, {be} : Belarusian, {bem} : Bemba, {bn} : Bengali, [{ber} : Berber
(Other)], {bho} : Bhojpuri, {bh} : Bihari, {bik} : Bikol, {bin} : Bini,
{bi} : Bislama, {bs} : Bosnian, {bra} : Braj, {br} : Breton, {bug} :
Buginese, {bg} : Bulgarian, {i-bnn} : Bunun, {bua} : Buriat, {my} :
Burmese, {cad} : Caddo, {car} : Carib, {ca} : Catalan, [{cau} : Caucasian
(Other)], {ceb} : Cebuano, [{cel} : Celtic (Other)], [{cai} : Central
American Indian (Other)], {chg} : Chagatai, [{cmc} : Chamic languages],
{ch} : Chamorro, {ce} : Chechen, {chr} : Cherokee, {chy} : Cheyenne, {chb}
: Chibcha, {ny} : Chichewa, {zh} : Chinese, {chn} : Chinook Jargon, {chp} :
Chipewyan, {cho} : Choctaw, {cu} : Church Slavic, {chk} : Chuukese, {cv} :
Chuvash, {cop} : Coptic, {kw} : Cornish, {co} : Corsican, {cr} : Cree,
{mus} : Creek, [{cpe} : English-based Creoles and pidgins (Other)], [{cpf}
: French-based Creoles and pidgins (Other)], [{cpp} : Portuguese-based
Creoles and pidgins (Other)], [{crp} : Creoles and pidgins (Other)], {hr} :
Croatian, [{cus} : Cushitic (Other)], {cs} : Czech, {dak} : Dakota, {da} :
Danish, {dar} : Dargwa, {day} : Dayak, {i-default} : Default (Fallthru)
Language, {del} : Delaware, {din} : Dinka, {dv} : Divehi, {doi} : Dogri,
{dgr} : Dogrib, [{dra} : Dravidian (Other)], {dua} : Duala, {nl} : Dutch,
{dum} : Middle Dutch (ca.1050-1350), {dyu} : Dyula, {dz} : Dzongkha, {efi}
: Efik, {egy} : Ancient Egyptian, {eka} : Ekajuk, {elx} : Elamite, {en} :
English, {enm} : Old English (1100-1500), {ang} : Old English
(ca.450-1100), {i-enochian} : Enochian (Artificial), {myv} : Erzya, {eo} :
Esperanto, {et} : Estonian, {ee} : Ewe, {ewo} : Ewondo, {fan} : Fang, {fat}
: Fanti, {fo} : Faroese, {fj} : Fijian, {fi} : Finnish, [{fiu} :
Finno-Ugrian (Other)], {fon} : Fon, {fr} : French, {frm} : Middle French
(ca.1400-1600), {fro} : Old French (842-ca.1400), {fy} : Frisian, {fur} :
Friulian, {ff} : Fulah, {gaa} : Ga, {gd} : Scots Gaelic, {gl} : Gallegan,
{lg} : Ganda, {gay} : Gayo, {gba} : Gbaya, {gez} : Geez, {ka} : Georgian,
{de} : German, {gmh} : Middle High German (ca.1050-1500), {goh} : Old High
German (ca.750-1050), [{gem} : Germanic (Other)], {gil} : Gilbertese, {gon}
: Gondi, {gor} : Gorontalo, {got} : Gothic, {grb} : Grebo, {grc} : Ancient
Greek, {el} : Modern Greek, {gn} : Guarani, {gu} : Gujarati, {gwi} :
Gwich'in, {hai} : Haida, {ht} : Haitian, {ha} : Hausa, {haw} : Hawaiian,
{he} : Hebrew, {hz} : Herero, {hil} : Hiligaynon, {him} : Himachali, {hi} :
Hindi, {ho} : Hiri Motu, {hit} : Hittite, {hmn} : Hmong, {hu} : Hungarian,
{hup} : Hupa, {iba} : Iban, {is} : Icelandic, {io} : Ido, {ig} : Igbo,
{ijo} : Ijo, {ilo} : Iloko, [{inc} : Indic (Other)], [{ine} : Indo-European
(Other)], {id} : Indonesian, {inh} : Ingush, {ia} : Interlingua
(International Auxiliary Language Association), {ie} : Interlingue, {iu} :
Inuktitut, {ik} : Inupiaq, [{ira} : Iranian (Other)], {ga} : Irish, {mga} :
Middle Irish (900-1200), {sga} : Old Irish (to 900), [{iro} : Iroquoian
languages], {it} : Italian, {ja} : Japanese, {jv} : Javanese, {jrb} :
Judeo-Arabic, {jpr} : Judeo-Persian, {kbd} : Kabardian, {kab} : Kabyle,
{kac} : Kachin, {kl} : Kalaallisut, {xal} : Kalmyk, {kam} : Kamba, {kn} :
Kannada, {kr} : Kanuri, {krc} : Karachay-Balkar, {kaa} : Kara-Kalpak, {kar}
: Karen, {ks} : Kashmiri, {csb} : Kashubian, {kaw} : Kawi, {kk} : Kazakh,
{kha} : Khasi, {km} : Khmer, [{khi} : Khoisan (Other)], {kho} : Khotanese,
{ki} : Kikuyu, {kmb} : Kimbundu, {rw} : Kinyarwanda, {ky} : Kirghiz,
{i-klingon} : Klingon, {kv} : Komi, {kg} : Kongo, {kok} : Konkani, {ko} :
Korean, {kos} : Kosraean, {kpe} : Kpelle, {kro} : Kru, {kj} : Kuanyama,
{kum} : Kumyk, {ku} : Kurdish, {kru} : Kurukh, {kut} : Kutenai, {lad} :
Ladino, {lah} : Lahnda, {lam} : Lamba, {lo} : Lao, {la} : Latin, {lv} :
Latvian, {lb} : Letzeburgesch, {lez} : Lezghian, {li} : Limburgish, {ln} :
Lingala, {lt} : Lithuanian, {nds} : Low German, {art-lojban} : Lojban
(Artificial), {loz} : Lozi, {lu} : Luba-Katanga, {lua} : Luba-Lulua, {lui}
: Luiseno, {lun} : Lunda, {luo} : Luo (Kenya and Tanzania), {lus} : Lushai,
{mk} : Macedonian, {mad} : Madurese, {mag} : Magahi, {mai} : Maithili,
{mak} : Makasar, {mg} : Malagasy, {ms} : Malay, {ml} : Malayalam, {mt} :
Maltese, {mnc} : Manchu, {mdr} : Mandar, {man} : Mandingo, {mni} :
Manipuri, [{mno} : Manobo languages], {gv} : Manx, {mi} : Maori, {mr} :
Marathi, {chm} : Mari, {mh} : Marshall, {mwr} : Marwari, {mas} : Masai,
[{myn} : Mayan languages], {men} : Mende, {mic} : Micmac, {min} :
Minangkabau, {i-mingo} : Mingo, [{mis} : Miscellaneous languages], {moh} :
Mohawk, {mdf} : Moksha, {mo} : Moldavian, [{mkh} : Mon-Khmer (Other)],
{lol} : Mongo, {mn} : Mongolian, {mos} : Mossi, [{mul} : Multiple
languages], [{mun} : Munda languages], {nah} : Nahuatl, {nap} : Neapolitan,
{na} : Nauru, {nv} : Navajo, {nd} : North Ndebele, {nr} : South Ndebele,
{ng} : Ndonga, {ne} : Nepali, {new} : Newari, {nia} : Nias, [{nic} :
Niger-Kordofanian (Other)], [{ssa} : Nilo-Saharan (Other)], {niu} : Niuean,
{nog} : Nogai, {non} : Old Norse, [{nai} : North American Indian], {no} :
Norwegian, {nb} : Norwegian Bokmal, {nn} : Norwegian Nynorsk, [{nub} :
Nubian languages], {nym} : Nyamwezi, {nyn} : Nyankole, {nyo} : Nyoro, {nzi}
: Nzima, {oc} : Occitan (post 1500), {oj} : Ojibwa, {or} : Oriya, {om} :
Oromo, {osa} : Osage, {os} : Ossetian; Ossetic, [{oto} : Otomian
languages], {pal} : Pahlavi, {i-pwn} : Paiwan, {pau} : Palauan, {pi} :
Pali, {pam} : Pampanga, {pag} : Pangasinan, {pa} : Panjabi, {pap} :
Papiamento, [{paa} : Papuan (Other)], {fa} : Persian, {peo} : Old Persian
(ca.600-400 B.C.), [{phi} : Philippine (Other)], {phn} : Phoenician, {pon}
: Pohnpeian, {pl} : Polish, {pt} : Portuguese, [{pra} : Prakrit languages],
{pro} : Old Provencal (to 1500), {ps} : Pushto, {qu} : Quechua, {rm} :
Raeto-Romance, {raj} : Rajasthani, {rap} : Rapanui, {rar} : Rarotongan,
[{qaa - qtz} : Reserved for local use.], [{roa} : Romance (Other)], {ro} :
Romanian, {rom} : Romany, {rn} : Rundi, {ru} : Russian, [{sal} : Salishan
languages], {sam} : Samaritan Aramaic, {se} : Northern Sami, {sma} :
Southern Sami, {smn} : Inari Sami, {smj} : Lule Sami, {sms} : Skolt Sami,
[{smi} : Sami languages (Other)], {sm} : Samoan, {sad} : Sandawe, {sg} :
Sango, {sa} : Sanskrit, {sat} : Santali, {sc} : Sardinian, {sas} : Sasak,
{sco} : Scots, {sel} : Selkup, [{sem} : Semitic (Other)], {sr} : Serbian,
{srr} : Serer, {shn} : Shan, {sn} : Shona, {sid} : Sidamo, {sgn-...} : Sign
Languages, {bla} : Siksika, {sd} : Sindhi, {si} : Sinhalese, [{sit} :
Sino-Tibetan (Other)], [{sio} : Siouan languages], {den} : Slave
(Athapascan), [{sla} : Slavic (Other)], {sk} : Slovak, {sl} : Slovenian,
{sog} : Sogdian, {so} : Somali, {son} : Songhai, {snk} : Soninke, {wen} :
Sorbian languages, {nso} : Northern Sotho, {st} : Southern Sotho, [{sai} :
South American Indian (Other)], {es} : Spanish, {suk} : Sukuma, {sux} :
Sumerian, {su} : Sundanese, {sus} : Susu, {sw} : Swahili, {ss} : Swati,
{sv} : Swedish, {syr} : Syriac, {tl} : Tagalog, {ty} : Tahitian, [{tai} :
Tai (Other)], {tg} : Tajik, {tmh} : Tamashek, {ta} : Tamil, {i-tao} : Tao,
{tt} : Tatar, {i-tay} : Tayal, {te} : Telugu, {ter} : Tereno, {tet} :
Tetum, {th} : Thai, {bo} : Tibetan, {tig} : Tigre, {ti} : Tigrinya, {tem} :
Timne, {tiv} : Tiv, {tli} : Tlingit, {tpi} : Tok Pisin, {tkl} : Tokelau,
{tog} : Tonga (Nyasa), {to} : Tonga (Tonga Islands), {tsi} : Tsimshian,
{ts} : Tsonga, {i-tsu} : Tsou, {tn} : Tswana, {tum} : Tumbuka, [{tup} :
Tupi languages], {tr} : Turkish, {ota} : Ottoman Turkish (1500-1928), {crh}
: Crimean Turkish, {tk} : Turkmen, {tvl} : Tuvalu, {tyv} : Tuvinian, {tw} :
Twi, {udm} : Udmurt, {uga} : Ugaritic, {ug} : Uighur, {uk} : Ukrainian,
{umb} : Umbundu, {und} : Undetermined, {ur} : Urdu, {uz} : Uzbek, {vai} :
Vai, {ve} : Venda, {vi} : Vietnamese, {vo} : Volapuk, {vot} : Votic, [{wak}
: Wakashan languages], {wa} : Walloon, {wal} : Walamo, {war} : Waray, {was}
: Washo, {cy} : Welsh, {wo} : Wolof, {x-...} : Unregistered (Semi-Private
Use), {xh} : Xhosa, {sah} : Yakut, {yao} : Yao, {yap} : Yapese, {ii} :
Sichuan Yi, {yi} : Yiddish, {yo} : Yoruba, [{ypk} : Yupik languages], {znd}
: Zande, [{zap} : Zapotec], {zen} : Zenaga, {za} : Zhuang, {zu} : Zulu,
{zun} : Zuni

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMER

=item AUTHOR

=back

=head2 I18N::Langinfo - query locale information

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item EXPORT

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 IO - load various IO modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item DEPRECATED

=back

=head2 IO::Dir - supply object methods for directory handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::File - supply object methods for filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

=item METHODS

open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ), binmode(
[LAYER] )

=item NOTE

=item SEE ALSO

=item HISTORY

=back

=head2 IO::Handle - supply object methods for I/O handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new (), new_from_fd ( FD, MODE )

=item METHODS

$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint

=item NOTE

=item SEE ALSO

=item BUGS

=item HISTORY

=back

=head2 IO::Pipe - supply object methods for pipes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Poll - Object interface to system poll call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Seekable - supply seek based methods for I/O objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

$io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell

=item SEE ALSO

=item HISTORY

=back

=head2 IO::Select - OO interface to the select system call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HANDLES ] )

=item METHODS

add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, EXCEPTION [, TIMEOUT ] )

=item EXAMPLE

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket - Object interface to socket communications

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark, connected,
protocol, sockdomain, sockopt(OPT [, VAL]), socktype, timeout([VAL])

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket::INET - Object interface for AF_INET domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=over 4

=item METHODS

sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket::UNIX - Object interface for AF_UNIX domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

hostpath(), peerpath()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Dir, IO::Dir - supply object methods for directory
handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::File, IO::File - supply object methods for filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

=item METHODS

open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ), binmode(
[LAYER] )

=item NOTE

=item SEE ALSO

=item HISTORY

=back

=head2 IO::lib::IO::Handle, IO::Handle - supply object methods for I/O
handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new (), new_from_fd ( FD, MODE )

=item METHODS

$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint

=item NOTE

=item SEE ALSO

=item BUGS

=item HISTORY

=back

=head2 IO::lib::IO::Pipe, IO::Pipe - supply object methods for pipes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Poll, IO::Poll - Object interface to system poll call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for
I/O objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

$io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell

=item SEE ALSO

=item HISTORY

=back

=head2 IO::lib::IO::Select, IO::Select - OO interface to the select system
call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HANDLES ] )

=item METHODS

add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, EXCEPTION [, TIMEOUT ] )

=item EXAMPLE

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket, IO::Socket - Object interface to socket
communications

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark, connected,
protocol, sockdomain, sockopt(OPT [, VAL]), socktype, timeout([VAL])

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket::INET, IO::Socket::INET - Object interface for
AF_INET domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=over 4

=item METHODS

sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket::UNIX, IO::Socket::UNIX - Object interface for
AF_UNIX domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

hostpath(), peerpath()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::Msg - SysV Msg IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::Open2, open2 - open a process for both reading and writing

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item WARNING 

=item SEE ALSO

=back

=head2 IPC::Open3, open3 - open a process for reading, writing, and error
handling

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item WARNING

=back

=head2 IPC::Semaphore - SysV Semaphore IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::SysV - SysV IPC constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

ftok( PATH, ID )

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 IPC::SysV::Msg, IPC::Msg - SysV Msg IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::SysV::Semaphore, IPC::Semaphore - SysV Semaphore IPC object
class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 List::Util - A selection of general-utility list subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST, reduce
BLOCK LIST, shuffle LIST, sum LIST

=item KNOWN BUGS

=item SUGGESTED ADDITIONS

=item COPYRIGHT

=back

=head2 List::Utilib::List::Util, List::Util - A selection of
general-utility list subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST, reduce
BLOCK LIST, shuffle LIST, sum LIST

=item KNOWN BUGS

=item SUGGESTED ADDITIONS

=item COPYRIGHT

=back

=head2 List::Utilib::Scalar::Util, Scalar::Util - A selection of
general-utility scalar subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

blessed EXPR, dualvar NUM, STRING, isvstring EXPR, isweak EXPR,
looks_like_number EXPR, openhandle FH, refaddr EXPR, reftype EXPR,
set_prototype CODEREF, PROTOTYPE, tainted EXPR, weaken REF

=item KNOWN BUGS

=item COPYRIGHT

=item BLATANT PLUG

=back

=head2 Locale::Constants - constants for Locale codes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Language, Locale::Country, Locale::Script, Locale::Currency

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Country - ISO codes for country identification (ISO 3166)

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<alpha-2>, B<alpha-3>, B<numeric>

=item CONVERSION ROUTINES

code2country( CODE, [ CODESET ] ), country2code( STRING, [ CODESET ] ),
country_code2code( CODE, CODESET, CODESET )

=item QUERY ROUTINES

C<all_country_codes( [ CODESET ] )>, C<all_country_names( [ CODESET ] )>

=item SEMI-PRIVATE ROUTINES

=over 4

=item alias_code

=item rename_country

=back

=item EXAMPLES

=item DOMAIN NAMES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Language, Locale::Script, Locale::Currency, Locale::SubCountry, ISO
3166-1, http://www.iso.org/iso/en/prods-services/iso3166ma/index.html,
http://www.egt.ie/standards/iso3166/iso3166-1-en.html,
http://www.cia.gov/cia/publications/factbook/docs/app-d-1.html

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Currency - ISO three letter codes for currency
identification (ISO 4217)

=over 4

=item SYNOPSIS

=item DESCRIPTION

XTS, XXX

=item CONVERSION ROUTINES

code2currency(), currency2code()

=item QUERY ROUTINES

C<all_currency_codes()>, C<all_currency_names()>

=item EXAMPLES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Country, Locale::Script, ISO 4217:1995,
http://www.bsi-global.com/iso4217currency

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Language - ISO two letter codes for language identification
(ISO 639)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONVERSION ROUTINES

code2language(), language2code()

=item QUERY ROUTINES

C<all_language_codes()>, C<all_language_names()>

=item EXAMPLES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Country, Locale::Script, Locale::Currency, ISO 639:1988 (E/F),
http://lcweb.loc.gov/standards/iso639-2/langhome.html

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Maketext - framework for localization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item QUICK OVERVIEW

=item METHODS

=over 4

=item Construction Methods

=item The "maketext" Method

$lh->fail_with I<or> $lh->fail_with(I<PARAM>), $lh->failure_handler_auto

=item Utility Methods

$language->quant($number, $singular), $language->quant($number, $singular,
$plural), $language->quant($number, $singular, $plural, $negative),
$language->numf($number), $language->sprintf($format, @items),
$language->language_tag(), $language->encoding()

=item Language Handle Attributes and Internals

=back

=item LANGUAGE CLASS HIERARCHIES

=item ENTRIES IN EACH LEXICON

=item BRACKET NOTATION

=item AUTO LEXICONS

=item CONTROLLING LOOKUP FAILURE

=item HOW TO USE MAKETEXT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMER

=item AUTHOR

=back

=head2 Locale::Maketext::TPJ13 -- article about software localization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Localization and Perl: gettext breaks, Maketext fixes

=over 4

=item A Localization Horror Story: It Could Happen To You

=item The Linguistic View

=item Breaking gettext

=item Replacing gettext

=item Buzzwords: Abstraction and Encapsulation

=item Buzzword: Isomorphism

=item Buzzword: Inheritance

=item Buzzword: Concision

=item The Devil in the Details

=item The Proof in the Pudding: Localizing Web Sites

=item References

=back

=back

=head2 Locale::Script - ISO codes for script identification (ISO 15924)

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<alpha-2>, B<alpha-3>, B<numeric>

=over 4

=item SPECIAL CODES

=back

=item CONVERSION ROUTINES

code2script( CODE, [ CODESET ] ), script2code( STRING, [ CODESET ] ),
script_code2code( CODE, CODESET, CODESET )

=item QUERY ROUTINES

C<all_script_codes ( [ CODESET ] )>, C<all_script_names ( [ CODESET ] )>

=item EXAMPLES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Language, Locale::Currency, Locale::Country, ISO 15924,
http://www.evertype.com/standards/iso15924/

=item AUTHOR

=item COPYRIGHT

=back

=head2 MIME::Base64 - Encoding and decoding of base64 strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_base64($str), encode_base64($str, $eol);, decode_base64($str)

=item DIAGNOSTICS

Premature end of base64 data, Premature padding of base64 data, Wide
character in subroutine entry

=item EXAMPLES

=item COPYRIGHT

=item SEE ALSO

=back

=head2 MIME::Base64::QuotedPrint, MIME::QuotedPrint - Encoding and decoding
of quoted-printable strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol, $binmode),
decode_qp($str);

=item COPYRIGHT

=item SEE ALSO

=back

=head2 MIME::QuotedPrint - Encoding and decoding of quoted-printable
strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol, $binmode),
decode_qp($str);

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Math::BigFloat - Arbitrary size floating point math package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Canonical notation

=item Output

=item C<mantissa()>, C<exponent()> and C<parts()>

=item Accuracy vs. Precision

=item Rounding

ffround ( +$scale ), ffround ( -$scale ), ffround ( 0 ), fround  ( +$scale
), fround  ( -$scale ) and fround ( 0 )

=back

=item METHODS

=over 4

=item accuracy

=item precision()

=back

=item Autocreating constants

=over 4

=item Math library

=item Using Math::BigInt::Lite

=back

=item BUGS

=item CAVEATS

stringify, bstr(), bdiv, Modifying and =, bpow, precision() vs. accuracy()

=item SEE ALSO

=item LICENSE

=item AUTHORS

=back

=head2 Math::BigInt - Arbitrary size integer/float math package

=over 4

=item SYNOPSIS

=item DESCRIPTION

Input, Output

=item METHODS

=over 4

=item config

=item accuracy

=item precision

=item brsft

=item new

=item bnan

=item bzero

=item binf

=item bone

=item is_one()/is_zero()/is_nan()/is_inf()

=item is_pos()/is_neg()

	$x->is_pos();			# true if > 0
	$x->is_neg();			# true if < 0

=item is_odd()/is_even()/is_int()

=item bcmp

=item bacmp

=item sign

=item digit

=item bneg

=item babs

=item bnorm

=item bnot

=item binc

=item bdec

=item badd

=item bsub

=item bmul

=item bdiv

=item bmod

=item bmodinv

=item bmodpow

=item bpow

=item blsft

=item brsft

=item band

=item bior

=item bxor

=item bnot

=item bsqrt

=item bfac

=item round

=item bround

=item bfround

=item bfloor

=item bceil

=item bgcd

=item blcm

=item exponent

=item mantissa

=item parts

=item copy

=item as_int

=item bsstr

=item as_hex

=item as_bin

=back

=item ACCURACY and PRECISION

=over 4

=item Precision P

=item Accuracy A

=item Fallback F

=item Rounding mode R

'trunc', 'even', 'odd', '+inf', '-inf', 'zero', Precision, Accuracy
(significant digits), Setting/Accessing, Creating numbers, Usage,
Precedence, Overriding globals, Local settings, Rounding, Default values,
Remarks

=back

=item Infinity and Not a Number

oct()/hex(), log(-inf), exp(), cos(), sin(), atan2()

=item INTERNALS

=over 4

=item MATH LIBRARY

=item SIGN

=item mantissa(), exponent() and parts()

=back

=item EXAMPLES

  use Math::BigInt;

=item Autocreating constants

=item PERFORMANCE

=over 4

=item Alternative math libraries

=item SUBCLASSING

=back

=item Subclassing Math::BigInt

=item UPGRADING

=over 4

=item Auto-upgrade

bsqrt(), div(), blog()

=back

=item BUGS

broot() does not work, Out of Memory!, Fails to load Calc on Perl prior
5.6.0

=item CAVEATS

bstr(), bsstr() and 'cmp', int(), length, bdiv, infinity handling,
Modifying and =, bpow, Overloading -$x, Mixing different object types,
bsqrt(), brsft()

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 Math::BigInt::Calc - Pure Perl module to support Math::BigInt

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item STORAGE

=item METHODS

=item WRAP YOUR OWN

=item LICENSE

This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 

=item AUTHORS

=item SEE ALSO

=back

=head2 Math::BigInt::CalcEmu - Emulate low-level math with BigInt code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item __emu_bxor

=item __emu_band

=item __emu_bior

=back

=item LICENSE

This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 

=item AUTHORS

=item SEE ALSO

=back

=head2 Math::BigRat - Arbitrary big rational numbers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item MATH LIBRARY

=back

=item METHODS

=over 4

=item new()

=item numerator()

=item denominator()

	$d = $x->denominator();

=item parts()

=item as_int()

=item as_hex()

=item as_bin()

=item bfac()

=item blog()

=item bround()/round()/bfround()

=item bmod()

=item is_one()

=item is_zero()

=item is_pos()

=item is_neg()

=item is_int()

=item is_odd()

=item is_even()

=item bceil()

=item bfloor()

	$x->bfloor();

=item bsqrt()

	$x->bsqrt();

=item config

=back

=item BUGS

inf handling (partial), NaN handling (partial), rounding (not implemented
except for bceil/bfloor), $x ** $y where $y is not an integer, bmod(),
blog(), bmodinv() and bmodpow() (partial)

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 Math::Complex - complex numbers and associated mathematical
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPERATIONS

=item CREATION

=item DISPLAYING

=over 4

=item CHANGED IN PERL 5.6

=back

=item USAGE

=item ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO

=item ERRORS DUE TO INDIGESTIBLE ARGUMENTS

=item BUGS

=item AUTHORS

=back

=head2 Math::Trig - trigonometric functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item TRIGONOMETRIC FUNCTIONS

B<tan>

=over 4

=item ERRORS DUE TO DIVISION BY ZERO

=item SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS

=back

=item PLANE ANGLE CONVERSIONS

=item RADIAL COORDINATE CONVERSIONS

=over 4

=item COORDINATE SYSTEMS

=item 3-D ANGLE CONVERSIONS

cartesian_to_cylindrical, cartesian_to_spherical, cylindrical_to_cartesian,
cylindrical_to_spherical, spherical_to_cartesian, spherical_to_cylindrical

=back

=item GREAT CIRCLE DISTANCES AND DIRECTIONS

=item EXAMPLES

=over 4

=item CAVEAT FOR GREAT CIRCLE FORMULAS

=back

=item BUGS

=item AUTHORS

=back

=head2 Memoize - Make functions faster by trading space for time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item DETAILS

=item OPTIONS

=over 4

=item INSTALL

=item NORMALIZER

=item C<SCALAR_CACHE>, C<LIST_CACHE>

C<MEMORY>, C<HASH>, C<TIE>, C<FAULT>, C<MERGE>

=back

=item OTHER FACILITIES

=over 4

=item C<unmemoize>

=item C<flush_cache>

=back

=item CAVEATS

=item PERSISTENT CACHE SUPPORT

=item EXPIRATION SUPPORT

=item BUGS

=item MAILING LIST

=item AUTHOR

=item COPYRIGHT AND LICENSE

=item THANK YOU

=back

=head2 Memoize::AnyDBM_File - glue to provide EXISTS for AnyDBM_File for
Storable use

=over 4

=item DESCRIPTION

=back

=head2 Memoize::Expire - Plug-in module for automatic expiration of
memoized values

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item INTERFACE

 TIEHASH,  EXISTS,  STORE

=item ALTERNATIVES

=item CAVEATS

=item AUTHOR

=item SEE ALSO

=back

=head2 Memoize::ExpireFile - test for Memoize expiration semantics

=over 4

=item DESCRIPTION

=back

=head2 Memoize::ExpireTest - test for Memoize expiration semantics

=over 4

=item DESCRIPTION

=back

=head2 Memoize::NDBM_File - glue to provide EXISTS for NDBM_File for
Storable use

=over 4

=item DESCRIPTION

=back

=head2 Memoize::SDBM_File - glue to provide EXISTS for SDBM_File for
Storable use

=over 4

=item DESCRIPTION

=back

=head2 Memoize::Storable - store Memoized data in Storable database

=over 4

=item DESCRIPTION

=back

=head2 NDBM_File - Tied access to ndbm files

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS

=over 4

=item C<ndbm store returned -1, errno 22, key "..." at ...>

=back

=item BUGS AND WARNINGS

=back

=head2 NEXT - Provide a pseudo-class NEXT (et al) that allows method
redispatch

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Enforcing redispatch

=item Avoiding repetitions

=item Invoking all versions of a method with a single call

=item Using C<EVERY> methods

=back

=item AUTHOR

=item BUGS AND IRRITATIONS

=item COPYRIGHT

=back

=head2 Net::Cmd - Network Command class (as used by FTP, SMTP etc)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USER METHODS

debug ( VALUE ), message (), code (), ok (), status (), datasend ( DATA ),
dataend ()

=item CLASS METHODS

debug_print ( DIR, TEXT ), debug_text ( TEXT ), command ( CMD [, ARGS, ...
]), unsupported (), response (), parse_response ( TEXT ), getline (),
ungetline ( TEXT ), rawdatasend ( DATA ), read_until_dot (), tied_fh ()

=item EXPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::Config - Local configuration data for libnet

=over 4

=item SYNOPSYS

=item DESCRIPTION

=item METHODS

requires_firewall HOST

=item NetConfig VALUES

nntp_hosts, snpp_hosts, pop3_hosts, smtp_hosts, ph_hosts, daytime_hosts,
time_hosts, inet_domain, ftp_firewall, ftp_firewall_type, ftp_ext_passive,
ftp_int_pasive, local_netmask, test_hosts, test_exists

=back

=head2 Net::Domain - Attempt to evaluate the current host's internet name
and domain

=over 4

=item SYNOPSIS

=item DESCRIPTION

hostfqdn (), hostname (), hostdomain ()

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::FTP - FTP Client class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OVERVIEW

=item CONSTRUCTOR

new ([ HOST ] [, OPTIONS ])

=item METHODS

login ([LOGIN [,PASSWORD [, ACCOUNT] ] ]), authorize ( [AUTH [, RESP]]),
site (ARGS), ascii, binary, rename ( OLDNAME, NEWNAME ), delete ( FILENAME
), cwd ( [ DIR ] ), cdup (), pwd (), restart ( WHERE ), rmdir ( DIR [,
RECURSE ]), mkdir ( DIR [, RECURSE ]), alloc ( SIZE [, RECORD_SIZE] ), ls (
[ DIR ] ), dir ( [ DIR ] ), get ( REMOTE_FILE [, LOCAL_FILE [, WHERE]] ),
put ( LOCAL_FILE [, REMOTE_FILE ] ), put_unique ( LOCAL_FILE [, REMOTE_FILE
] ), append ( LOCAL_FILE [, REMOTE_FILE ] ), unique_name (), mdtm ( FILE ),
size ( FILE ), supported ( CMD ), hash ( [FILEHANDLE_GLOB_REF],[
BYTES_PER_HASH_MARK] ), nlst ( [ DIR ] ), list ( [ DIR ] ), retr ( FILE ),
stor ( FILE ), stou ( FILE ), appe ( FILE ), port ( [ PORT ] ), pasv (),
pasv_xfer ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ), pasv_xfer_unique (
SRC_FILE, DEST_SERVER [, DEST_FILE ] ), pasv_wait ( NON_PASV_SERVER ),
abort (), quit ()

=over 4

=item Methods for the adventurous

quot (CMD [,ARGS])

=back

=item THE dataconn CLASS

read ( BUFFER, SIZE [, TIMEOUT ] ), write ( BUFFER, SIZE [, TIMEOUT ] ),
bytes_read (), abort (), close ()

=item UNIMPLEMENTED

B<SMNT>, B<HELP>, B<MODE>, B<SYST>, B<STAT>, B<STRU>, B<REIN>

=item REPORTING BUGS

=item AUTHOR

=item SEE ALSO

=item USE EXAMPLES

http://www.csh.rit.edu/~adam/Progs/

=item CREDITS

=item COPYRIGHT

=back

=head2 Net::NNTP - NNTP Client class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HOST ] [, OPTIONS ])

=item METHODS

article ( [ MSGID|MSGNUM ], [FH] ), body ( [ MSGID|MSGNUM ], [FH] ), head (
[ MSGID|MSGNUM ], [FH] ), articlefh ( [ MSGID|MSGNUM ] ), bodyfh ( [
MSGID|MSGNUM ] ), headfh ( [ MSGID|MSGNUM ] ), nntpstat ( [ MSGID|MSGNUM ]
), group ( [ GROUP ] ), ihave ( MSGID [, MESSAGE ]), last (), date (),
postok (), authinfo ( USER, PASS ), list (), newgroups ( SINCE [,
DISTRIBUTIONS ]), newnews ( SINCE [, GROUPS [, DISTRIBUTIONS ]]), next (),
post ( [ MESSAGE ] ), postfh (), slave (), quit ()

=over 4

=item Extension methods

newsgroups ( [ PATTERN ] ), distributions (), subscriptions (),
overview_fmt (), active_times (), active ( [ PATTERN ] ), xgtitle ( PATTERN
), xhdr ( HEADER, MESSAGE-SPEC ), xover ( MESSAGE-SPEC ), xpath (
MESSAGE-ID ), xpat ( HEADER, PATTERN, MESSAGE-SPEC), xrover, listgroup ( [
GROUP ] ), reader

=back

=item UNSUPPORTED

=item DEFINITIONS

MESSAGE-SPEC, PATTERN, Examples, C<[^]-]>, C<*bdc>, C<[0-9a-zA-Z]>, C<a??d>

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::POP3 - Post Office Protocol 3 Client class (RFC1939)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HOST ] [, OPTIONS ] 0

=item METHODS

auth ( USERNAME, PASSWORD ), user ( USER ), pass ( PASS ), login ( [ USER
[, PASS ]] ), apop ( [ USER [, PASS ]] ), banner (), capa (),  capabilities
(), top ( MSGNUM [, NUMLINES ] ), list ( [ MSGNUM ] ), get ( MSGNUM [, FH ]
), getfh ( MSGNUM ), last (), popstat (), ping ( USER ), uidl ( [ MSGNUM ]
), delete ( MSGNUM ), reset (), quit ()

=item NOTES

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::Ping - check a remote host for reachability

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

Net::Ping->new([$proto [, $def_timeout [, $bytes [, $device [, $tos
]]]]]);, $p->ping($host [, $timeout]);, $p->source_verify( { 0 | 1 } );,
$p->service_check( { 0 | 1 } );, $p->tcp_service_check( { 0 | 1 } );,
$p->hires( { 0 | 1 } );, $p->bind($local_addr);, $p->open($host);, $p->ack(
[ $host ] );, $p->nack( $failed_ack_host );, $p->close();, pingecho($host
[, $timeout]);

=back

=item NOTES

=item INSTALL

=item BUGS

=item AUTHORS

=item COPYRIGHT

=back

=head2 Net::SMTP - Simple Mail Transfer Protocol Client

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item CONSTRUCTOR

new ( [ HOST ] [, OPTIONS ] )

=item METHODS

banner (), domain (), hello ( DOMAIN ), host (), etrn ( DOMAIN ), auth (
USERNAME, PASSWORD ), mail ( ADDRESS [, OPTIONS] ), send ( ADDRESS ),
send_or_mail ( ADDRESS ), send_and_mail ( ADDRESS ), reset (), recipient (
ADDRESS [, ADDRESS, [...]] [, OPTIONS ] ), to ( ADDRESS [, ADDRESS [...]]
), cc ( ADDRESS [, ADDRESS [...]] ), bcc ( ADDRESS [, ADDRESS [...]] ),
data ( [ DATA ] ), expand ( ADDRESS ), verify ( ADDRESS ), help ( [
$subject ] ), quit ()

=item ADDRESSES

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::Time - time and daytime network client interface

=over 4

=item SYNOPSIS

=item DESCRIPTION

inet_time ( [HOST [, PROTOCOL [, TIMEOUT]]]), inet_daytime ( [HOST [,
PROTOCOL [, TIMEOUT]]])

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::hostent - by-name interface to Perl's built-in gethost*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item NOTE

=item AUTHOR

=back

=head2 Net::libnetFAQ, libnetFAQ - libnet Frequently Asked Questions

=over 4

=item DESCRIPTION

=over 4

=item Where to get this document

=item How to contribute to this document

=back

=item Author and Copyright Information

=over 4

=item Disclaimer

=back

=item Obtaining and installing libnet

=over 4

=item What is libnet ?

=item Which version of perl do I need ?

=item What other modules do I need ?

=item What machines support libnet ?

=item Where can I get the latest libnet release

=back

=item Using Net::FTP

=over 4

=item How do I download files from an FTP server ?

=item How do I transfer files in binary mode ?

=item How can I get the size of a file on a remote FTP server ?

=item How can I get the modification time of a file on a remote FTP server
?

=item How can I change the permissions of a file on a remote server ?

=item Can I do a reget operation like the ftp command ?

=item How do I get a directory listing from an FTP server ?

=item Changing directory to "" does not fail ?

=item I am behind a SOCKS firewall, but the Firewall option does not work ?

=item I am behind an FTP proxy firewall, but cannot access machines outside
?

=item My ftp proxy firewall does not listen on port 21

=item Is it possible to change the file permissions of a file on an FTP
server ?

=item I have seen scripts call a method message, but cannot find it
documented ?

=item Why does Net::FTP not implement mput and mget methods

=back

=item Using Net::SMTP

=over 4

=item Why can't the part of an Email address after the @ be used as the
hostname ?

=item Why does Net::SMTP not do DNS MX lookups ?

=item The verify method always returns true ?

=back

=item Debugging scripts

=over 4

=item How can I debug my scripts that use Net::* modules ?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 Net::netent - by-name interface to Perl's built-in getnet*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item NOTE

=item AUTHOR

=back

=head2 Net::protoent - by-name interface to Perl's built-in getproto*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item AUTHOR

=back

=head2 Net::servent - by-name interface to Perl's built-in getserv*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item NOTE

=item AUTHOR

=back

=head2 Netrc, Net::Netrc - OO interface to users netrc file

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item THE .netrc FILE

machine name, default, login name, password string, account string, macdef
name

=item CONSTRUCTOR

lookup ( MACHINE [, LOGIN ])

=item METHODS

login (), password (), account (), lpa ()

=item AUTHOR

=item SEE ALSO

=item COPYRIGHT

=back

=head2 O - Generic interface to Perl Compiler backends

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONVENTIONS

=item IMPLEMENTATION

=item BUGS

=item AUTHOR

=back

=head2 ODBM_File - Tied access to odbm files

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS

=over 4

=item C<odbm store returned -1, errno 22, key "..." at ...>

=back

=item BUGS AND WARNINGS

=back

=head2 Opcode - Disable named opcodes when compiling perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item WARNING

=item Operator Names and Operator Lists

an operator name (opname), an operator tag name (optag), a negated opname
or optag, an operator set (opset)

=item Opcode Functions

opcodes, opset (OP, ...), opset_to_ops (OPSET), opset_to_hex (OPSET),
full_opset, empty_opset, invert_opset (OPSET), verify_opset (OPSET, ...),
define_optag (OPTAG, OPSET), opmask_add (OPSET), opmask, opdesc (OP, ...),
opdump (PAT)

=item Manipulating Opsets

=item TO DO (maybe)

=back

=over 4

=item Predefined Opcode Tags

:base_core, :base_mem, :base_loop, :base_io, :base_orig, :base_math,
:base_thread, :default, :filesys_read, :sys_db, :browse, :filesys_open,
:filesys_write, :subprocess, :ownprocess, :others, :still_to_be_decided,
:dangerous

=item SEE ALSO

=item AUTHORS

=back

=head2 Opcode::Safe, Safe - Compile and execute code in restricted
compartments

=over 4

=item SYNOPSIS

=item DESCRIPTION

a new namespace, an operator mask

=item WARNING

=over 4

=item RECENT CHANGES

=item Methods in class Safe

permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)

=item Some Safety Issues

Memory, CPU, Snooping, Signals, State Changes

=item AUTHOR

=back

=back

=head2 Opcode::ops, ops - Perl pragma to restrict unsafe operations when
compiling

=over 4

=item SYNOPSIS	

=item DESCRIPTION

=item SEE ALSO

=back

=head2 POSIX - Perl interface to IEEE Std 1003.1

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item CAVEATS 

=item FUNCTIONS

_exit, abort, abs, access, acos, alarm, asctime, asin, assert, atan, atan2,
atexit, atof, atoi, atol, bsearch, calloc, ceil, chdir, chmod, chown,
clearerr, clock, close, closedir, cos, cosh, creat, ctermid, ctime,
cuserid, difftime, div, dup, dup2, errno, execl, execle, execlp, execv,
execve, execvp, exit, exp, fabs, fclose, fcntl, fdopen, feof, ferror,
fflush, fgetc, fgetpos, fgets, fileno, floor, fmod, fopen, fork, fpathconf,
fprintf, fputc, fputs, fread, free, freopen, frexp, fscanf, fseek, fsetpos,
fstat, fsync, ftell, fwrite, getc, getchar, getcwd, getegid, getenv,
geteuid, getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid,
getppid, getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha,
isatty, iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace,
isupper, isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime,
log, log10, longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr,
memcmp, memcpy, memmove, memset, mkdir, mkfifo, mktime, modf, nice,
offsetof, open, opendir, pathconf, pause, perror, pipe, pow, printf, putc,
putchar, puts, qsort, raise, rand, read, readdir, realloc, remove, rename,
rewind, rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid,
setsid, setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
sigsuspend, sin, sinh, sleep, sprintf, sqrt, srand, sscanf, stat, strcat,
strchr, strcmp, strcoll, strcpy, strcspn, strerror, strftime, strlen,
strncat, strncmp, strncpy, strpbrk, strrchr, strspn, strstr, strtod,
strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh, tcdrain,
tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times, tmpfile,
tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname, ungetc,
unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid, wcstombs,
wctomb, write

=item CLASSES

=over 4

=item POSIX::SigAction

new, handler, mask, flags, safe

=item POSIX::SigSet

new, addset, delset, emptyset, fillset, ismember

=item POSIX::Termios

new, getattr, getcc, getcflag, getiflag, getispeed, getlflag, getoflag,
getospeed, setattr, setcc, setcflag, setiflag, setispeed, setlflag,
setoflag, setospeed, Baud rate values, Terminal interface values, c_cc
field values, c_cflag field values, c_iflag field values, c_lflag field
values, c_oflag field values

=back

=item PATHNAME CONSTANTS

Constants

=item POSIX CONSTANTS

Constants

=item SYSTEM CONFIGURATION

Constants

=item ERRNO

Constants

=item FCNTL

Constants

=item FLOAT

Constants

=item LIMITS

Constants

=item LOCALE

Constants

=item MATH

Constants

=item SIGNAL

Constants

=item STAT

Constants, Macros

=item STDLIB

Constants

=item STDIO

Constants

=item TIME

Constants

=item UNISTD

Constants

=item WAIT

Constants, WNOHANG, WUNTRACED, Macros, WIFEXITED, WEXITSTATUS, WIFSIGNALED,
WTERMSIG, WIFSTOPPED, WSTOPSIG

=back

=head2 PerlIO - On demand loader for PerlIO layers and root of PerlIO::*
name space

=over 4

=item SYNOPSIS

=item DESCRIPTION

:unix, :stdio, :perlio, :crlf, :mmap, :utf8, :bytes, :raw, :pop, :win32

=over 4

=item Custom Layers

:encoding, :via

=item Alternatives to raw

=item Defaults and how to override them

=item Querying the layers of filehandles

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 PerlIO::encoding - encoding layer

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 PerlIO::scalar - in-memory IO, scalar IO

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item IMPLEMENTATION NOTE

=back

=head2 PerlIO::via - Helper class for PerlIO layers implemented in perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXPECTED METHODS

$class->PUSHED([$mode[,$fh]]), $obj->POPPED([$fh]),
$obj->UTF8($bellowFlag,[$fh]), $obj->OPEN($path,$mode[,$fh]),
$obj->BINMODE([,$fh]), $obj->FDOPEN($fd[,$fh]),
$obj->SYSOPEN($path,$imode,$perm,[,$fh]), $obj->FILENO($fh),
$obj->READ($buffer,$len,$fh), $obj->WRITE($buffer,$fh), $obj->FILL($fh),
$obj->CLOSE($fh), $obj->SEEK($posn,$whence,$fh), $obj->TELL($fh),
$obj->UNREAD($buffer,$fh), $obj->FLUSH($fh), $obj->SETLINEBUF($fh),
$obj->CLEARERR($fh), $obj->ERROR($fh), $obj->EOF($fh)

=item EXAMPLES

=over 4

=item Example - a Hexadecimal Handle

=back

=back

=head2 PerlIO::via::QuotedPrint - PerlIO layer for quoted-printable strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item REQUIRED MODULES

=item SEE ALSO

=item ACKNOWLEDGEMENTS

=item COPYRIGHT

=back

=head2 Pod::Checker, podchecker() - check pod documents for syntax errors

=over 4

=item SYNOPSIS

=item OPTIONS/ARGUMENTS

=over 4

=item podchecker()

B<-warnings> =E<gt> I<val>

=back

=item DESCRIPTION

=item DIAGNOSTICS

=over 4

=item Errors

empty =headn, =over on line I<N> without closing =back, =item without
previous =over, =back without previous =over, No argument for =begin, =end
without =begin, Nested =begin's, =for without formatter specification,
unresolved internal link I<NAME>, Unknown command "I<CMD>", Unknown
interior-sequence "I<SEQ>", nested commands
I<CMD>E<lt>...I<CMD>E<lt>...E<gt>...E<gt>, garbled entity I<STRING>, Entity
number out of range, malformed link LE<lt>E<gt>, nonempty ZE<lt>E<gt>,
empty XE<lt>E<gt>, Spurious text after =pod / =cut, Spurious character(s)
after =back

=item Warnings

multiple occurrence of link target I<name>, line containing nothing but
whitespace in paragraph, file does not start with =head, previous =item has
no contents, preceding non-item paragraph(s), =item type mismatch (I<one>
vs. I<two>), I<N> unescaped C<E<lt>E<gt>> in paragraph, Unknown entity, No
items in =over, No argument for =item, empty section in previous paragraph,
Verbatim paragraph in NAME section, =headI<n> without preceding higher
level

=item Hyperlinks

ignoring leading/trailing whitespace in link, (section) in '$page'
deprecated, alternative text/node '%s' contains non-escaped | or /

=back

=item RETURN VALUE

=item EXAMPLES

=item INTERFACE

=back

C<Pod::Checker-E<gt>new( %options )>

C<$checker-E<gt>poderror( @args )>, C<$checker-E<gt>poderror( {%opts},
@args )>

C<$checker-E<gt>num_errors()>

C<$checker-E<gt>num_warnings()>

C<$checker-E<gt>name()>

C<$checker-E<gt>node()>

C<$checker-E<gt>idx()>

C<$checker-E<gt>hyperlink()>

=over 4

=item AUTHOR

=back

=head2 Pod::Find - find POD documents in directory trees

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item C<pod_find( { %opts } , @directories )>

C<-verbose =E<gt> 1>, C<-perl =E<gt> 1>, C<-script =E<gt> 1>, C<-inc =E<gt>
1>

=back

=over 4

=item C<simplify_name( $str )>

=back

=over 4

=item C<pod_where( { %opts }, $pod )>

C<-inc =E<gt> 1>, C<-dirs =E<gt> [ $dir1, $dir2, ... ]>, C<-verbose =E<gt>
1>

=back

=over 4

=item C<contains_pod( $file , $verbose )>

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 Pod::Html - module to convert pod files to HTML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ARGUMENTS

backlink, cachedir, css, flush, header, help, hiddendirs, htmldir,
htmlroot, index, infile, libpods, netscape, outfile, podpath, podroot,
quiet, recurse, title, verbose

=item EXAMPLE

=item ENVIRONMENT

=item AUTHOR

=item SEE ALSO

=item COPYRIGHT

=back

=head2 Pod::InputObjects - objects representing POD input paragraphs,
commands, etc.

=over 4

=item SYNOPSIS

=item REQUIRES

=item EXPORTS

=item DESCRIPTION

package B<Pod::InputSource>, package B<Pod::Paragraph>, package
B<Pod::InteriorSequence>, package B<Pod::ParseTree>

=back

=over 4

=item B<Pod::InputSource>

=back

=over 4

=item B<new()>

=back

=over 4

=item B<name()>

=back

=over 4

=item B<handle()>

=back

=over 4

=item B<was_cutting()>

=back

=over 4

=item B<Pod::Paragraph>

=back

=over 4

=item Pod::Paragraph-E<gt>B<new()>

=back

=over 4

=item $pod_para-E<gt>B<cmd_name()>

=back

=over 4

=item $pod_para-E<gt>B<text()>

=back

=over 4

=item $pod_para-E<gt>B<raw_text()>

=back

=over 4

=item $pod_para-E<gt>B<cmd_prefix()>

=back

=over 4

=item $pod_para-E<gt>B<cmd_separator()>

=back

=over 4

=item $pod_para-E<gt>B<parse_tree()>

=back

=over 4

=item $pod_para-E<gt>B<file_line()>

=back

=over 4

=item B<Pod::InteriorSequence>

=back

=over 4

=item Pod::InteriorSequence-E<gt>B<new()>

=back

=over 4

=item $pod_seq-E<gt>B<cmd_name()>

=back

=over 4

=item $pod_seq-E<gt>B<prepend()>

=back

=over 4

=item $pod_seq-E<gt>B<append()>

=back

=over 4

=item $pod_seq-E<gt>B<nested()>

=back

=over 4

=item $pod_seq-E<gt>B<raw_text()>

=back

=over 4

=item $pod_seq-E<gt>B<left_delimiter()>

=back

=over 4

=item $pod_seq-E<gt>B<right_delimiter()>

=back

=over 4

=item $pod_seq-E<gt>B<parse_tree()>

=back

=over 4

=item $pod_seq-E<gt>B<file_line()>

=back

=over 4

=item Pod::InteriorSequence::B<DESTROY()>

=back

=over 4

=item B<Pod::ParseTree>

=back

=over 4

=item Pod::ParseTree-E<gt>B<new()>

=back

=over 4

=item $ptree-E<gt>B<top()>

=back

=over 4

=item $ptree-E<gt>B<children()>

=back

=over 4

=item $ptree-E<gt>B<prepend()>

=back

=over 4

=item $ptree-E<gt>B<append()>

=back

=over 4

=item $ptree-E<gt>B<raw_text()>

=back

=over 4

=item Pod::ParseTree::B<DESTROY()>

=back

=over 4

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::LaTeX - Convert Pod data to formatted Latex

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item OBJECT METHODS

C<initialize>

=back

=over 4

=item Data Accessors

B<AddPreamble>

=back

B<AddPostamble>

B<Head1Level>

B<Label>

B<LevelNoNum>

B<MakeIndex>

B<ReplaceNAMEwithSection>

B<StartWithNewPage>

B<TableOfContents>

B<UniqueLabels>

B<UserPreamble>

B<UserPostamble>

B<Lists>

=over 4

=item Subclassed methods

=back

B<begin_pod>

B<end_pod>

B<command>

B<verbatim>

B<textblock>

B<interior_sequence>

=over 4

=item List Methods

B<begin_list>

=back

B<end_list>

B<add_item>

=over 4

=item Methods for headings

B<head>

=back

=over 4

=item Internal methods

B<_output>

=back

B<_replace_special_chars>

B<_replace_special_chars_late>

B<_create_label>

B<_create_index>

B<_clean_latex_commands>

B<_split_delimited>

=over 4

=item NOTES

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=item REVISION

=back

=head2 Pod::Man - Convert POD data to formatted *roff input

=over 4

=item SYNOPSIS

=item DESCRIPTION

center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, name, quotes,
release, section

=item DIAGNOSTICS

roff font should be 1 or 2 chars, not "%s", Invalid link %s, Invalid quote
specification "%s", %s:%d: Unknown command paragraph "%s", %s:%d: Unknown
escape EE<lt>%sE<gt>, %s:%d: Unknown formatting code %s, %s:%d: Unmatched
=back

=item BUGS

=item CAVEATS

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::ParseLink - Parse an LE<lt>E<gt> formatting code in POD text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::ParseUtils - helpers for POD parsing and conversion

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item Pod::List

Pod::List-E<gt>new()

=back

$list-E<gt>file()

$list-E<gt>start()

$list-E<gt>indent()

$list-E<gt>type()

$list-E<gt>rx()

$list-E<gt>item()

$list-E<gt>parent()

$list-E<gt>tag()

=over 4

=item Pod::Hyperlink

Pod::Hyperlink-E<gt>new()

=back

$link-E<gt>parse($string)

$link-E<gt>markup($string)

$link-E<gt>text()

$link-E<gt>warning()

$link-E<gt>file(), $link-E<gt>line()

$link-E<gt>page()

$link-E<gt>node()

$link-E<gt>alttext()

$link-E<gt>type()

$link-E<gt>link()

=over 4

=item Pod::Cache

Pod::Cache-E<gt>new()

=back

$cache-E<gt>item()

$cache-E<gt>find_page($name)

=over 4

=item Pod::Cache::Item

Pod::Cache::Item-E<gt>new()

=back

$cacheitem-E<gt>page()

$cacheitem-E<gt>description()

$cacheitem-E<gt>path()

$cacheitem-E<gt>file()

$cacheitem-E<gt>nodes()

$cacheitem-E<gt>find_node($name)

$cacheitem-E<gt>idx()

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 Pod::Parser - base class for creating POD filters and translators

=over 4

=item SYNOPSIS

=item REQUIRES

=item EXPORTS

=item DESCRIPTION

=item QUICK OVERVIEW

=item PARSING OPTIONS

B<-want_nonPODs> (default: unset), B<-process_cut_cmd> (default: unset),
B<-warnings> (default: unset)

=back

=over 4

=item RECOMMENDED SUBROUTINE/METHOD OVERRIDES

=back

=over 4

=item B<command()>

C<$cmd>, C<$text>, C<$line_num>, C<$pod_para>

=back

=over 4

=item B<verbatim()>

C<$text>, C<$line_num>, C<$pod_para>

=back

=over 4

=item B<textblock()>

C<$text>, C<$line_num>, C<$pod_para>

=back

=over 4

=item B<interior_sequence()>

=back

=over 4

=item OPTIONAL SUBROUTINE/METHOD OVERRIDES

=back

=over 4

=item B<new()>

=back

=over 4

=item B<initialize()>

=back

=over 4

=item B<begin_pod()>

=back

=over 4

=item B<begin_input()>

=back

=over 4

=item B<end_input()>

=back

=over 4

=item B<end_pod()>

=back

=over 4

=item B<preprocess_line()>

=back

=over 4

=item B<preprocess_paragraph()>

=back

=over 4

=item METHODS FOR PARSING AND PROCESSING

=back

=over 4

=item B<parse_text()>

B<-expand_seq> =E<gt> I<code-ref>|I<method-name>, B<-expand_text> =E<gt>
I<code-ref>|I<method-name>, B<-expand_ptree> =E<gt>
I<code-ref>|I<method-name>

=back

=over 4

=item B<interpolate()>

=back

=over 4

=item B<parse_paragraph()>

=back

=over 4

=item B<parse_from_filehandle()>

=back

=over 4

=item B<parse_from_file()>

=back

=over 4

=item ACCESSOR METHODS

=back

=over 4

=item B<errorsub()>

=back

=over 4

=item B<cutting()>

=back

=over 4

=item B<parseopts()>

=back

=over 4

=item B<output_file()>

=back

=over 4

=item B<output_handle()>

=back

=over 4

=item B<input_file()>

=back

=over 4

=item B<input_handle()>

=back

=over 4

=item B<input_streams()>

=back

=over 4

=item B<top_stream()>

=back

=over 4

=item PRIVATE METHODS AND DATA

=back

=over 4

=item B<_push_input_stream()>

=back

=over 4

=item B<_pop_input_stream()>

=back

=over 4

=item TREE-BASED PARSING

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Perldoc::ToChecker - let Perldoc check Pod for errors

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToMan - let Perldoc render Pod as man pages

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToNroff - let Perldoc convert Pod to nroff

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToPod - let Perldoc render Pod as ... Pod!

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToRtf - let Perldoc render Pod as RTF

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToText - let Perldoc render Pod as plaintext

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToTk - let Perldoc use Tk::Pod to render Pod

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Perldoc::ToXml - let Perldoc render Pod as XML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::PlainText - Convert POD data to formatted ASCII text

=over 4

=item SYNOPSIS

=item DESCRIPTION

alt, indent, loose, sentence, width

=item DIAGNOSTICS

Bizarre space in item, Can't open %s for reading: %s, Unknown escape: %s,
Unknown sequence: %s, Unmatched =back

=item RESTRICTIONS

=item NOTES

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Plainer - Perl extension for converting Pod to old style Pod.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item EXPORT

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 Pod::Select, podselect() - extract selected sections of POD from
input

=over 4

=item SYNOPSIS

=item REQUIRES

=item EXPORTS

=item DESCRIPTION

=item SECTION SPECIFICATIONS

=item RANGE SPECIFICATIONS

=back

=over 4

=item OBJECT METHODS

=back

=over 4

=item B<curr_headings()>

=back

=over 4

=item B<select()>

=back

=over 4

=item B<add_selection()>

=back

=over 4

=item B<clear_selections()>

=back

=over 4

=item B<match_section()>

=back

=over 4

=item B<is_selected()>

=back

=over 4

=item EXPORTED FUNCTIONS

=back

=over 4

=item B<podselect()>

B<-output>, B<-sections>, B<-ranges>

=back

=over 4

=item PRIVATE METHODS AND DATA

=back

=over 4

=item B<_compile_section_spec()>

=back

=over 4

=item $self->{_SECTION_HEADINGS}

=back

=over 4

=item $self->{_SELECTED_SECTIONS}

=back

=over 4

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Text - Convert POD data to formatted ASCII text

=over 4

=item SYNOPSIS

=item DESCRIPTION

alt, code, indent, loose, margin, quotes, sentence, width

=item DIAGNOSTICS

Bizarre space in item, Item called without tag, Can't open %s for reading:
%s, Invalid quote specification "%s", %s:%d: Unknown command paragraph: %s,
%s:%d: Unknown escape: %s, %s:%d: Unknown formatting code: %s, %s:%d:
Unmatched =back

=item RESTRICTIONS

=item NOTES

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::Text::Color - Convert POD data to formatted color ASCII text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::Text::Overstrike - Convert POD data to formatted overstrike
text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::Text::Termcap - Convert POD data to ASCII text with format
escapes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::Usage, pod2usage() - print a usage message from embedded pod
documentation

=over 4

=item SYNOPSIS

=item ARGUMENTS

C<-message>, C<-msg>, C<-exitval>, C<-verbose>, C<-section>, C<-output>,
C<-input>, C<-pathlist>, C<-noperldoc>

=item DESCRIPTION

=item EXAMPLES

=over 4

=item Recommended Use

=back

=item CAVEATS

=item AUTHOR

=item ACKNOWLEDGEMENTS

=back

=head2 SDBM_File - Tied access to sdbm files

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS

=over 4

=item C<sdbm store returned -1, errno 22, key "..." at ...>

=back

=item BUGS AND WARNINGS

=back

=head2 Safe - Compile and execute code in restricted compartments

=over 4

=item SYNOPSIS

=item DESCRIPTION

a new namespace, an operator mask

=item WARNING

=over 4

=item RECENT CHANGES

=item Methods in class Safe

permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)

=item Some Safety Issues

Memory, CPU, Snooping, Signals, State Changes

=item AUTHOR

=back

=back

=head2 Scalar::Util - A selection of general-utility scalar subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

blessed EXPR, dualvar NUM, STRING, isvstring EXPR, isweak EXPR,
looks_like_number EXPR, openhandle FH, refaddr EXPR, reftype EXPR,
set_prototype CODEREF, PROTOTYPE, tainted EXPR, weaken REF

=item KNOWN BUGS

=item COPYRIGHT

=item BLATANT PLUG

=back

=head2 Search::Dict, look - search for key in dictionary file

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 SelectSaver - save and restore selected file handle

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 SelfLoader - load functions only on demand

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The __DATA__ token

=item SelfLoader autoloading

=item Autoloading and package lexicals

=item SelfLoader and AutoLoader

=item __DATA__, __END__, and the FOOBAR::DATA filehandle.

=item Classes and inherited methods.

=back

=item Multiple packages and fully qualified subroutine names

=back

=head2 Shell - run shell commands transparently within perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Caveats

=item Escaping Magic Characters

=item Configuration

=back

=item BUGS

=item AUTHOR

=back

=head2 Socket, sockaddr_in, sockaddr_un, inet_aton, inet_ntoa - load the C
socket.h defines and structure manipulators 

=over 4

=item SYNOPSIS

=item DESCRIPTION

inet_aton HOSTNAME, inet_ntoa IP_ADDRESS, INADDR_ANY, INADDR_BROADCAST,
INADDR_LOOPBACK, INADDR_NONE, sockaddr_family SOCKADDR, sockaddr_in PORT,
ADDRESS, sockaddr_in SOCKADDR_IN, pack_sockaddr_in PORT, IP_ADDRESS,
unpack_sockaddr_in SOCKADDR_IN, sockaddr_un PATHNAME, sockaddr_un
SOCKADDR_UN, pack_sockaddr_un PATH, unpack_sockaddr_un SOCKADDR_UN

=back

=head2 Storable - persistence for Perl data structures

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item MEMORY STORE

=item ADVISORY LOCKING

=item SPEED

=item CANONICAL REPRESENTATION

=item CODE REFERENCES

=item FORWARD COMPATIBILITY

utf8 data, restricted hashes, files from future versions of Storable

=item ERROR REPORTING

=item WIZARDS ONLY

=over 4

=item Hooks

C<STORABLE_freeze> I<obj>, I<cloning>, C<STORABLE_thaw> I<obj>, I<cloning>,
I<serialized>, .., C<STORABLE_attach> I<class>, I<cloning>, I<serialized>

=item Predicates

C<Storable::last_op_in_netorder>, C<Storable::is_storing>,
C<Storable::is_retrieving>

=item Recursion

=item Deep Cloning

=back

=item Storable magic

=item EXAMPLES

=item WARNING

=item BUGS

=over 4

=item 64 bit data in perl 5.6.0 and 5.6.1

=back

=item CREDITS

=item AUTHOR

=item SEE ALSO

=back

=head2 Switch - A switch statement for Perl

=over 4

=item VERSION

=item SYNOPSIS

=item BACKGROUND

=item DESCRIPTION

=over 4

=item Allowing fall-through

=item Automating fall-through

=item Alternative syntax

=item Higher-order Operations

=back

=item DEPENDENCIES

=item AUTHOR

=item BUGS

=item LIMITATIONS

=item COPYRIGHT

=back

=head2 Symbol - manipulate Perl symbols and their names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=back

=head2 Sys::Hostname - Try every conceivable way to get hostname

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 Syslog, Sys::Syslog - Perl interface to the UNIX syslog(3) calls

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTS

=item FUNCTIONS

B<openlog($ident, $logopt, $facility)>, B<syslog($priority, $message)>,
B<syslog($priority, $format, @args)>, B<Note>,
B<setlogmask($mask_priority)>, B<setlogsock($sock_type)>,
B<setlogsock($sock_type, $stream_location)> (added in 5.004_02),
B<closelog()>

=item EXAMPLES

=item CONSTANTS

=over 4

=item Facilities

=item Levels

=back

=item DIAGNOSTICS

Invalid argument passed to setlogsock, no connection to syslog available,
stream passed to setlogsock, but %s is not writable, stream passed to
setlogsock, but could not find any device, tcp passed to setlogsock, but
tcp service unavailable, syslog: expecting argument %s, syslog: invalid
level/facility: %s, syslog: too many levels given: %s, syslog: too many
facilities given: %s, syslog: level must be given, udp passed to
setlogsock, but udp service unavailable, unix passed to setlogsock, but
path not available

=item SEE ALSO

=item AUTHOR

=item BUGS

=item SUPPORT

AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's request
tracker, Search CPAN

=item LICENSE

=back

=head2 Syslog::Syslog, Sys::Syslog - Perl interface to the UNIX syslog(3)
calls

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTS

=item FUNCTIONS

B<openlog($ident, $logopt, $facility)>, B<syslog($priority, $message)>,
B<syslog($priority, $format, @args)>, B<Note>,
B<setlogmask($mask_priority)>, B<setlogsock($sock_type)>,
B<setlogsock($sock_type, $stream_location)> (added in 5.004_02),
B<closelog()>

=item EXAMPLES

=item CONSTANTS

=over 4

=item Facilities

=item Levels

=back

=item DIAGNOSTICS

Invalid argument passed to setlogsock, no connection to syslog available,
stream passed to setlogsock, but %s is not writable, stream passed to
setlogsock, but could not find any device, tcp passed to setlogsock, but
tcp service unavailable, syslog: expecting argument %s, syslog: invalid
level/facility: %s, syslog: too many levels given: %s, syslog: too many
facilities given: %s, syslog: level must be given, udp passed to
setlogsock, but udp service unavailable, unix passed to setlogsock, but
path not available

=item SEE ALSO

=item AUTHOR

=item BUGS

=item SUPPORT

AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's request
tracker, Search CPAN

=item LICENSE

=back

=head2 Term::ANSIColor - Color screen output using ANSI escape sequences

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item DIAGNOSTICS

Bad escape sequence %s, Bareword "%s" not allowed while "strict subs" in
use, Invalid attribute name %s, Name "%s" used only once: possible typo, No
comma allowed after filehandle, No name for escape sequence %s

=item ENVIRONMENT

ANSI_COLORS_DISABLED

=item RESTRICTIONS

=item NOTES

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT AND LICENSE

=back

=head2 Term::Cap - Perl termcap interface

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item METHODS

=back

=back

B<Tgetent>, OSPEED, TERM

B<Tpad>, B<$string>, B<$cnt>, B<$FH>

B<Tputs>, B<$cap>, B<$cnt>, B<$FH>

B<Tgoto>, B<$cap>, B<$col>, B<$row>, B<$FH>

B<Trequire>

=over 4

=item EXAMPLES

=item COPYRIGHT AND LICENSE

=item AUTHOR

=item SEE ALSO

=back

=head2 Term::Complete - Perl word completion module

=over 4

=item SYNOPSIS

=item DESCRIPTION

E<lt>tabE<gt>, ^D, ^U, E<lt>delE<gt>, E<lt>bsE<gt>

=item DIAGNOSTICS

=item BUGS

=item AUTHOR

=back

=head2 Term::ReadLine - Perl interface to various C<readline> packages.
If no real package is found, substitutes stubs instead of basic functions.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Minimal set of supported functions

C<ReadLine>, C<new>, C<readline>, C<addhistory>, C<IN>, C<OUT>, C<MinLine>,
C<findConsole>, Attribs, C<Features>

=item Additional supported functions

C<tkRunning>, C<ornaments>, C<newTTY>

=item EXPORTS

=item ENVIRONMENT

=item CAVEATS

=back

=head2 Test - provides a simple framework for writing test scripts

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item QUICK START GUIDE

=over 4

=item Functions

C<plan(...)>, C<tests =E<gt> I<number>>, C<todo =E<gt> [I<1,5,14>]>,
C<onfail =E<gt> sub { ... }>, C<onfail =E<gt> \&some_sub>

=back

=back

B<_to_value>

C<ok(...)>

C<skip(I<skip_if_true>, I<args...>)>

=over 4

=item TEST TYPES

NORMAL TESTS, SKIPPED TESTS, TODO TESTS

=item ONFAIL

=item BUGS and CAVEATS

=item ENVIRONMENT

=item NOTE

=item SEE ALSO

=item AUTHOR

=back

=head2 Test::Builder - Backend for building test libraries

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Construction

B<new>

=back

=back

B<create>

B<reset>

=over 4

=item Setting up tests

B<exported_to>

=back

B<plan>

B<expected_tests>

B<no_plan>

B<has_plan>

B<skip_all>

=over 4

=item Running tests

B<ok>

=back

B<is_eq>, B<is_num>

B<isnt_eq>, B<isnt_num>

B<like>, B<unlike>

B<maybe_regex>

B<cmp_ok>

B<BAIL_OUT>

B<skip>

B<todo_skip>

B<skip_rest>

=over 4

=item Test style

B<level>

=back

B<use_numbers>

B<no_diag>, B<no_ending>, B<no_header>

=over 4

=item Output

B<diag>

=back

B<_print>

B<_print_diag>

B<output>, B<failure_output>, B<todo_output>

=over 4

=item Test Status and Info

B<current_test>

=back

B<summary>

B<details>

B<todo>

B<caller>

B<_sanity_check>

B<_whoa>

B<_my_exit>

=over 4

=item EXIT CODES

=item THREADS

=item EXAMPLES

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 Test::Builder::Module - Base class for test modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Importing

=back

=back

=over 4

=item Builder

=back

=head2 Test::Builder::Tester - test testsuites that have been built with
Test::Builder

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item Methods

test_out, test_err

=back

test_fail

test_diag

test_test, title (synonym 'name', 'label'), skip_out, skip_err

line_num

color

=over 4

=item BUGS

=item AUTHOR

=item NOTES

=item SEE ALSO

=back

=head2 Test::Builder::Tester::Color - turn on colour in
Test::Builder::Tester

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item AUTHOR

=item BUGS

=item SEE ALSO

=back

=head2 Test::Harness - Run Perl standard test scripts with statistics

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Taint mode

=item Configuration variables.

C<$Test::Harness::Verbose>, C<$Test::Harness::switches>,
C<$Test::Harness::Timer>

=item Failure

B<Failed Test>, B<Stat>, B<Wstat>, B<Total>, B<Fail>, B<Failed>, B<List of
Failed>

=item Functions

B<runtests>

=back

=back

B<_all_ok>

B<_globdir>

B<_run_all_tests>

B<_mk_leader>

B<_leader_width>

=over 4

=item EXPORT

=item DIAGNOSTICS

C<All tests successful.\nFiles=%d,  Tests=%d, %s>, C<FAILED tests
%s\n\tFailed %d/%d tests, %.2f%% okay.>, C<Test returned status %d (wstat
%d)>, C<Failed 1 test, %.2f%% okay. %s>, C<Failed %d/%d tests, %.2f%% okay.
%s>, C<FAILED--Further testing stopped: %s>

=item ENVIRONMENT VARIABLES THAT TEST::HARNESS SETS

C<HARNESS_ACTIVE>, C<HARNESS_VERSION>

=item ENVIRONMENT VARIABLES THAT AFFECT TEST::HARNESS

C<HARNESS_COLUMNS>, C<HARNESS_COMPILE_TEST>, C<HARNESS_DEBUG>,
C<HARNESS_FILELEAK_IN_DIR>, C<HARNESS_IGNORE_EXITCODE>, C<HARNESS_NOTTY>,
C<HARNESS_PERL>, C<HARNESS_PERL_SWITCHES>, C<HARNESS_VERBOSE>

=item EXAMPLE

=item SEE ALSO

=item TODO

=item BUGS

=item AUTHORS

=item COPYRIGHT

=back

=head2 Test::Harness::Assert - simple assert

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item C<assert()>

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 Test::Harness::Iterator - Internal Test::Harness Iterator

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item new()

=item next()

=back

=back

=head2 Test::Harness::Point - object for tracking a single test point

=over 4

=item SYNOPSIS

=item CONSTRUCTION

=over 4

=item new()

=back

=back

=over 4

=item from_test_line( $line )

=back

=over 4

=item ACCESSORS

ok, number

=back

=head2 Test::Harness::Straps - detailed analysis of test results

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTION

=over 4

=item new()

=back

=back

=over 4

=item $strap->_init

=back

=over 4

=item ANALYSIS

=over 4

=item $strap->analyze( $name, \@output_lines )

=back

=back

=over 4

=item $strap->analyze_fh( $name, $test_filehandle )

=back

=over 4

=item $strap->analyze_file( $test_file )

=back

=over 4

=item $strap->_command_line( $file )

=back

=over 4

=item $strap->_command()

=back

=over 4

=item $strap->_switches( $file )

=back

=over 4

=item $strap->_cleaned_switches( @switches_from_user )

=back

=over 4

=item $strap->_INC2PERL5LIB

=back

=over 4

=item $strap->_filtered_INC()

=back

=over 4

=item $strap->_restore_PERL5LIB()

=back

=over 4

=item Parsing

=over 4

=item C<_is_diagnostic>

=back

=back

=over 4

=item C<_is_header>

=back

=over 4

=item C<_is_bail_out>

=back

=over 4

=item C<_reset_file_state>

=back

=over 4

=item Results

=item EXAMPLES

=item AUTHOR

=item SEE ALSO

=back

=head2 Test::Harness::TAP - Documentation for the TAP format

=over 4

=item SYNOPSIS

=item TODO

=item THE TAP FORMAT

=item HARNESS BEHAVIOR

=item TESTS LINES AND THE PLAN

=over 4

=item The plan

=item The test line

C<ok> or C<not ok>, Test number, Description, Directive, ok/not ok
(required), Test number (recommended), Description (recommended), Directive
(only when necessary)

=back

=item DIRECTIVES

=over 4

=item TODO tests

=item Skipping tests

=back

=item OTHER LINES

=over 4

=item Bail out!

=item Diagnostics

=item Anything else

=back

=item EXAMPLES

=over 4

=item Common with explanation

=item Unknown amount and failures

=item Giving up

=item Skipping a few

=item Skipping everything

=item Got spare tuits?

=item Creative liberties

=back

=item AUTHORS

=item ACKNOWLEDGEMENTS

=item COPYRIGHT

=back

=head2 Test::More - yet another framework for writing test scripts

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item I love it when a plan comes together

=back

=back

=over 4

=item Test names

=item I'm ok, you're not ok.

B<ok>

=back

B<is>, B<isnt>

B<like>

B<unlike>

B<cmp_ok>

B<can_ok>

B<isa_ok>

B<pass>, B<fail>

=over 4

=item Module tests

B<use_ok>

=back

B<require_ok>

=over 4

=item Complex data structures

B<is_deeply>

=back

=over 4

=item Diagnostics

B<diag>

=back

=over 4

=item Conditional tests

B<SKIP: BLOCK>

=back

B<TODO: BLOCK>, B<todo_skip>

When do I use SKIP vs. TODO?

=over 4

=item Test control

B<BAIL_OUT>

=back

=over 4

=item Discouraged comparison functions

B<eq_array>

=back

B<eq_hash>

B<eq_set>

=over 4

=item Extending and Embedding Test::More

B<builder>

=back

=over 4

=item EXIT CODES

=item CAVEATS and NOTES

Backwards compatibility, Overloaded objects, Threads, Test::Harness upgrade

=item HISTORY

=item SEE ALSO

=item AUTHORS

=item BUGS

=item COPYRIGHT

=back

=head2 Test::Simple - Basic utilities for writing tests.

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<ok>

=back

=over 4

=item EXAMPLE

=item CAVEATS

=item NOTES

=item HISTORY

=item SEE ALSO

L<Test::More>, L<Test>, L<Test::Unit>, L<Test::Inline>, L<SelfTest>,
L<Test::Harness>

=item AUTHORS

=item COPYRIGHT

=back

=head2 Test::Tutorial - A tutorial about writing really basic tests

=over 4

=item DESCRIPTION

=over 4

=item Nuts and bolts of testing.

=item Where to start?

=item Names

=item Test the manual

=item Sometimes the tests are wrong

=item Testing lots of values

=item Informative names

=item Skipping tests

=item Todo tests

=item Testing with taint mode.

=back

=item FOOTNOTES

=item AUTHORS

=item COPYRIGHT

=back

=head2 Text::Abbrev, abbrev - create an abbreviation table from a list

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=back

=head2 Text::Balanced - Extract delimited text sequences from strings.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item General behaviour in list contexts

[0], [1], [2]

=item General behaviour in scalar and void contexts

=item A note about prefixes

=item C<extract_delimited>

=item C<extract_bracketed>

=item C<extract_variable>

[0], [1], [2]

=item C<extract_tagged>

C<reject =E<gt> $listref>, C<ignore =E<gt> $listref>, C<fail =E<gt> $str>,
[0], [1], [2], [3], [4], [5]

=item C<gen_extract_tagged>

=item C<extract_quotelike>

[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10]

=item C<extract_quotelike> and "here documents"

[0], [1], [2], [3], [4], [5], [6], [7..10]

=item C<extract_codeblock>

=item C<extract_multiple>

=item C<gen_delimited_pat>

=back

=item DIAGNOSTICS

 C<Did not find a suitable bracket: "%s">,  C<Did not find prefix: /%s/>, 
C<Did not find opening bracket after prefix: "%s">,  C<No quotelike
operator found after prefix: "%s">,  C<Unmatched closing bracket: "%c">, 
C<Unmatched opening bracket(s): "%s">, C<Unmatched embedded quote (%s)>,
C<Did not find closing delimiter to match '%s'>,  C<Mismatched closing
bracket: expected "%c" but found "%s">,  C<No block delimiter found after
quotelike "%s">, C<Did not find leading dereferencer>, C<Bad identifier
after dereferencer>, C<Did not find expected opening bracket at %s>,
C<Improperly nested codeblock at %s>,  C<Missing second block for quotelike
"%s">, C<No match found for opening bracket>, C<Did not find opening tag:
/%s/>, C<Unable to construct closing tag to match: /%s/>, C<Found invalid
nested tag: %s>, C<Found unbalanced nested tag: %s>, C<Did not find closing
tag>

=item AUTHOR

=item BUGS AND IRRITATIONS

=item COPYRIGHT

=back

=head2 Text::ParseWords - parse text into an array of tokens or array of
arrays

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item AUTHORS

=back

=head2 Text::Soundex - Implementation of the Soundex Algorithm as Described
by Knuth

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item LIMITATIONS

=item AUTHOR

=back

=head2 Text::Tabs -- expand and unexpand tabs per the unix expand(1) and
unexpand(1)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item LICENSE

=back

=head2 Text::Wrap - line wrapping to form simple paragraphs

=over 4

=item SYNOPSIS 

=item DESCRIPTION

=item OVERRIDES

=item EXAMPLE

=item LICENSE

=back

=head2 Thread - manipulate threads in Perl (for old code only)

=over 4

=item CAVEAT

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

$thread = Thread->new(\&start_sub), $thread = Thread->new(\&start_sub,
LIST), lock VARIABLE, async BLOCK;, Thread->self, cond_wait VARIABLE,
cond_signal VARIABLE, cond_broadcast VARIABLE, yield

=item METHODS

join, eval, detach, equal, tid, flags, done

=item LIMITATIONS

=item SEE ALSO

=back

=head2 Thread::Queue - thread-safe queues

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS AND METHODS

new, enqueue LIST, dequeue, dequeue_nb, pending

=item SEE ALSO

=back

=head2 Thread::Semaphore - thread-safe semaphores

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS AND METHODS

new, new NUMBER, down, down NUMBER, up, up NUMBER

=back

=head2 Thread::Signal - Start a thread which runs signal handlers reliably
(for old code)

=over 4

=item CAVEAT

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=back

=head2 Thread::Specific - thread-specific keys

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Tie::Array - base class for tied arrays

=over 4

=item SYNOPSIS

=item DESCRIPTION

TIEARRAY classname, LIST, STORE this, index, value, FETCH this, index,
FETCHSIZE this, STORESIZE this, count, EXTEND this, count, EXISTS this,
key, DELETE this, key, CLEAR this, DESTROY this, PUSH this, LIST, POP this,
SHIFT this, UNSHIFT this, LIST, SPLICE this, offset, length, LIST

=item CAVEATS

=item AUTHOR

=back

=head2 Tie::File - Access the lines of a disk file via a Perl array

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item C<recsep>

=item C<autochomp>

=item C<mode>

=item C<memory>

=item C<dw_size>

=item Option Format

=back

=item Public Methods

=over 4

=item C<flock>

=item C<autochomp>

=item C<defer>, C<flush>, C<discard>, and C<autodefer>

=item C<offset>

=back

=item Tying to an already-opened filehandle

=item Deferred Writing

=over 4

=item Autodeferring

=back

=item CONCURRENT ACCESS TO FILES

=item CAVEATS

=item SUBCLASSING

=item WHAT ABOUT C<DB_File>?

=item AUTHOR

=item LICENSE

=item WARRANTY

=item THANKS

=item TODO

=back

=head2 Tie::Handle, Tie::StdHandle  - base class definitions for tied
handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

TIEHANDLE classname, LIST, WRITE this, scalar, length, offset, PRINT this,
LIST, PRINTF this, format, LIST, READ this, scalar, length, offset,
READLINE this, GETC this, CLOSE this, OPEN this, filename, BINMODE this,
EOF this, TELL this, SEEK this, offset, whence, DESTROY this

=item MORE INFORMATION

=item COMPATIBILITY

=back

=head2 Tie::Hash, Tie::StdHash, Tie::ExtraHash - base class definitions for
tied hashes

=over 4

=item SYNOPSIS

=item DESCRIPTION

TIEHASH classname, LIST, STORE this, key, value, FETCH this, key, FIRSTKEY
this, NEXTKEY this, lastkey, EXISTS this, key, DELETE this, key, CLEAR
this, SCALAR this

=item Inheriting from B<Tie::StdHash>

=item Inheriting from B<Tie::ExtraHash>

=item C<SCALAR>, C<UNTIE> and C<DESTROY>

=item MORE INFORMATION

=back

=head2 Tie::Memoize - add data to hash when needed

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Inheriting from B<Tie::Memoize>

=item EXAMPLE

=item BUGS

=item AUTHOR

=back

=head2 Tie::RefHash - use references as hash keys

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=item AUTHOR

=item VERSION

=item SEE ALSO

=back

=head2 Tie::Scalar, Tie::StdScalar - base class definitions for tied
scalars

=over 4

=item SYNOPSIS

=item DESCRIPTION

TIESCALAR classname, LIST, FETCH this, STORE this, value, DESTROY this

=item MORE INFORMATION

=back

=head2 Tie::SubstrHash - Fixed-table-size, fixed-key-length hashing

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=back

=head2 Time::HiRes - High resolution alarm, sleep, gettimeofday, interval
timers

=over 4

=item SYNOPSIS

=item DESCRIPTION

gettimeofday (), usleep ( $useconds ), nanosleep ( $nanoseconds ), ualarm (
$useconds [, $interval_useconds ] ), tv_interval, time (), sleep (
$floating_seconds ), alarm ( $floating_seconds [,
$interval_floating_seconds ] ), setitimer ( $which, $floating_seconds [,
$interval_floating_seconds ] ), getitimer ( $which ), clock_gettime (
$which ), clock_getres ( $which ), clock_nanosleep ( $which, $seconds,
$flags = 0), clock()

=item EXAMPLES

=item C API

=item DIAGNOSTICS

=over 4

=item negative time not invented yet

=item internal error: useconds < 0 (unsigned ... signed ...)

=back

=item CAVEATS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT AND LICENSE

=back

=head2 Time::Local - efficiently compute time from local and GMT time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Ambiguous Local Times (DST)

=item Non-Existent Local Times (DST)

=item Negative Epoch Values

=back

=item IMPLEMENTATION

=item BUGS

=item SUPPORT

=item AUTHOR

=back

=head2 Time::gmtime - by-name interface to Perl's built-in gmtime()
function

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item AUTHOR

=back

=head2 Time::localtime - by-name interface to Perl's built-in localtime()
function

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item AUTHOR

=back

=head2 Time::tm - internal object used by Time::gmtime and Time::localtime

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 UNIVERSAL - base class for ALL classes (blessed references)

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<< $obj->isa( TYPE ) >>, C<< CLASS->isa( TYPE ) >>, C<isa( VAL, TYPE )>,
C<TYPE>, C<$obj>, C<CLASS>, C<VAL>, C<< $obj->can( METHOD ) >>, C<<
CLASS->can( METHOD ) >>, C<can( VAL, METHOD )>, C<VERSION ( [ REQUIRE ] )>

=item EXPORTS

=back

=head2 Unicode::Collate - Unicode Collation Algorithm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Constructor and Tailoring

UCA_Version, alternate, backwards, entry, hangul_terminator, ignoreChar,
ignoreName, katakana_before_hiragana, level, normalization, overrideCJK,
overrideHangul, preprocess, rearrange, table, undefChar, undefName,
upper_before_lower, variable

=item Methods for Collation

C<@sorted = $Collator-E<gt>sort(@not_sorted)>, C<$result =
$Collator-E<gt>cmp($a, $b)>, C<$result = $Collator-E<gt>eq($a, $b)>,
C<$result = $Collator-E<gt>ne($a, $b)>, C<$result = $Collator-E<gt>lt($a,
$b)>, C<$result = $Collator-E<gt>le($a, $b)>, C<$result =
$Collator-E<gt>gt($a, $b)>, C<$result = $Collator-E<gt>ge($a, $b)>,
C<$sortKey = $Collator-E<gt>getSortKey($string)>, C<$sortKeyForm =
$Collator-E<gt>viewSortKey($string)>

=item Methods for Searching

C<$position = $Collator-E<gt>index($string, $substring[, $position])>,
C<($position, $length) = $Collator-E<gt>index($string, $substring[,
$position])>, C<$match_ref = $Collator-E<gt>match($string, $substring)>,
C<($match)   = $Collator-E<gt>match($string, $substring)>, C<@match =
$Collator-E<gt>gmatch($string, $substring)>, C<$count =
$Collator-E<gt>subst($string, $substring, $replacement)>, C<$count =
$Collator-E<gt>gsubst($string, $substring, $replacement)>

=item Other Methods

C<%old_tailoring = $Collator-E<gt>change(%new_tailoring)>, C<$version =
$Collator-E<gt>version()>, C<UCA_Version()>, C<Base_Unicode_Version()>

=back

=item EXPORT

=item INSTALL

=item CAVEATS

Normalization, Conformance Test

=item AUTHOR, COPYRIGHT AND LICENSE

=item SEE ALSO

Unicode Collation Algorithm - UTS #10, The Default Unicode Collation
Element Table (DUCET), The conformance test for the UCA, Hangul Syllable
Type, Unicode Normalization Forms - UAX #15

=back

=head2 Unicode::Normalize - Unicode Normalization Forms

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Normalization Forms

C<$NFD_string = NFD($string)>, C<$NFC_string = NFC($string)>,
C<$NFKD_string = NFKD($string)>, C<$NFKC_string = NFKC($string)>,
C<$FCD_string = FCD($string)>, C<$FCC_string = FCC($string)>,
C<$normalized_string = normalize($form_name, $string)>

=item Decomposition and Composition

C<$decomposed_string = decompose($string)>, C<$decomposed_string =
decompose($string, $useCompatMapping)>, C<$reordered_string  =
reorder($string)>, C<$composed_string	= compose($string)>

=item Quick Check

C<$result = checkNFD($string)>, C<$result = checkNFC($string)>, C<$result =
checkNFKD($string)>, C<$result = checkNFKC($string)>, C<$result =
checkFCD($string)>, C<$result = checkFCC($string)>, C<$result =
check($form_name, $string)>

=item Character Data

C<$canonical_decomposed = getCanon($codepoint)>,
C<$compatibility_decomposed = getCompat($codepoint)>,
C<$codepoint_composite = getComposite($codepoint_here, $codepoint_next)>,
C<$combining_class = getCombinClass($codepoint)>, C<$is_exclusion =
isExclusion($codepoint)>, C<$is_singleton = isSingleton($codepoint)>,
C<$is_non_starter_decomposition = isNonStDecomp($codepoint)>,
C<$may_be_composed_with_prev_char = isComp2nd($codepoint)>

=back

=item EXPORT

=item CAVEATS

Perl's version vs. Unicode version, Correction of decomposition mapping,
Revised definition of canonical composition

=item AUTHOR

=item SEE ALSO

http://www.unicode.org/reports/tr15/,
http://www.unicode.org/Public/UNIDATA/DerivedNormalizationProps.txt,
http://www.unicode.org/Public/UNIDATA/NormalizationCorrections.txt,
http://www.unicode.org/review/pr-29.html, http://www.unicode.org/notes/tn5/

=back

=head2 Unicode::UCD - Unicode character database

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item charinfo

=back

=over 4

=item charblock

=back

=over 4

=item charscript

=back

=over 4

=item charblocks

=back

=over 4

=item charscripts

=back

=over 4

=item Blocks versus Scripts

=item Matching Scripts and Blocks

=item Code Point Arguments

=item charinrange

=back

=over 4

=item compexcl

=back

=over 4

=item casefold

=back

=over 4

=item casespec

=back

=over 4

=item namedseq()

=back

=over 4

=item Unicode::UCD::UnicodeVersion

=back

=over 4

=item Implementation Note

=back

=over 4

=item BUGS

=item AUTHOR

=back

=head2 User::grent - by-name interface to Perl's built-in getgr*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item AUTHOR

=back

=head2 User::pwent - by-name interface to Perl's built-in getpw*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item System Specifics

=back

=item NOTE

=item AUTHOR

=item HISTORY

March 18th, 2000

=back

=head2 XSLoader - Dynamically load C libraries into Perl code

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Migration from C<DynaLoader>

=item Backward compatible boilerplate

=back

=item Order of initialization: early load()

=over 4

=item The most hairy case

=back

=item DIAGNOSTICS

Can't find '%s' symbol in %s, Can't load '%s' for module %s: %s, Undefined
symbols present after loading %s: %s, XSLoader::load('Your::Module',
$Your::Module::VERSION)

=item LIMITATIONS

=item BUGS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head1 AUXILIARY DOCUMENTATION

Here should be listed all the extra programs' documentation, but they
don't all have manual pages yet:

=over 4

=item a2p

=item c2ph

=item dprofpp

=item h2ph

=item h2xs

=item perlbug

=item perldoc

=item pl2pm

=item pod2html

=item pod2man

=item s2p

=item splain

=item xsubpp

=back

=head1 AUTHOR

Larry Wall <F<larry@wall.org>>, with the help of oodles
of other folks.

